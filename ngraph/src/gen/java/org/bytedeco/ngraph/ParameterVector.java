// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.ngraph;

import org.bytedeco.ngraph.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.ngraph.global.ngraph.*;

    /** \brief Zero or more nodes. */
    @Namespace("ngraph") @Properties(inherit = org.bytedeco.ngraph.presets.ngraph.class)
public class ParameterVector extends NgraphParameterVector {
        static { Loader.load(); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public ParameterVector(Pointer p) { super(p); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public ParameterVector(long size) { super((Pointer)null); allocateArray(size); }
        private native void allocateArray(long size);
        @Override public ParameterVector position(long position) {
            return (ParameterVector)super.position(position);
        }
    

        public ParameterVector(@Const @ByRef NgraphParameterVector parameters) { super((Pointer)null); allocate(parameters); }
        private native void allocate(@Const @ByRef NgraphParameterVector parameters);

        public ParameterVector(@Const @ByRef ParameterVector parameters) { super((Pointer)null); allocate(parameters); }
        private native void allocate(@Const @ByRef ParameterVector parameters);

        public native @ByRef @Name("operator =") ParameterVector put(@Const @ByRef ParameterVector parameters);

        public ParameterVector() { super((Pointer)null); allocate(); }
        private native void allocate();
    }
