// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.modsecurity;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.modsecurity.global.modsecurity.*;



@Namespace("modsecurity") @NoOffset @Properties(inherit = org.bytedeco.modsecurity.presets.modsecurity.class)
public class ConfigString extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ConfigString(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ConfigString(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public ConfigString position(long position) {
        return (ConfigString)super.position(position);
    }
    @Override public ConfigString getPointer(long i) {
        return new ConfigString((Pointer)this).position(position + i);
    }

    public ConfigString() { super((Pointer)null); allocate(); }
    private native void allocate();
    public native @Cast("bool") boolean m_set(); public native ConfigString m_set(boolean setter);
    public native @StdString BytePointer m_value(); public native ConfigString m_value(BytePointer setter);

    public native void merge(ConfigString from);
}
