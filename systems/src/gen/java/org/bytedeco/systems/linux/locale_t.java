// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.systems.linux;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.linux.*;


/* Structure for reentrant locale using functions.  This is an
   (almost) opaque type for the user level programs.  The file and
   this data structure is not standardized.  Don't rely on it.  It can
   go away without warning.  */
@Name("__locale_struct") @Properties(inherit = org.bytedeco.systems.presets.linux.class)
public class locale_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public locale_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public locale_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public locale_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public locale_t position(long position) {
        return (locale_t)super.position(position);
    }
    @Override public locale_t getPointer(long i) {
        return new locale_t((Pointer)this).position(position + i);
    }

  /* Note: LC_ALL is not a valid index into this array.  */
  public native @Cast("__locale_data*") Pointer __locales(int i); public native locale_t __locales(int i, Pointer setter);
  @MemberGetter public native @Cast("__locale_data**") PointerPointer __locales(); /* 13 = __LC_LAST. */

  /* To increase the speed of this solution we add some special members.  */
  public native @Cast("const unsigned short int*") ShortPointer __ctype_b(); public native locale_t __ctype_b(ShortPointer setter);
  public native @Const IntPointer __ctype_tolower(); public native locale_t __ctype_tolower(IntPointer setter);
  public native @Const IntPointer __ctype_toupper(); public native locale_t __ctype_toupper(IntPointer setter);

  /* Note: LC_ALL is not a valid index into this array.  */
  public native @Cast("const char*") BytePointer __names(int i); public native locale_t __names(int i, BytePointer setter);
  @MemberGetter public native @Cast("const char**") PointerPointer __names();
}
