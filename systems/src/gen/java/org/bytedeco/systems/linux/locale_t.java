// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.linux;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.linux.*;


/* POSIX.1-2008: the locale_t type, representing a locale context
   (implementation-namespace version).  This type should be treated
   as opaque by applications; some details are exposed for the sake of
   efficiency in e.g. ctype functions.  */

@Name("__locale_struct") @Properties(inherit = org.bytedeco.systems.presets.linux.class)
public class locale_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public locale_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public locale_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public locale_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public locale_t position(long position) {
        return (locale_t)super.position(position);
    }
    @Override public locale_t getPointer(long i) {
        return new locale_t((Pointer)this).offsetAddress(i);
    }

  /* Note: LC_ALL is not a valid index into this array.  */
  public native @Cast("__locale_data*") Pointer __locales(int i); public native locale_t __locales(int i, Pointer setter);
  @MemberGetter public native @Cast("__locale_data**") PointerPointer __locales(); /* 13 = __LC_LAST. */

  /* To increase the speed of this solution we add some special members.  */
  public native @Cast("const unsigned short int*") ShortPointer __ctype_b(); public native locale_t __ctype_b(ShortPointer setter);
  public native @Const IntPointer __ctype_tolower(); public native locale_t __ctype_tolower(IntPointer setter);
  public native @Const IntPointer __ctype_toupper(); public native locale_t __ctype_toupper(IntPointer setter);

  /* Note: LC_ALL is not a valid index into this array.  */
  public native @Cast("const char*") BytePointer __names(int i); public native locale_t __names(int i, BytePointer setter);
  @MemberGetter public native @Cast("const char**") PointerPointer __names();
}
