// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class ANON_OBJECT_HEADER_V2 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ANON_OBJECT_HEADER_V2() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ANON_OBJECT_HEADER_V2(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ANON_OBJECT_HEADER_V2(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ANON_OBJECT_HEADER_V2 position(long position) {
        return (ANON_OBJECT_HEADER_V2)super.position(position);
    }

    public native @Cast("WORD") short Sig1(); public native ANON_OBJECT_HEADER_V2 Sig1(short Sig1);            // Must be IMAGE_FILE_MACHINE_UNKNOWN
    public native @Cast("WORD") short Sig2(); public native ANON_OBJECT_HEADER_V2 Sig2(short Sig2);            // Must be 0xffff
    public native @Cast("WORD") short Version(); public native ANON_OBJECT_HEADER_V2 Version(short Version);         // >= 2 (implies the Flags field is present - otherwise V1)
    public native @Cast("WORD") short Machine(); public native ANON_OBJECT_HEADER_V2 Machine(short Machine);
    public native @Cast("DWORD") int TimeDateStamp(); public native ANON_OBJECT_HEADER_V2 TimeDateStamp(int TimeDateStamp);
    public native @ByRef @Cast("CLSID*") GUID ClassID(); public native ANON_OBJECT_HEADER_V2 ClassID(GUID ClassID);         // Used to invoke CoCreateInstance
    public native @Cast("DWORD") int SizeOfData(); public native ANON_OBJECT_HEADER_V2 SizeOfData(int SizeOfData);      // Size of data that follows the header
    public native @Cast("DWORD") int Flags(); public native ANON_OBJECT_HEADER_V2 Flags(int Flags);           // 0x1 -> contains metadata
    public native @Cast("DWORD") int MetaDataSize(); public native ANON_OBJECT_HEADER_V2 MetaDataSize(int MetaDataSize);    // Size of CLR metadata
    public native @Cast("DWORD") int MetaDataOffset(); public native ANON_OBJECT_HEADER_V2 MetaDataOffset(int MetaDataOffset);  // Offset of CLR metadata
}
