// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class IMAGE_POLICY_ENTRY extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public IMAGE_POLICY_ENTRY() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public IMAGE_POLICY_ENTRY(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IMAGE_POLICY_ENTRY(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public IMAGE_POLICY_ENTRY position(long position) {
        return (IMAGE_POLICY_ENTRY)super.position(position);
    }
    @Override public IMAGE_POLICY_ENTRY getPointer(long i) {
        return new IMAGE_POLICY_ENTRY((Pointer)this).offsetAddress(i);
    }

    public native @Cast("IMAGE_POLICY_ENTRY_TYPE") int Type(); public native IMAGE_POLICY_ENTRY Type(int setter);
    public native @Cast("IMAGE_POLICY_ID") int PolicyId(); public native IMAGE_POLICY_ENTRY PolicyId(int setter);
        @Name("u.None") public native @Const Pointer u_None(); public native IMAGE_POLICY_ENTRY u_None(Pointer setter);
        @Name("u.BoolValue") public native @Cast("BOOLEAN") boolean u_BoolValue(); public native IMAGE_POLICY_ENTRY u_BoolValue(boolean setter);
        @Name("u.Int8Value") public native @Cast("INT8") byte u_Int8Value(); public native IMAGE_POLICY_ENTRY u_Int8Value(byte setter);
        @Name("u.UInt8Value") public native @Cast("UINT8") byte u_UInt8Value(); public native IMAGE_POLICY_ENTRY u_UInt8Value(byte setter);
        @Name("u.Int16Value") public native @Cast("INT16") short u_Int16Value(); public native IMAGE_POLICY_ENTRY u_Int16Value(short setter);
        @Name("u.UInt16Value") public native @Cast("UINT16") short u_UInt16Value(); public native IMAGE_POLICY_ENTRY u_UInt16Value(short setter);
        @Name("u.Int32Value") public native @Cast("INT32") int u_Int32Value(); public native IMAGE_POLICY_ENTRY u_Int32Value(int setter);
        @Name("u.UInt32Value") public native @Cast("UINT32") int u_UInt32Value(); public native IMAGE_POLICY_ENTRY u_UInt32Value(int setter);
        @Name("u.Int64Value") public native @Cast("INT64") long u_Int64Value(); public native IMAGE_POLICY_ENTRY u_Int64Value(long setter);
        @Name("u.UInt64Value") public native @Cast("UINT64") long u_UInt64Value(); public native IMAGE_POLICY_ENTRY u_UInt64Value(long setter);
        @Name("u.AnsiStringValue") public native @Cast("PCSTR") BytePointer u_AnsiStringValue(); public native IMAGE_POLICY_ENTRY u_AnsiStringValue(BytePointer setter);
        @Name("u.UnicodeStringValue") public native @Cast("PCWSTR") CharPointer u_UnicodeStringValue(); public native IMAGE_POLICY_ENTRY u_UnicodeStringValue(CharPointer setter);
}
