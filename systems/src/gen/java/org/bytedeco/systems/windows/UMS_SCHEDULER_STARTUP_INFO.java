// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class UMS_SCHEDULER_STARTUP_INFO extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public UMS_SCHEDULER_STARTUP_INFO() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public UMS_SCHEDULER_STARTUP_INFO(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public UMS_SCHEDULER_STARTUP_INFO(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public UMS_SCHEDULER_STARTUP_INFO position(long position) {
        return (UMS_SCHEDULER_STARTUP_INFO)super.position(position);
    }


    //
    // UMS Version the application was built to. Should be set to UMS_VERSION
    //
    public native @Cast("ULONG") long UmsVersion(); public native UMS_SCHEDULER_STARTUP_INFO UmsVersion(long UmsVersion);

    //
    // Completion List to associate the new User Scheduler to.
    //
    public native PUMS_COMPLETION_LIST CompletionList(); public native UMS_SCHEDULER_STARTUP_INFO CompletionList(PUMS_COMPLETION_LIST CompletionList);

    //
    // A pointer to the application-defined function that represents the starting
    // address of the Sheduler.
    //
    public native @Cast("PUMS_SCHEDULER_ENTRY_POINT") RTL_UMS_SCHEDULER_ENTRY_POINT SchedulerProc(); public native UMS_SCHEDULER_STARTUP_INFO SchedulerProc(RTL_UMS_SCHEDULER_ENTRY_POINT SchedulerProc);

    //
    // pointer to a variable to be passed to the scheduler uppon first activation.
    //
    public native @Cast("PVOID") Pointer SchedulerParam(); public native UMS_SCHEDULER_STARTUP_INFO SchedulerParam(Pointer SchedulerParam);

}
