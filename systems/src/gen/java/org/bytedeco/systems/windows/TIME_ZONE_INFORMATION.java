// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class TIME_ZONE_INFORMATION extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TIME_ZONE_INFORMATION() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TIME_ZONE_INFORMATION(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TIME_ZONE_INFORMATION(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TIME_ZONE_INFORMATION position(long position) {
        return (TIME_ZONE_INFORMATION)super.position(position);
    }

    public native @Cast("LONG") int Bias(); public native TIME_ZONE_INFORMATION Bias(int Bias);
    public native @Cast("WCHAR") char StandardName(int i); public native TIME_ZONE_INFORMATION StandardName(int i, char StandardName);
    @MemberGetter public native @Cast("WCHAR*") CharPointer StandardName();
    public native @ByRef SYSTEMTIME StandardDate(); public native TIME_ZONE_INFORMATION StandardDate(SYSTEMTIME StandardDate);
    public native @Cast("LONG") int StandardBias(); public native TIME_ZONE_INFORMATION StandardBias(int StandardBias);
    public native @Cast("WCHAR") char DaylightName(int i); public native TIME_ZONE_INFORMATION DaylightName(int i, char DaylightName);
    @MemberGetter public native @Cast("WCHAR*") CharPointer DaylightName();
    public native @ByRef SYSTEMTIME DaylightDate(); public native TIME_ZONE_INFORMATION DaylightDate(SYSTEMTIME DaylightDate);
    public native @Cast("LONG") int DaylightBias(); public native TIME_ZONE_INFORMATION DaylightBias(int DaylightBias);
}
