// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class PROCESSOR_GROUP_INFO extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PROCESSOR_GROUP_INFO() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PROCESSOR_GROUP_INFO(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PROCESSOR_GROUP_INFO(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PROCESSOR_GROUP_INFO position(long position) {
        return (PROCESSOR_GROUP_INFO)super.position(position);
    }

    public native @Cast("BYTE") byte MaximumProcessorCount(); public native PROCESSOR_GROUP_INFO MaximumProcessorCount(byte MaximumProcessorCount);
    public native @Cast("BYTE") byte ActiveProcessorCount(); public native PROCESSOR_GROUP_INFO ActiveProcessorCount(byte ActiveProcessorCount);
    public native @Cast("BYTE") byte Reserved(int i); public native PROCESSOR_GROUP_INFO Reserved(int i, byte Reserved);
    @MemberGetter public native @Cast("BYTE*") BytePointer Reserved();
    public native @Cast("KAFFINITY") long ActiveProcessorMask(); public native PROCESSOR_GROUP_INFO ActiveProcessorMask(long ActiveProcessorMask);
}
