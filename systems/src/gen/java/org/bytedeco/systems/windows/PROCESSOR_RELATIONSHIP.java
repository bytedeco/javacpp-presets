// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class PROCESSOR_RELATIONSHIP extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PROCESSOR_RELATIONSHIP() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PROCESSOR_RELATIONSHIP(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PROCESSOR_RELATIONSHIP(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PROCESSOR_RELATIONSHIP position(long position) {
        return (PROCESSOR_RELATIONSHIP)super.position(position);
    }
    @Override public PROCESSOR_RELATIONSHIP getPointer(long i) {
        return new PROCESSOR_RELATIONSHIP((Pointer)this).position(position + i);
    }

    public native @Cast("BYTE") byte Flags(); public native PROCESSOR_RELATIONSHIP Flags(byte setter);
    public native @Cast("BYTE") byte Reserved(int i); public native PROCESSOR_RELATIONSHIP Reserved(int i, byte setter);
    @MemberGetter public native @Cast("BYTE*") BytePointer Reserved();
    public native @Cast("WORD") short GroupCount(); public native PROCESSOR_RELATIONSHIP GroupCount(short setter);
    public native @ByRef GROUP_AFFINITY GroupMask(int i); public native PROCESSOR_RELATIONSHIP GroupMask(int i, GROUP_AFFINITY setter);
    @MemberGetter public native GROUP_AFFINITY GroupMask();
}
