// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


//
//  Stream id structure
//
 @Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class WIN32_STREAM_ID extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public WIN32_STREAM_ID() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public WIN32_STREAM_ID(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public WIN32_STREAM_ID(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public WIN32_STREAM_ID position(long position) {
        return (WIN32_STREAM_ID)super.position(position);
    }

        public native @Cast("DWORD") int dwStreamId(); public native WIN32_STREAM_ID dwStreamId(int dwStreamId);
        public native @Cast("DWORD") int dwStreamAttributes(); public native WIN32_STREAM_ID dwStreamAttributes(int dwStreamAttributes);
        public native @ByRef LARGE_INTEGER Size(); public native WIN32_STREAM_ID Size(LARGE_INTEGER Size);
        public native @Cast("DWORD") int dwStreamNameSize(); public native WIN32_STREAM_ID dwStreamNameSize(int dwStreamNameSize);
        public native @Cast("WCHAR") char cStreamName(int i); public native WIN32_STREAM_ID cStreamName(int i, char cStreamName);
        @MemberGetter public native @Cast("WCHAR*") CharPointer cStreamName();
} 
