// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY position(long position) {
        return (PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY)super.position(position);
    }
    @Override public PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY getPointer(long i) {
        return new PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY((Pointer)this).offsetAddress(i);
    }

        public native @Cast("DWORD") int Flags(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY Flags(int setter);
            public native @Cast("DWORD") @NoOffset int EnableExportAddressFilter(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY EnableExportAddressFilter(int setter);
            public native @Cast("DWORD") @NoOffset int AuditExportAddressFilter(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY AuditExportAddressFilter(int setter);

            public native @Cast("DWORD") @NoOffset int EnableExportAddressFilterPlus(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY EnableExportAddressFilterPlus(int setter);
            public native @Cast("DWORD") @NoOffset int AuditExportAddressFilterPlus(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY AuditExportAddressFilterPlus(int setter);

            public native @Cast("DWORD") @NoOffset int EnableImportAddressFilter(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY EnableImportAddressFilter(int setter);
            public native @Cast("DWORD") @NoOffset int AuditImportAddressFilter(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY AuditImportAddressFilter(int setter);

            public native @Cast("DWORD") @NoOffset int EnableRopStackPivot(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY EnableRopStackPivot(int setter);
            public native @Cast("DWORD") @NoOffset int AuditRopStackPivot(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY AuditRopStackPivot(int setter);

            public native @Cast("DWORD") @NoOffset int EnableRopCallerCheck(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY EnableRopCallerCheck(int setter);
            public native @Cast("DWORD") @NoOffset int AuditRopCallerCheck(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY AuditRopCallerCheck(int setter);

            public native @Cast("DWORD") @NoOffset int EnableRopSimExec(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY EnableRopSimExec(int setter);
            public native @Cast("DWORD") @NoOffset int AuditRopSimExec(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY AuditRopSimExec(int setter);

            public native @Cast("DWORD") @NoOffset int ReservedFlags(); public native PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY ReservedFlags(int setter);  
}
