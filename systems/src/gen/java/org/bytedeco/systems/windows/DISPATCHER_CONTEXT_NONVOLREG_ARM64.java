// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class DISPATCHER_CONTEXT_NONVOLREG_ARM64 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public DISPATCHER_CONTEXT_NONVOLREG_ARM64() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public DISPATCHER_CONTEXT_NONVOLREG_ARM64(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DISPATCHER_CONTEXT_NONVOLREG_ARM64(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public DISPATCHER_CONTEXT_NONVOLREG_ARM64 position(long position) {
        return (DISPATCHER_CONTEXT_NONVOLREG_ARM64)super.position(position);
    }
    @Override public DISPATCHER_CONTEXT_NONVOLREG_ARM64 getPointer(long i) {
        return new DISPATCHER_CONTEXT_NONVOLREG_ARM64((Pointer)this).offsetAddress(i);
    }

    public native @Cast("BYTE") byte Buffer(int i); public native DISPATCHER_CONTEXT_NONVOLREG_ARM64 Buffer(int i, byte setter);
    @MemberGetter public native @Cast("BYTE*") BytePointer Buffer();
        public native @Cast("DWORD64") long GpNvRegs(int i); public native DISPATCHER_CONTEXT_NONVOLREG_ARM64 GpNvRegs(int i, long setter);
        @MemberGetter public native @Cast("DWORD64*") LongPointer GpNvRegs();      // [x19, x29(Fp)]
        public native double FpNvRegs(int i); public native DISPATCHER_CONTEXT_NONVOLREG_ARM64 FpNvRegs(int i, double setter);
        @MemberGetter public native DoublePointer FpNvRegs();       // [V8d0, v15d0] 
}
