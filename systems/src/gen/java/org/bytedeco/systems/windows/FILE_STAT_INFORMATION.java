// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


// #if (_WIN32_WINNT >= _WIN32_WINNT_WIN10_RS3)
// #endif

// #if (_WIN32_WINNT >= _WIN32_WINNT_WIN10_NI)
// #endif


//================ FileStatInformation ========================================

//
// Note: Fields up through EffectiveAccess are the same as in
// FILE_STAT_LX_INFORMATION, and up through NumberOfLinks are the same
// as in FILE_STAT_BASIC_INFORMATION.
//

@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class FILE_STAT_INFORMATION extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public FILE_STAT_INFORMATION() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public FILE_STAT_INFORMATION(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FILE_STAT_INFORMATION(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public FILE_STAT_INFORMATION position(long position) {
        return (FILE_STAT_INFORMATION)super.position(position);
    }
    @Override public FILE_STAT_INFORMATION getPointer(long i) {
        return new FILE_STAT_INFORMATION((Pointer)this).offsetAddress(i);
    }

    public native @ByRef LARGE_INTEGER FileId(); public native FILE_STAT_INFORMATION FileId(LARGE_INTEGER setter);
    public native @ByRef LARGE_INTEGER CreationTime(); public native FILE_STAT_INFORMATION CreationTime(LARGE_INTEGER setter);
    public native @ByRef LARGE_INTEGER LastAccessTime(); public native FILE_STAT_INFORMATION LastAccessTime(LARGE_INTEGER setter);
    public native @ByRef LARGE_INTEGER LastWriteTime(); public native FILE_STAT_INFORMATION LastWriteTime(LARGE_INTEGER setter);
    public native @ByRef LARGE_INTEGER ChangeTime(); public native FILE_STAT_INFORMATION ChangeTime(LARGE_INTEGER setter);
    public native @ByRef LARGE_INTEGER AllocationSize(); public native FILE_STAT_INFORMATION AllocationSize(LARGE_INTEGER setter);
    public native @ByRef LARGE_INTEGER EndOfFile(); public native FILE_STAT_INFORMATION EndOfFile(LARGE_INTEGER setter);
    public native @Cast("DWORD") int FileAttributes(); public native FILE_STAT_INFORMATION FileAttributes(int setter);
    public native @Cast("DWORD") int ReparseTag(); public native FILE_STAT_INFORMATION ReparseTag(int setter);
    public native @Cast("DWORD") int NumberOfLinks(); public native FILE_STAT_INFORMATION NumberOfLinks(int setter);
    public native @Cast("ACCESS_MASK") int EffectiveAccess(); public native FILE_STAT_INFORMATION EffectiveAccess(int setter);
}
