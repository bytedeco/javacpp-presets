// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


// #if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)

@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class BY_HANDLE_FILE_INFORMATION extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public BY_HANDLE_FILE_INFORMATION() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public BY_HANDLE_FILE_INFORMATION(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public BY_HANDLE_FILE_INFORMATION(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public BY_HANDLE_FILE_INFORMATION position(long position) {
        return (BY_HANDLE_FILE_INFORMATION)super.position(position);
    }

    public native @Cast("DWORD") int dwFileAttributes(); public native BY_HANDLE_FILE_INFORMATION dwFileAttributes(int dwFileAttributes);
    public native @ByRef FILETIME ftCreationTime(); public native BY_HANDLE_FILE_INFORMATION ftCreationTime(FILETIME ftCreationTime);
    public native @ByRef FILETIME ftLastAccessTime(); public native BY_HANDLE_FILE_INFORMATION ftLastAccessTime(FILETIME ftLastAccessTime);
    public native @ByRef FILETIME ftLastWriteTime(); public native BY_HANDLE_FILE_INFORMATION ftLastWriteTime(FILETIME ftLastWriteTime);
    public native @Cast("DWORD") int dwVolumeSerialNumber(); public native BY_HANDLE_FILE_INFORMATION dwVolumeSerialNumber(int dwVolumeSerialNumber);
    public native @Cast("DWORD") int nFileSizeHigh(); public native BY_HANDLE_FILE_INFORMATION nFileSizeHigh(int nFileSizeHigh);
    public native @Cast("DWORD") int nFileSizeLow(); public native BY_HANDLE_FILE_INFORMATION nFileSizeLow(int nFileSizeLow);
    public native @Cast("DWORD") int nNumberOfLinks(); public native BY_HANDLE_FILE_INFORMATION nNumberOfLinks(int nNumberOfLinks);
    public native @Cast("DWORD") int nFileIndexHigh(); public native BY_HANDLE_FILE_INFORMATION nFileIndexHigh(int nFileIndexHigh);
    public native @Cast("DWORD") int nFileIndexLow(); public native BY_HANDLE_FILE_INFORMATION nFileIndexLow(int nFileIndexLow);
}
