// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


// #ifndef MIDL_PASS

@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class SE_TOKEN_USER extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SE_TOKEN_USER() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SE_TOKEN_USER(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SE_TOKEN_USER(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SE_TOKEN_USER position(long position) {
        return (SE_TOKEN_USER)super.position(position);
    }
    @Override public SE_TOKEN_USER getPointer(long i) {
        return new SE_TOKEN_USER((Pointer)this).offsetAddress(i);
    }

        public native @ByRef TOKEN_USER TokenUser(); public native SE_TOKEN_USER TokenUser(TOKEN_USER setter);
        public native @ByRef SID_AND_ATTRIBUTES User(); public native SE_TOKEN_USER User(SID_AND_ATTRIBUTES setter); 
        public native @ByRef SID Sid(); public native SE_TOKEN_USER Sid(SID setter);
        public native @Cast("BYTE") byte Buffer(int i); public native SE_TOKEN_USER Buffer(int i, byte setter);
        @MemberGetter public native @Cast("BYTE*") BytePointer Buffer(); 

}
