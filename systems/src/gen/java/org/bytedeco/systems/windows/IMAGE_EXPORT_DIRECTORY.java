// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


//
// DLL support.
//

//
// Export Format
//

@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class IMAGE_EXPORT_DIRECTORY extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public IMAGE_EXPORT_DIRECTORY() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public IMAGE_EXPORT_DIRECTORY(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IMAGE_EXPORT_DIRECTORY(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public IMAGE_EXPORT_DIRECTORY position(long position) {
        return (IMAGE_EXPORT_DIRECTORY)super.position(position);
    }

    public native @Cast("DWORD") int Characteristics(); public native IMAGE_EXPORT_DIRECTORY Characteristics(int Characteristics);
    public native @Cast("DWORD") int TimeDateStamp(); public native IMAGE_EXPORT_DIRECTORY TimeDateStamp(int TimeDateStamp);
    public native @Cast("WORD") short MajorVersion(); public native IMAGE_EXPORT_DIRECTORY MajorVersion(short MajorVersion);
    public native @Cast("WORD") short MinorVersion(); public native IMAGE_EXPORT_DIRECTORY MinorVersion(short MinorVersion);
    public native @Cast("DWORD") int Name(); public native IMAGE_EXPORT_DIRECTORY Name(int Name);
    public native @Cast("DWORD") int Base(); public native IMAGE_EXPORT_DIRECTORY Base(int Base);
    public native @Cast("DWORD") int NumberOfFunctions(); public native IMAGE_EXPORT_DIRECTORY NumberOfFunctions(int NumberOfFunctions);
    public native @Cast("DWORD") int NumberOfNames(); public native IMAGE_EXPORT_DIRECTORY NumberOfNames(int NumberOfNames);
    public native @Cast("DWORD") int AddressOfFunctions(); public native IMAGE_EXPORT_DIRECTORY AddressOfFunctions(int AddressOfFunctions);     // RVA from base of image
    public native @Cast("DWORD") int AddressOfNames(); public native IMAGE_EXPORT_DIRECTORY AddressOfNames(int AddressOfNames);         // RVA from base of image
    public native @Cast("DWORD") int AddressOfNameOrdinals(); public native IMAGE_EXPORT_DIRECTORY AddressOfNameOrdinals(int AddressOfNameOrdinals);  // RVA from base of image
}
