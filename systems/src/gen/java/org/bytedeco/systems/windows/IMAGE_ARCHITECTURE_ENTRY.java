// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class IMAGE_ARCHITECTURE_ENTRY extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public IMAGE_ARCHITECTURE_ENTRY() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public IMAGE_ARCHITECTURE_ENTRY(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IMAGE_ARCHITECTURE_ENTRY(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public IMAGE_ARCHITECTURE_ENTRY position(long position) {
        return (IMAGE_ARCHITECTURE_ENTRY)super.position(position);
    }

    public native @Cast("DWORD") int FixupInstRVA(); public native IMAGE_ARCHITECTURE_ENTRY FixupInstRVA(int FixupInstRVA);                         // RVA of instruction to fixup
    public native @Cast("DWORD") int NewInst(); public native IMAGE_ARCHITECTURE_ENTRY NewInst(int NewInst);                              // fixup instruction (see alphaops.h)
}
