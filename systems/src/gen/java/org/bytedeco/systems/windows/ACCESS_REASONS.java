// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class ACCESS_REASONS extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ACCESS_REASONS() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ACCESS_REASONS(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ACCESS_REASONS(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ACCESS_REASONS position(long position) {
        return (ACCESS_REASONS)super.position(position);
    }

        public native @Cast("ACCESS_REASON") int Data(int i); public native ACCESS_REASONS Data(int i, int Data);
        @MemberGetter public native @Cast("ACCESS_REASON*") IntPointer Data();
}
