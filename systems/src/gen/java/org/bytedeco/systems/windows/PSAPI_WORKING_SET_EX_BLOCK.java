// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class PSAPI_WORKING_SET_EX_BLOCK extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PSAPI_WORKING_SET_EX_BLOCK() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PSAPI_WORKING_SET_EX_BLOCK(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PSAPI_WORKING_SET_EX_BLOCK(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PSAPI_WORKING_SET_EX_BLOCK position(long position) {
        return (PSAPI_WORKING_SET_EX_BLOCK)super.position(position);
    }
    @Override public PSAPI_WORKING_SET_EX_BLOCK getPointer(long i) {
        return new PSAPI_WORKING_SET_EX_BLOCK((Pointer)this).position(position + i);
    }

    public native @Cast("ULONG_PTR") long Flags(); public native PSAPI_WORKING_SET_EX_BLOCK Flags(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long Valid(); public native PSAPI_WORKING_SET_EX_BLOCK Valid(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long ShareCount(); public native PSAPI_WORKING_SET_EX_BLOCK ShareCount(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long Win32Protection(); public native PSAPI_WORKING_SET_EX_BLOCK Win32Protection(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long Shared(); public native PSAPI_WORKING_SET_EX_BLOCK Shared(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long Node(); public native PSAPI_WORKING_SET_EX_BLOCK Node(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long Locked(); public native PSAPI_WORKING_SET_EX_BLOCK Locked(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long LargePage(); public native PSAPI_WORKING_SET_EX_BLOCK LargePage(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long Reserved(); public native PSAPI_WORKING_SET_EX_BLOCK Reserved(long setter);
            public native @Cast("ULONG_PTR") @NoOffset long Bad(); public native PSAPI_WORKING_SET_EX_BLOCK Bad(long setter);

// #if defined(_WIN64)
            public native @Cast("ULONG_PTR") @NoOffset long ReservedUlong(); public native PSAPI_WORKING_SET_EX_BLOCK ReservedUlong(long setter);
// #endif
            @Name("Invalid.Valid") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Valid(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Valid(long setter);            // Valid = 0 in this format.
            @Name("Invalid.Reserved0") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Reserved0(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Reserved0(long setter);
            @Name("Invalid.Shared") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Shared(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Shared(long setter);
            @Name("Invalid.Reserved1") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Reserved1(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Reserved1(long setter);
            @Name("Invalid.Bad") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Bad(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Bad(long setter);

// #if defined(_WIN64)
            @Name("Invalid.ReservedUlong") public native @Cast("ULONG_PTR") @NoOffset long Invalid_ReservedUlong(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_ReservedUlong(long setter);
// #endif
}
