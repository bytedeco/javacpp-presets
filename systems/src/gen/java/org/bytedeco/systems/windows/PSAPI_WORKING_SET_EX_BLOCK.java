// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class PSAPI_WORKING_SET_EX_BLOCK extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PSAPI_WORKING_SET_EX_BLOCK() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PSAPI_WORKING_SET_EX_BLOCK(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PSAPI_WORKING_SET_EX_BLOCK(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PSAPI_WORKING_SET_EX_BLOCK position(long position) {
        return (PSAPI_WORKING_SET_EX_BLOCK)super.position(position);
    }

    public native @Cast("ULONG_PTR") long Flags(); public native PSAPI_WORKING_SET_EX_BLOCK Flags(long Flags);
            public native @Cast("ULONG_PTR") @NoOffset long Valid(); public native PSAPI_WORKING_SET_EX_BLOCK Valid(long Valid);
            public native @Cast("ULONG_PTR") @NoOffset long ShareCount(); public native PSAPI_WORKING_SET_EX_BLOCK ShareCount(long ShareCount);
            public native @Cast("ULONG_PTR") @NoOffset long Win32Protection(); public native PSAPI_WORKING_SET_EX_BLOCK Win32Protection(long Win32Protection);
            public native @Cast("ULONG_PTR") @NoOffset long Shared(); public native PSAPI_WORKING_SET_EX_BLOCK Shared(long Shared);
            public native @Cast("ULONG_PTR") @NoOffset long Node(); public native PSAPI_WORKING_SET_EX_BLOCK Node(long Node);
            public native @Cast("ULONG_PTR") @NoOffset long Locked(); public native PSAPI_WORKING_SET_EX_BLOCK Locked(long Locked);
            public native @Cast("ULONG_PTR") @NoOffset long LargePage(); public native PSAPI_WORKING_SET_EX_BLOCK LargePage(long LargePage);
            public native @Cast("ULONG_PTR") @NoOffset long Reserved(); public native PSAPI_WORKING_SET_EX_BLOCK Reserved(long Reserved);
            public native @Cast("ULONG_PTR") @NoOffset long Bad(); public native PSAPI_WORKING_SET_EX_BLOCK Bad(long Bad);

// #if defined(_WIN64)
            public native @Cast("ULONG_PTR") @NoOffset long ReservedUlong(); public native PSAPI_WORKING_SET_EX_BLOCK ReservedUlong(long ReservedUlong);
// #endif
            @Name("Invalid.Valid") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Valid(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Valid(long Invalid_Valid);            // Valid = 0 in this format.
            @Name("Invalid.Reserved0") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Reserved0(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Reserved0(long Invalid_Reserved0);
            @Name("Invalid.Shared") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Shared(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Shared(long Invalid_Shared);
            @Name("Invalid.Reserved1") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Reserved1(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Reserved1(long Invalid_Reserved1);
            @Name("Invalid.Bad") public native @Cast("ULONG_PTR") @NoOffset long Invalid_Bad(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_Bad(long Invalid_Bad);

// #if defined(_WIN64)
            @Name("Invalid.ReservedUlong") public native @Cast("ULONG_PTR") @NoOffset long Invalid_ReservedUlong(); public native PSAPI_WORKING_SET_EX_BLOCK Invalid_ReservedUlong(long Invalid_ReservedUlong);
// #endif
}
