// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class TOKEN_LOGGING_INFORMATION extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TOKEN_LOGGING_INFORMATION() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TOKEN_LOGGING_INFORMATION(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TOKEN_LOGGING_INFORMATION(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TOKEN_LOGGING_INFORMATION position(long position) {
        return (TOKEN_LOGGING_INFORMATION)super.position(position);
    }
    @Override public TOKEN_LOGGING_INFORMATION getPointer(long i) {
        return new TOKEN_LOGGING_INFORMATION((Pointer)this).offsetAddress(i);
    }

    public native @Cast("TOKEN_TYPE") int TokenType(); public native TOKEN_LOGGING_INFORMATION TokenType(int setter);
    public native @ByRef TOKEN_ELEVATION TokenElevation(); public native TOKEN_LOGGING_INFORMATION TokenElevation(TOKEN_ELEVATION setter);
    public native @Cast("TOKEN_ELEVATION_TYPE") int TokenElevationType(); public native TOKEN_LOGGING_INFORMATION TokenElevationType(int setter);
    public native @Cast("SECURITY_IMPERSONATION_LEVEL") int ImpersonationLevel(); public native TOKEN_LOGGING_INFORMATION ImpersonationLevel(int setter);
    public native @Cast("DWORD") int IntegrityLevel(); public native TOKEN_LOGGING_INFORMATION IntegrityLevel(int setter);
    public native @ByRef SID_AND_ATTRIBUTES User(); public native TOKEN_LOGGING_INFORMATION User(SID_AND_ATTRIBUTES setter);
    public native @Cast("PSID") Pointer TrustLevelSid(); public native TOKEN_LOGGING_INFORMATION TrustLevelSid(Pointer setter);
    public native @Cast("DWORD") int SessionId(); public native TOKEN_LOGGING_INFORMATION SessionId(int setter);
    public native @Cast("DWORD") int AppContainerNumber(); public native TOKEN_LOGGING_INFORMATION AppContainerNumber(int setter);
    public native @ByRef LUID AuthenticationId(); public native TOKEN_LOGGING_INFORMATION AuthenticationId(LUID setter);
    public native @Cast("DWORD") int GroupCount(); public native TOKEN_LOGGING_INFORMATION GroupCount(int setter);
    public native @Cast("DWORD") int GroupsLength(); public native TOKEN_LOGGING_INFORMATION GroupsLength(int setter);
    public native @Cast("PSID_AND_ATTRIBUTES") SID_AND_ATTRIBUTES Groups(); public native TOKEN_LOGGING_INFORMATION Groups(SID_AND_ATTRIBUTES setter);
}
