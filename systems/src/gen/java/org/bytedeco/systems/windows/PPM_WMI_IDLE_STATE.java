// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class PPM_WMI_IDLE_STATE extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PPM_WMI_IDLE_STATE() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PPM_WMI_IDLE_STATE(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PPM_WMI_IDLE_STATE(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PPM_WMI_IDLE_STATE position(long position) {
        return (PPM_WMI_IDLE_STATE)super.position(position);
    }

    public native @Cast("DWORD") int Latency(); public native PPM_WMI_IDLE_STATE Latency(int Latency);
    public native @Cast("DWORD") int Power(); public native PPM_WMI_IDLE_STATE Power(int Power);
    public native @Cast("DWORD") int TimeCheck(); public native PPM_WMI_IDLE_STATE TimeCheck(int TimeCheck);
    public native @Cast("BYTE") byte PromotePercent(); public native PPM_WMI_IDLE_STATE PromotePercent(byte PromotePercent);
    public native @Cast("BYTE") byte DemotePercent(); public native PPM_WMI_IDLE_STATE DemotePercent(byte DemotePercent);
    public native @Cast("BYTE") byte StateType(); public native PPM_WMI_IDLE_STATE StateType(byte StateType);
    public native @Cast("BYTE") byte Reserved(); public native PPM_WMI_IDLE_STATE Reserved(byte Reserved);
    public native @Cast("DWORD") int StateFlags(); public native PPM_WMI_IDLE_STATE StateFlags(int StateFlags);
    public native @Cast("DWORD") int Context(); public native PPM_WMI_IDLE_STATE Context(int Context);
    public native @Cast("DWORD") int IdleHandler(); public native PPM_WMI_IDLE_STATE IdleHandler(int IdleHandler);
    public native @Cast("DWORD") int Reserved1(); public native PPM_WMI_IDLE_STATE Reserved1(int Reserved1);            // reserved for future use
}
