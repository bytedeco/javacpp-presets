// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX position(long position) {
        return (_SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX)super.position(position);
    }

    public native @Cast("LOGICAL_PROCESSOR_RELATIONSHIP") int Relationship(); public native _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Relationship(int Relationship);
    public native @Cast("DWORD") int Size(); public native _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Size(int Size);
        public native @ByRef PROCESSOR_RELATIONSHIP Processor(); public native _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Processor(PROCESSOR_RELATIONSHIP Processor);
        public native @ByRef NUMA_NODE_RELATIONSHIP NumaNode(); public native _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX NumaNode(NUMA_NODE_RELATIONSHIP NumaNode);
        public native @ByRef CACHE_RELATIONSHIP Cache(); public native _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Cache(CACHE_RELATIONSHIP Cache);
        public native @ByRef GROUP_RELATIONSHIP Group(); public native _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX Group(GROUP_RELATIONSHIP Group); 
}
