// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.systems.windows;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.systems.global.windows.*;


@Properties(inherit = org.bytedeco.systems.presets.windows.class)
public class IMAGE_ENCLAVE_CONFIG64 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public IMAGE_ENCLAVE_CONFIG64() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public IMAGE_ENCLAVE_CONFIG64(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IMAGE_ENCLAVE_CONFIG64(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public IMAGE_ENCLAVE_CONFIG64 position(long position) {
        return (IMAGE_ENCLAVE_CONFIG64)super.position(position);
    }
    @Override public IMAGE_ENCLAVE_CONFIG64 getPointer(long i) {
        return new IMAGE_ENCLAVE_CONFIG64((Pointer)this).offsetAddress(i);
    }

    public native @Cast("DWORD") int Size(); public native IMAGE_ENCLAVE_CONFIG64 Size(int setter);
    public native @Cast("DWORD") int MinimumRequiredConfigSize(); public native IMAGE_ENCLAVE_CONFIG64 MinimumRequiredConfigSize(int setter);
    public native @Cast("DWORD") int PolicyFlags(); public native IMAGE_ENCLAVE_CONFIG64 PolicyFlags(int setter);
    public native @Cast("DWORD") int NumberOfImports(); public native IMAGE_ENCLAVE_CONFIG64 NumberOfImports(int setter);
    public native @Cast("DWORD") int ImportList(); public native IMAGE_ENCLAVE_CONFIG64 ImportList(int setter);
    public native @Cast("DWORD") int ImportEntrySize(); public native IMAGE_ENCLAVE_CONFIG64 ImportEntrySize(int setter);
    public native @Cast("BYTE") byte FamilyID(int i); public native IMAGE_ENCLAVE_CONFIG64 FamilyID(int i, byte setter);
    @MemberGetter public native @Cast("BYTE*") BytePointer FamilyID();
    public native @Cast("BYTE") byte ImageID(int i); public native IMAGE_ENCLAVE_CONFIG64 ImageID(int i, byte setter);
    @MemberGetter public native @Cast("BYTE*") BytePointer ImageID();
    public native @Cast("DWORD") int ImageVersion(); public native IMAGE_ENCLAVE_CONFIG64 ImageVersion(int setter);
    public native @Cast("DWORD") int SecurityVersion(); public native IMAGE_ENCLAVE_CONFIG64 SecurityVersion(int setter);
    public native @Cast("ULONGLONG") long EnclaveSize(); public native IMAGE_ENCLAVE_CONFIG64 EnclaveSize(long setter);
    public native @Cast("DWORD") int NumberOfThreads(); public native IMAGE_ENCLAVE_CONFIG64 NumberOfThreads(int setter);
    public native @Cast("DWORD") int EnclaveFlags(); public native IMAGE_ENCLAVE_CONFIG64 EnclaveFlags(int setter);
}
