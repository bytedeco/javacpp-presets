// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.leptonica;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.leptonica.global.lept.*;


    /** String array: an array of C strings */
@Name("Sarray") @Properties(inherit = org.bytedeco.leptonica.presets.lept.class)
public class SARRAY extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SARRAY() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SARRAY(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SARRAY(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SARRAY position(long position) {
        return (SARRAY)super.position(position);
    }
    @Override public SARRAY getPointer(long i) {
        return new SARRAY((Pointer)this).position(position + i);
    }

    /** size of allocated ptr array         */
    public native @Cast("l_int32") int nalloc(); public native SARRAY nalloc(int setter);
    /** number of strings allocated         */
    public native @Cast("l_int32") int n(); public native SARRAY n(int setter);
    /** reference count (1 if no clones)    */
    public native @Cast("l_int32") int refcount(); public native SARRAY refcount(int setter);
    /** string array                        */
    public native @Cast("char*") BytePointer array(int i); public native SARRAY array(int i, BytePointer setter);
    public native @Cast("char**") PointerPointer array(); public native SARRAY array(PointerPointer setter);
}
