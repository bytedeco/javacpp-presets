// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.leptonica;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.leptonica.global.lept.*;


/** Selection */
@Name("Sel") @Properties(inherit = org.bytedeco.leptonica.presets.lept.class)
public class SEL extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SEL() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SEL(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SEL(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SEL position(long position) {
        return (SEL)super.position(position);
    }

    /** sel height                               */
    public native @Cast("l_int32") int sy(); public native SEL sy(int sy);
    /** sel width                                */
    public native @Cast("l_int32") int sx(); public native SEL sx(int sx);
    /** y location of sel origin                 */
    public native @Cast("l_int32") int cy(); public native SEL cy(int cy);
    /** x location of sel origin                 */
    public native @Cast("l_int32") int cx(); public native SEL cx(int cx);
    /** {0,1,2}; data[i][j] in [row][col] order  */
    public native @Cast("l_int32*") IntPointer data(int i); public native SEL data(int i, IntPointer data);
    public native @Cast("l_int32**") PointerPointer data(); public native SEL data(PointerPointer data);
    /** used to find sel by name                 */
    public native @Cast("char*") BytePointer name(); public native SEL name(BytePointer name);
}
