// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.sentencepiece;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.sentencepiece.global.sentencepiece.*;


@Namespace("sentencepiece") @NoOffset @Properties(inherit = org.bytedeco.sentencepiece.presets.sentencepiece.class)
public class SentencePieceNormalizer extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SentencePieceNormalizer(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SentencePieceNormalizer(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public SentencePieceNormalizer position(long position) {
        return (SentencePieceNormalizer)super.position(position);
    }
    @Override public SentencePieceNormalizer getPointer(long i) {
        return new SentencePieceNormalizer((Pointer)this).offsetAddress(i);
    }

  public SentencePieceNormalizer() { super((Pointer)null); allocate(); }
  private native void allocate();

  

  

  public native @ByVal Status LoadFromSerializedProto(@StdString String serialized);

  public native @ByVal Status LoadFromRuleTSV(@StdString String filename);

  public native @ByVal Status LoadFromRuleName(@StdString String name);

  public native @ByVal Status Normalize(@StdString String input,
                                   @StdString @Cast({"char*", "std::string*"}) BytePointer normalized);

  public native @ByVal Status Normalize(@StdString String input,
                                   @StdString @Cast({"char*", "std::string*"}) BytePointer normalized,
                                   @Cast("size_t*") @StdVector SizeTPointer norm_to_orig);

  public native @StdString String Normalize(@StdString String input);

  public native NormalizerSpec mutable_normalizer_spec();

  public native @StdString String serialized_model_proto();
}
