// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow_flight;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;

import static org.bytedeco.arrow.global.arrow_flight.*;

@NoOffset @Name("std::pair<std::string,std::shared_ptr<arrow::flight::ServerMiddlewareFactory> >") @Properties(inherit = org.bytedeco.arrow.presets.arrow_flight.class)
public class ServerMiddlewareFactoryStringPair extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ServerMiddlewareFactoryStringPair(Pointer p) { super(p); }
    public ServerMiddlewareFactoryStringPair(String firstValue, ServerMiddlewareFactory secondValue) { this(); put(firstValue, secondValue); }
    public ServerMiddlewareFactoryStringPair(BytePointer firstValue, ServerMiddlewareFactory secondValue) { this(); put(firstValue, secondValue); }
    public ServerMiddlewareFactoryStringPair()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef ServerMiddlewareFactoryStringPair put(@ByRef ServerMiddlewareFactoryStringPair x);


    @MemberGetter public native @StdString String first(); public native ServerMiddlewareFactoryStringPair first(String first);
    @MemberGetter public native @SharedPtr ServerMiddlewareFactory second();  public native ServerMiddlewareFactoryStringPair second(ServerMiddlewareFactory second);
    @MemberSetter @Index public native ServerMiddlewareFactoryStringPair first(@StdString BytePointer first);

    public ServerMiddlewareFactoryStringPair put(String firstValue, ServerMiddlewareFactory secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }

    public ServerMiddlewareFactoryStringPair put(BytePointer firstValue, ServerMiddlewareFactory secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

