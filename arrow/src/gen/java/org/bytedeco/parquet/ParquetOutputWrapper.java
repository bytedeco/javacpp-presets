// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.parquet;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;

import static org.bytedeco.arrow.global.parquet.*;


@Namespace("parquet") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.parquet.class)
public class ParquetOutputWrapper extends OutputStream {
    static { Loader.load(); }
    /** Default native constructor. */
    public ParquetOutputWrapper() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ParquetOutputWrapper(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ParquetOutputWrapper(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ParquetOutputWrapper position(long position) {
        return (ParquetOutputWrapper)super.position(position);
    }
    @Override public ParquetOutputWrapper getPointer(long i) {
        return new ParquetOutputWrapper((Pointer)this).position(position + i);
    }


  // FileInterface
  public native @ByVal Status Close();
  public native @ByVal LongResult Tell();
  public native @Cast("bool") boolean closed();

  // Writable
  public native @ByVal Status Write(@Const Pointer data, @Cast("int64_t") long nbytes);
}
