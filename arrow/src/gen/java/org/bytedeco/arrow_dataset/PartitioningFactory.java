// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow_dataset;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.arrow.*;
import static org.bytedeco.arrow.global.arrow.*;
import org.bytedeco.parquet.*;
import static org.bytedeco.arrow.global.parquet.*;

import static org.bytedeco.arrow.global.arrow_dataset.*;


/** \brief PartitioningFactory provides creation of a partitioning  when the
 *  specific schema must be inferred from available paths (no explicit schema is known). */
@Namespace("arrow::dataset") @Properties(inherit = org.bytedeco.arrow.presets.arrow_dataset.class)
public class PartitioningFactory extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PartitioningFactory(Pointer p) { super(p); }


  /** \brief The name identifying the kind of partitioning */
  public native @StdString String type_name();

  /** Get the schema for the resulting Partitioning.
   *  This may reset internal state, for example dictionaries of unique representations. */
  public native @ByVal SchemaResult Inspect(
        @Const @ByRef StringVector paths);

  /** Create a partitioning using the provided schema
   *  (fields may be dropped). */
  public native @ByVal PartitioningResult Finish(
        @Const @SharedPtr @ByRef Schema schema);
}
