// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow::compute") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class RoundOptions extends FunctionOptions {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public RoundOptions(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public RoundOptions(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public RoundOptions position(long position) {
        return (RoundOptions)super.position(position);
    }
    @Override public RoundOptions getPointer(long i) {
        return new RoundOptions((Pointer)this).offsetAddress(i);
    }

  public RoundOptions(@Cast("int64_t") long ndigits/*=0*/,
                          RoundMode round_mode/*=arrow::compute::RoundMode::HALF_TO_EVEN*/) { super((Pointer)null); allocate(ndigits, round_mode); }
  private native void allocate(@Cast("int64_t") long ndigits/*=0*/,
                          RoundMode round_mode/*=arrow::compute::RoundMode::HALF_TO_EVEN*/);
  public RoundOptions() { super((Pointer)null); allocate(); }
  private native void allocate();
  public RoundOptions(@Cast("int64_t") long ndigits/*=0*/,
                          @Cast("arrow::compute::RoundMode") byte round_mode/*=arrow::compute::RoundMode::HALF_TO_EVEN*/) { super((Pointer)null); allocate(ndigits, round_mode); }
  private native void allocate(@Cast("int64_t") long ndigits/*=0*/,
                          @Cast("arrow::compute::RoundMode") byte round_mode/*=arrow::compute::RoundMode::HALF_TO_EVEN*/);
  @MemberGetter public static native byte kTypeName(int i);
  @MemberGetter public static native String kTypeName();
  public static native @ByVal RoundOptions Defaults();
  /** Rounding precision (number of digits to round to) */
  public native @Cast("int64_t") long ndigits(); public native RoundOptions ndigits(long setter);
  /** Rounding and tie-breaking mode */
  public native RoundMode round_mode(); public native RoundOptions round_mode(RoundMode setter);
}
