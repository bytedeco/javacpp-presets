// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


/** \brief Base class for specifying options configuring a function's behavior,
 *  such as error handling. */
@Namespace("arrow::compute") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class FunctionOptions extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FunctionOptions(Pointer p) { super(p); }


  public native @Const FunctionOptionsType options_type();
  public native String type_name();

  public native @Cast("bool") boolean Equals(@Const @ByRef FunctionOptions other);
  public native @StdString String ToString();
  public native @UniquePtr FunctionOptions Copy();
  /** \brief Serialize an options struct to a buffer. */
  public native @ByVal BufferResult Serialize();
  /** \brief Deserialize an options struct from a buffer.
   *  Note: this will only look for {@code type_name} in the default FunctionRegistry;
   *  to use a custom FunctionRegistry, look up the FunctionOptionsType, then
   *  call FunctionOptionsType::Deserialize(). */
  public static native @ByVal FunctionOptionsResult Deserialize(
        @StdString String type_name, @Const @ByRef ArrowBuffer buffer);
  public static native @ByVal FunctionOptionsResult Deserialize(
        @StdString BytePointer type_name, @Const @ByRef ArrowBuffer buffer);
}
