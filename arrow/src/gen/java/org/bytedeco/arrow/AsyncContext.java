// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow::io") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class AsyncContext extends IOContext {
    static { Loader.load(); }

  
    public AsyncContext() { super((Pointer)null); allocate(); }
    private native void allocate();
  
    public AsyncContext(@ByVal StopToken stop_token) { super((Pointer)null); allocate(stop_token); }
    private native void allocate(@ByVal StopToken stop_token);
  
    public AsyncContext(MemoryPool pool, @ByVal(nullValue = "arrow::StopToken::Unstoppable()") StopToken stop_token) { super((Pointer)null); allocate(pool, stop_token); }
    private native void allocate(MemoryPool pool, @ByVal(nullValue = "arrow::StopToken::Unstoppable()") StopToken stop_token);
    public AsyncContext(MemoryPool pool) { super((Pointer)null); allocate(pool); }
    private native void allocate(MemoryPool pool);
  
    public AsyncContext(MemoryPool pool, Executor executor,
                         @ByVal(nullValue = "arrow::StopToken::Unstoppable()") StopToken stop_token,
                         @Cast("int64_t") long external_id/*=-1*/) { super((Pointer)null); allocate(pool, executor, stop_token, external_id); }
    private native void allocate(MemoryPool pool, Executor executor,
                         @ByVal(nullValue = "arrow::StopToken::Unstoppable()") StopToken stop_token,
                         @Cast("int64_t") long external_id/*=-1*/);
    public AsyncContext(MemoryPool pool, Executor executor) { super((Pointer)null); allocate(pool, executor); }
    private native void allocate(MemoryPool pool, Executor executor);
  
    public AsyncContext(Executor executor,
                         @ByVal(nullValue = "arrow::StopToken::Unstoppable()") StopToken stop_token,
                         @Cast("int64_t") long external_id/*=-1*/) { super((Pointer)null); allocate(executor, stop_token, external_id); }
    private native void allocate(Executor executor,
                         @ByVal(nullValue = "arrow::StopToken::Unstoppable()") StopToken stop_token,
                         @Cast("int64_t") long external_id/*=-1*/);
    public AsyncContext(Executor executor) { super((Pointer)null); allocate(executor); }
    private native void allocate(Executor executor);
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AsyncContext(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public AsyncContext(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public AsyncContext position(long position) {
        return (AsyncContext)super.position(position);
    }
    @Override public AsyncContext getPointer(long i) {
        return new AsyncContext((Pointer)this).offsetAddress(i);
    }

}
