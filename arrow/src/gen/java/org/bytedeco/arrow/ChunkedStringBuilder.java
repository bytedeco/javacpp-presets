// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow::internal") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class ChunkedStringBuilder extends ChunkedBinaryBuilder {
    static { Loader.load(); }

  
    public ChunkedStringBuilder(int max_chunk_value_length,
                                    MemoryPool pool/*=arrow::default_memory_pool()*/) { super((Pointer)null); allocate(max_chunk_value_length, pool); }
    private native void allocate(int max_chunk_value_length,
                                    MemoryPool pool/*=arrow::default_memory_pool()*/);
    public ChunkedStringBuilder(int max_chunk_value_length) { super((Pointer)null); allocate(max_chunk_value_length); }
    private native void allocate(int max_chunk_value_length);
  
    public ChunkedStringBuilder(int max_chunk_value_length, int max_chunk_length,
                           MemoryPool pool/*=arrow::default_memory_pool()*/) { super((Pointer)null); allocate(max_chunk_value_length, max_chunk_length, pool); }
    private native void allocate(int max_chunk_value_length, int max_chunk_length,
                           MemoryPool pool/*=arrow::default_memory_pool()*/);
    public ChunkedStringBuilder(int max_chunk_value_length, int max_chunk_length) { super((Pointer)null); allocate(max_chunk_value_length, max_chunk_length); }
    private native void allocate(int max_chunk_value_length, int max_chunk_length);
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ChunkedStringBuilder(Pointer p) { super(p); }


  public native @ByVal Status Finish(ArrayVector out);
}
