// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import org.bytedeco.arrow.Function;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


// Helper to find the synchronous counterpart for a Future

@Name("arrow::detail::SyncType<arrow::internal::Empty>") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class SyncType extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SyncType() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SyncType(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SyncType(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SyncType position(long position) {
        return (SyncType)super.position(position);
    }
    @Override public SyncType getPointer(long i) {
        return new SyncType((Pointer)this).offsetAddress(i);
    }

}
