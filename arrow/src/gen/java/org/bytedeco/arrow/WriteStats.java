// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow::ipc") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class WriteStats extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public WriteStats() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public WriteStats(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public WriteStats(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public WriteStats position(long position) {
        return (WriteStats)super.position(position);
    }
    @Override public WriteStats getPointer(long i) {
        return new WriteStats((Pointer)this).position(position + i);
    }

  /** Number of IPC messages written. */
  public native @Cast("int64_t") long num_messages(); public native WriteStats num_messages(long setter);
  /** Number of record batches written. */
  
  ///
  public native @Cast("int64_t") long num_record_batches(); public native WriteStats num_record_batches(long setter);
  /** Number of dictionary batches written.
   * 
   *  Note: num_dictionary_batches >= num_dictionary_deltas + num_replaced_dictionaries */
  public native @Cast("int64_t") long num_dictionary_batches(); public native WriteStats num_dictionary_batches(long setter);

  /** Number of dictionary deltas written. */
  public native @Cast("int64_t") long num_dictionary_deltas(); public native WriteStats num_dictionary_deltas(long setter);
  /** Number of replaced dictionaries (i.e. where a dictionary batch replaces
   *  an existing dictionary with an unrelated new dictionary). */
  public native @Cast("int64_t") long num_replaced_dictionaries(); public native WriteStats num_replaced_dictionaries(long setter);
}
