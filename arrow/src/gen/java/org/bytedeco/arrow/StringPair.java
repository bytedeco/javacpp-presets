// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;

@NoOffset @Name("std::pair<std::string,std::string>") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class StringPair extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public StringPair(Pointer p) { super(p); }
    public StringPair(String firstValue, String secondValue) { this(); put(firstValue, secondValue); }
    public StringPair(BytePointer firstValue, BytePointer secondValue) { this(); put(firstValue, secondValue); }
    public StringPair()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef StringPair put(@ByRef StringPair x);


    @MemberGetter public native @StdString String first(); public native StringPair first(String first);
    @MemberGetter public native @StdString String second();  public native StringPair second(String second);
    @MemberSetter @Index public native StringPair first(@StdString BytePointer first);
    @MemberSetter @Index public native StringPair second(@StdString BytePointer second);

    public StringPair put(String firstValue, String secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }

    public StringPair put(BytePointer firstValue, BytePointer secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

