// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


@Namespace("arrow") @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class TypeVisitor extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TypeVisitor() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TypeVisitor(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TypeVisitor(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TypeVisitor position(long position) {
        return (TypeVisitor)super.position(position);
    }
    @Override public TypeVisitor getPointer(long i) {
        return new TypeVisitor((Pointer)this).position(position + i);
    }


  public native @ByVal Status Visit(@Const @ByRef NullType type);
  public native @ByVal Status Visit(@Const @ByRef BooleanType type);
  public native @ByVal Status Visit(@Const @ByRef Int8Type type);
  public native @ByVal Status Visit(@Const @ByRef Int16Type type);
  public native @ByVal Status Visit(@Const @ByRef Int32Type type);
  public native @ByVal Status Visit(@Const @ByRef Int64Type type);
  public native @ByVal Status Visit(@Const @ByRef UInt8Type type);
  public native @ByVal Status Visit(@Const @ByRef UInt16Type type);
  public native @ByVal Status Visit(@Const @ByRef UInt32Type type);
  public native @ByVal Status Visit(@Const @ByRef UInt64Type type);
  public native @ByVal Status Visit(@Const @ByRef HalfFloatType type);
  public native @ByVal Status Visit(@Const @ByRef FloatType type);
  public native @ByVal Status Visit(@Const @ByRef DoubleType type);
  public native @ByVal Status Visit(@Const @ByRef StringType type);
  public native @ByVal Status Visit(@Const @ByRef BinaryType type);
  public native @ByVal Status Visit(@Const @ByRef LargeStringType type);
  public native @ByVal Status Visit(@Const @ByRef LargeBinaryType type);
  public native @ByVal Status Visit(@Const @ByRef FixedSizeBinaryType type);
  public native @ByVal Status Visit(@Const @ByRef Date64Type type);
  public native @ByVal Status Visit(@Const @ByRef Date32Type type);
  public native @ByVal Status Visit(@Const @ByRef Time32Type type);
  public native @ByVal Status Visit(@Const @ByRef Time64Type type);
  public native @ByVal Status Visit(@Const @ByRef TimestampType type);
  public native @ByVal Status Visit(@Const @ByRef MonthIntervalType type);
  public native @ByVal Status Visit(@Const @ByRef DayTimeIntervalType type);
  public native @ByVal Status Visit(@Const @ByRef DurationType type);
  public native @ByVal Status Visit(@Const @ByRef Decimal128Type type);
  public native @ByVal Status Visit(@Const @ByRef Decimal256Type type);
  public native @ByVal Status Visit(@Const @ByRef ListType type);
  public native @ByVal Status Visit(@Const @ByRef LargeListType type);
  public native @ByVal Status Visit(@Const @ByRef MapType type);
  public native @ByVal Status Visit(@Const @ByRef FixedSizeListType type);
  public native @ByVal Status Visit(@Const @ByRef StructType type);
  public native @ByVal Status Visit(@Const @ByRef SparseUnionType type);
  public native @ByVal Status Visit(@Const @ByRef DenseUnionType type);
  public native @ByVal Status Visit(@Const @ByRef DictionaryType type);
  public native @ByVal Status Visit(@Const @ByRef ExtensionType type);
}
