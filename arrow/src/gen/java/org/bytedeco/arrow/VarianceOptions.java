// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


/** \brief Control Delta Degrees of Freedom (ddof) of Variance and Stddev kernel
 * 
 *  The divisor used in calculations is N - ddof, where N is the number of elements.
 *  By default, ddof is zero, and population variance or stddev is returned. */
@Namespace("arrow::compute") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class VarianceOptions extends FunctionOptions {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public VarianceOptions(Pointer p) { super(p); }

  public VarianceOptions(int ddof/*=0*/) { super((Pointer)null); allocate(ddof); }
  private native void allocate(int ddof/*=0*/);
  public VarianceOptions() { super((Pointer)null); allocate(); }
  private native void allocate();

  public static native @ByVal VarianceOptions Defaults();

  public native int ddof(); public native VarianceOptions ddof(int setter);
}
