// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.arrow;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.arrow.global.arrow.*;


/** \brief One sort key for PartitionNthIndices (TODO) and SortIndices */
@Namespace("arrow::compute") @NoOffset @Properties(inherit = org.bytedeco.arrow.presets.arrow.class)
public class SortKey extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SortKey(Pointer p) { super(p); }

  public SortKey(@StdString String name, SortOrder order/*=arrow::compute::SortOrder::Ascending*/) { super((Pointer)null); allocate(name, order); }
  private native void allocate(@StdString String name, SortOrder order/*=arrow::compute::SortOrder::Ascending*/);
  public SortKey(@StdString String name) { super((Pointer)null); allocate(name); }
  private native void allocate(@StdString String name);
  public SortKey(@StdString BytePointer name, @Cast("arrow::compute::SortOrder") int order/*=arrow::compute::SortOrder::Ascending*/) { super((Pointer)null); allocate(name, order); }
  private native void allocate(@StdString BytePointer name, @Cast("arrow::compute::SortOrder") int order/*=arrow::compute::SortOrder::Ascending*/);
  public SortKey(@StdString BytePointer name) { super((Pointer)null); allocate(name); }
  private native void allocate(@StdString BytePointer name);

  /** The name of the sort column. */
  public native @StdString String name(); public native SortKey name(String setter);
  /** How to order by this sort key. */
  public native SortOrder order(); public native SortKey order(SortOrder setter);
}
