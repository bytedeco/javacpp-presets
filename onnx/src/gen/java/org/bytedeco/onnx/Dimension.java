// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnx;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.onnx.global.onnx.*;

// -------------------------------------------------------------------

@Name("onnx::TensorShapeProto_Dimension") @NoOffset @Properties(inherit = org.bytedeco.onnx.presets.onnx.class)
public class Dimension extends MessageLite {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Dimension(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public Dimension(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public Dimension position(long position) {
        return (Dimension)super.position(position);
    }
    @Override public Dimension getPointer(long i) {
        return new Dimension((Pointer)this).offsetAddress(i);
    }

  public Dimension() { super((Pointer)null); allocate(); }
  private native void allocate();

  public Dimension(@Const @ByRef Dimension from) { super((Pointer)null); allocate(from); }
  private native void allocate(@Const @ByRef Dimension from);

  public native @ByRef @Name("operator =") Dimension put(@Const @ByRef Dimension from);

  public native @Const @ByRef UnknownFieldSet unknown_fields();
  public native UnknownFieldSet mutable_unknown_fields();

  public static native @Cast("const google::protobuf::Descriptor*") Pointer descriptor();
  public static native @Cast("const google::protobuf::Descriptor*") Pointer GetDescriptor();
  public static native @Const Reflection GetReflection();
  public static native @Const @ByRef Dimension default_instance();

  /** enum onnx::TensorShapeProto_Dimension::ValueCase */
  public static final int
    kDimValue = 1,
    kDimParam = 2,
    VALUE_NOT_SET = 0;

  public static native void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  public static native @Const Dimension internal_default_instance();
  @MemberGetter public static native int kIndexInFileMessages();
  public static final int kIndexInFileMessages = kIndexInFileMessages();

  
  public native void Swap(Dimension other);

  // implements Message ----------------------------------------------

  public native Dimension New();

  public native Dimension New(Arena arena);
  public native void CopyFrom(@Cast("const google::protobuf::Message*") @ByRef MessageLite from);
  public native void MergeFrom(@Cast("const google::protobuf::Message*") @ByRef MessageLite from);
  public native void CopyFrom(@Const @ByRef Dimension from);
  public native void MergeFrom(@Const @ByRef Dimension from);
  public native void Clear();
  public native @Cast("bool") boolean IsInitialized();

  public native @Cast("size_t") long ByteSizeLong();
  public native @Cast("const char*") BytePointer _InternalParse(@Cast("const char*") BytePointer ptr, ParseContext ctx);
  public native String _InternalParse(String ptr, ParseContext ctx);
  public native int GetCachedSize();

  public native @ByVal @Cast("google::protobuf::Metadata*") Pointer GetMetadata();

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  /** enum onnx::TensorShapeProto_Dimension:: */
  public static final int
    kDenotationFieldNumber = 3,
    kDimValueFieldNumber = 1,
    kDimParamFieldNumber = 2;
  // optional string denotation = 3;
  public native @Cast("bool") boolean has_denotation();
  public native void clear_denotation();
  public native @StdString BytePointer denotation();
  public native void set_denotation(@StdString BytePointer value);
  public native void set_denotation(@StdString String value);
  public native void set_denotation(@Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void set_denotation(String value, @Cast("size_t") long size);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer mutable_denotation();
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer release_denotation();
  public native void set_allocated_denotation(@StdString @Cast({"char*", "std::string*"}) BytePointer denotation);

  // optional int64 dim_value = 1;
  public native @Cast("bool") boolean has_dim_value();
  public native void clear_dim_value();
  public native @Cast("google::protobuf::int64") long dim_value();
  public native void set_dim_value(@Cast("google::protobuf::int64") long value);

  // optional string dim_param = 2;
  public native @Cast("bool") boolean has_dim_param();
  public native void clear_dim_param();
  public native @StdString BytePointer dim_param();
  public native void set_dim_param(@StdString BytePointer value);
  public native void set_dim_param(@StdString String value);
  public native void set_dim_param(@Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void set_dim_param(String value, @Cast("size_t") long size);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer mutable_dim_param();
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer release_dim_param();
  public native void set_allocated_dim_param(@StdString @Cast({"char*", "std::string*"}) BytePointer dim_param);

  public native void clear_value();
  public native @Cast("onnx::TensorShapeProto_Dimension::ValueCase") int value_case();
}
