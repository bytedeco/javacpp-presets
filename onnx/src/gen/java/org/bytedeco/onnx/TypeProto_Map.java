// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.onnx;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.onnx.global.onnx.*;

// -------------------------------------------------------------------

@Namespace("onnx") @NoOffset @Properties(inherit = org.bytedeco.onnx.presets.onnx.class)
public class TypeProto_Map extends MessageLite {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TypeProto_Map(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TypeProto_Map(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public TypeProto_Map position(long position) {
        return (TypeProto_Map)super.position(position);
    }
    @Override public TypeProto_Map getPointer(long i) {
        return new TypeProto_Map((Pointer)this).offsetAddress(i);
    }

  public TypeProto_Map() { super((Pointer)null); allocate(); }
  private native void allocate();

  public TypeProto_Map(@Const @ByRef TypeProto_Map from) { super((Pointer)null); allocate(from); }
  private native void allocate(@Const @ByRef TypeProto_Map from);

  public native @ByRef @Name("operator =") TypeProto_Map put(@Const @ByRef TypeProto_Map from);

  public native @StdString BytePointer unknown_fields();
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer mutable_unknown_fields();

  public static native @Const @ByRef TypeProto_Map default_instance();
  public static native @Const TypeProto_Map internal_default_instance();
  @MemberGetter public static native int kIndexInFileMessages();
  public static final int kIndexInFileMessages = kIndexInFileMessages();

  
  public native void Swap(TypeProto_Map other);
  public native void UnsafeArenaSwap(TypeProto_Map other);

  // implements Message ----------------------------------------------

  public native TypeProto_Map New(Arena arena/*=nullptr*/);
  public native TypeProto_Map New();
  public native void CheckTypeAndMergeFrom(@Const @ByRef MessageLite from);
  public native void CopyFrom(@Const @ByRef TypeProto_Map from);
  public native void MergeFrom(@Const @ByRef TypeProto_Map from);
  public native void Clear();
  public native @Cast("bool") boolean IsInitialized();

  public native @Cast("size_t") long ByteSizeLong();
  public native @Cast("const char*") BytePointer _InternalParse(@Cast("const char*") BytePointer ptr, ParseContext ctx);
  public native String _InternalParse(String ptr, ParseContext ctx);
  public native int GetCachedSize();

  public native @StdString BytePointer GetTypeName();

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  /** enum onnx::TypeProto_Map:: */
  public static final int
    kValueTypeFieldNumber = 2,
    kKeyTypeFieldNumber = 1;
  // optional .onnx.TypeProto value_type = 2;
  public native @Cast("bool") boolean has_value_type();
  public native void clear_value_type();
  public native @Const @ByRef TypeProto value_type();
  public native TypeProto release_value_type();
  public native TypeProto mutable_value_type();
  public native void set_allocated_value_type(TypeProto value_type);
  public native void unsafe_arena_set_allocated_value_type(
        TypeProto value_type);
  public native TypeProto unsafe_arena_release_value_type();

  // optional int32 key_type = 1;
  public native @Cast("bool") boolean has_key_type();
  public native void clear_key_type();
  public native int key_type();
  public native void set_key_type(int value);
}
