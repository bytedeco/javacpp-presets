// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.flycapture.FlyCapture2;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.flycapture.global.FlyCapture2.*;


    /** Options for enabling device event registration. */
    @Namespace("FlyCapture2") @Properties(inherit = org.bytedeco.flycapture.presets.FlyCapture2.class)
public class EventOptions extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public EventOptions() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public EventOptions(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public EventOptions(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public EventOptions position(long position) {
            return (EventOptions)super.position(position);
        }
        @Override public EventOptions getPointer(long i) {
            return new EventOptions((Pointer)this).position(position + i);
        }
    
        /** Callback function pointer */
        public native CameraEventCallback EventCallbackFcn(); public native EventOptions EventCallbackFcn(CameraEventCallback setter);

        /** Event name to register */
        public native @Cast("const char*") BytePointer EventName(); public native EventOptions EventName(BytePointer setter);

        /** Pointer to callback data to be passed to the callback function */
        public native @Const Pointer EventUserData(); public native EventOptions EventUserData(Pointer setter);

        /** Size of the underlying struct passed as eventCallbackData for sanity checks */
        public native @Cast("size_t") long EventUserDataSize(); public native EventOptions EventUserDataSize(long setter);
    }
