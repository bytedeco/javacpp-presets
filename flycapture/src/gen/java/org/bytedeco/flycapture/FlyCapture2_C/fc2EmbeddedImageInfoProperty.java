// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.flycapture.FlyCapture2_C;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.flycapture.FlyCapture2.*;
import static org.bytedeco.flycapture.global.FlyCapture2.*;

import static org.bytedeco.flycapture.global.FlyCapture2_C.*;


    /** Properties of a single embedded image info property. */
    @Properties(inherit = org.bytedeco.flycapture.presets.FlyCapture2_C.class)
public class fc2EmbeddedImageInfoProperty extends Pointer {
        static { Loader.load(); }
        /** Default native constructor. */
        public fc2EmbeddedImageInfoProperty() { super((Pointer)null); allocate(); }
        /** Native array allocator. Access with {@link Pointer#position(long)}. */
        public fc2EmbeddedImageInfoProperty(long size) { super((Pointer)null); allocateArray(size); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public fc2EmbeddedImageInfoProperty(Pointer p) { super(p); }
        private native void allocate();
        private native void allocateArray(long size);
        @Override public fc2EmbeddedImageInfoProperty position(long position) {
            return (fc2EmbeddedImageInfoProperty)super.position(position);
        }
        @Override public fc2EmbeddedImageInfoProperty getPointer(long i) {
            return new fc2EmbeddedImageInfoProperty((Pointer)this).position(position + i);
        }
    
        /** Whether this property is available. */
        public native @Cast("BOOL") int available(); public native fc2EmbeddedImageInfoProperty available(int setter);
        /** Whether this property is on or off. */
        public native @Cast("BOOL") int onOff(); public native fc2EmbeddedImageInfoProperty onOff(int setter);

    }
