// Targeted by JavaCPP version 1.5.1: DO NOT EDIT THIS FILE

package org.bytedeco.cpu_features;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cpu_features.global.cpu_features.*;


@Namespace("cpu_features") @Properties(inherit = org.bytedeco.cpu_features.presets.cpu_features.class)
public class ArmFeatures extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ArmFeatures() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ArmFeatures(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ArmFeatures(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ArmFeatures position(long position) {
        return (ArmFeatures)super.position(position);
    }

  public native @NoOffset int vfp(); public native ArmFeatures vfp(int setter);       // Vector Floating Point.
  public native @NoOffset int iwmmxt(); public native ArmFeatures iwmmxt(int setter);    // Intel Wireless MMX Technology.
  public native @NoOffset int neon(); public native ArmFeatures neon(int setter);      // Advanced SIMD.
  public native @NoOffset int vfpv3(); public native ArmFeatures vfpv3(int setter);     // VFP version 3
  public native @NoOffset int vfpv3d16(); public native ArmFeatures vfpv3d16(int setter);  // VFP version 3 with 16 D-registers
  public native @NoOffset int vfpv4(); public native ArmFeatures vfpv4(int setter);     // VFP version 4 with fast context switching
  public native @NoOffset int idiva(); public native ArmFeatures idiva(int setter);     // SDIV and UDIV hardware division in ARM mode.
  public native @NoOffset int idivt(); public native ArmFeatures idivt(int setter);     // SDIV and UDIV hardware division in Thumb mode.
  public native @NoOffset int aes(); public native ArmFeatures aes(int setter);       // Hardware-accelerated Advanced Encryption Standard.
  public native @NoOffset int pmull(); public native ArmFeatures pmull(int setter);     // Polynomial multiply long.
  public native @NoOffset int sha1(); public native ArmFeatures sha1(int setter);      // Hardware-accelerated SHA1.
  public native @NoOffset int sha2(); public native ArmFeatures sha2(int setter);      // Hardware-accelerated SHA2-256.
  public native @NoOffset int crc32(); public native ArmFeatures crc32(int setter);     // Hardware-accelerated CRC-32.

  // Make sure to update ArmFeaturesEnum below if you add a field here.
}
