diff -ruN tesseract-5.0.0-rc1/src/lstm/lstm.cpp tesseract-5.0.0-rc1-openmp/src/lstm/lstm.cpp
--- tesseract-5.0.0-rc1/src/lstm/lstm.cpp	2021-10-30 05:32:11.000000000 +0900
+++ tesseract-5.0.0-rc1-openmp/src/lstm/lstm.cpp	2021-11-05 11:08:40.685372011 +0900
@@ -40,9 +40,7 @@
 // Macros for openmp code if it is available, otherwise empty macros.
 #ifdef _OPENMP
 #  define PARALLEL_IF_OPENMP(__num_threads)                                  \
-    PRAGMA(omp parallel if (__num_threads > 1) num_threads(__num_threads)) { \
-      PRAGMA(omp sections nowait) {                                          \
-        PRAGMA(omp section) {
+    PRAGMA(omp parallel if (__num_threads > 1) num_threads(__num_threads)) {
 #  define SECTION_IF_OPENMP \
     }                       \
     PRAGMA(omp section) {
@@ -373,6 +371,10 @@
     }
     // Matrix multiply the inputs with the source.
     PARALLEL_IF_OPENMP(GFS)
+#ifdef _OPENMP
+    PRAGMA(omp sections nowait) {
+    PRAGMA(omp section) {
+#endif
     // It looks inefficient to create the threads on each t iteration, but the
     // alternative of putting the parallel outside the t loop, a single around
     // the t-loop and then tasks in place of the sections is a *lot* slower.
@@ -652,7 +654,10 @@
 #endif
     // Matrix multiply to get the source errors.
     PARALLEL_IF_OPENMP(GFS)
-
+#ifdef _OPENMP
+    PRAGMA(omp sections nowait) {
+    PRAGMA(omp section) {
+#endif
     // Cell inputs.
     node_values_[CI].FuncMultiply3<GPrime>(t, node_values_[GI], t, curr_stateerr, gate_errors[CI]);
     ClipVector(ns_, -kErrClip, kErrClip, gate_errors[CI].get());
