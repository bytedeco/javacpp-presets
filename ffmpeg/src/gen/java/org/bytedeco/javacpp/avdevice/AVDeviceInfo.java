// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.javacpp.avdevice;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.javacpp.avutil.*;
import static org.bytedeco.javacpp.avutil.avutil.*;
import org.bytedeco.javacpp.swresample.*;
import static org.bytedeco.javacpp.swresample.swresample.*;
import org.bytedeco.javacpp.avcodec.*;
import static org.bytedeco.javacpp.avcodec.avcodec.*;
import org.bytedeco.javacpp.avformat.*;
import static org.bytedeco.javacpp.avformat.avformat.*;
import org.bytedeco.javacpp.postproc.*;
import static org.bytedeco.javacpp.postproc.postproc.*;
import org.bytedeco.javacpp.swscale.*;
import static org.bytedeco.javacpp.swscale.swscale.*;
import org.bytedeco.javacpp.avfilter.*;
import static org.bytedeco.javacpp.avfilter.avfilter.*;

import static org.bytedeco.javacpp.avdevice.avdevice.*;


/**
 * Structure describes basic parameters of the device.
 */
@Properties(inherit = org.bytedeco.javacpp.avdevice.avdevice_presets.class)
public class AVDeviceInfo extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public AVDeviceInfo() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public AVDeviceInfo(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AVDeviceInfo(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public AVDeviceInfo position(long position) {
        return (AVDeviceInfo)super.position(position);
    }

    /** device name, format depends on device */
    public native @Cast("char*") BytePointer device_name(); public native AVDeviceInfo device_name(BytePointer device_name);
    /** human friendly name */
    public native @Cast("char*") BytePointer device_description(); public native AVDeviceInfo device_description(BytePointer device_description);
}