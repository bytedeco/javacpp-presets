// Targeted by JavaCPP version 1.5.4-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvonnxparser;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.cuda.cublas.*;
import static org.bytedeco.cuda.global.cublas.*;
import org.bytedeco.cuda.cudnn.*;
import static org.bytedeco.cuda.global.cudnn.*;
import org.bytedeco.cuda.nvrtc.*;
import static org.bytedeco.cuda.global.nvrtc.*;
import org.bytedeco.tensorrt.nvinfer.*;
import static org.bytedeco.tensorrt.global.nvinfer.*;
import org.bytedeco.tensorrt.nvinfer_plugin.*;
import static org.bytedeco.tensorrt.global.nvinfer_plugin.*;

import static org.bytedeco.tensorrt.global.nvonnxparser.*;

@NoOffset @Name("std::pair<std::vector<size_t>,bool>") @Properties(inherit = org.bytedeco.tensorrt.presets.nvonnxparser.class)
public class SubGraph_t extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SubGraph_t(Pointer p) { super(p); }
    public SubGraph_t(SizeTPointer firstValue, boolean secondValue) { this(); put(firstValue, secondValue); }
    public SubGraph_t()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef SubGraph_t put(@ByRef SubGraph_t x);


    @MemberGetter public native @StdVector SizeTPointer first(); public native SubGraph_t first(SizeTPointer first);
    @MemberGetter public native @Cast("bool") boolean second();  public native SubGraph_t second(boolean second);

    public SubGraph_t put(SizeTPointer firstValue, boolean secondValue) {
        first(firstValue);
        second(secondValue);
        return this;
    }
}

