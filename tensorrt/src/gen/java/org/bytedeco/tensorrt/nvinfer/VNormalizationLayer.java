// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.cuda.cublas.*;
import static org.bytedeco.cuda.global.cublas.*;
import org.bytedeco.cuda.cudnn.*;
import static org.bytedeco.cuda.global.cudnn.*;
import org.bytedeco.cuda.nvrtc.*;
import static org.bytedeco.cuda.global.nvrtc.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;
 // class VReverseSequenceLayer

@Namespace("nvinfer1::apiv") @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class VNormalizationLayer extends VRoot {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public VNormalizationLayer(Pointer p) { super(p); }

    public native @NoException(true) void setEpsilon(float eps);
    public native @NoException(true) float getEpsilon();
    public native @NoException(true) void setAxes(@Cast("uint32_t") int axesMask);
    public native @Cast("uint32_t") @NoException(true) int getAxes();
    public native @NoException(true) void setNbGroups(int nbGroups);
    public native @NoException(true) int getNbGroups();
    public native @NoException(true) void setComputePrecision(DataType type);
    public native @NoException(true) void setComputePrecision(@Cast("nvinfer1::DataType") int type);
    public native @NoException(true) DataType getComputePrecision();
}
