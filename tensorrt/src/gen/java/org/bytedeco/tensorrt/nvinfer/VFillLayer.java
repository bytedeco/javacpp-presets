// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.cuda.cublas.*;
import static org.bytedeco.cuda.global.cublas.*;
import org.bytedeco.cuda.cudnn.*;
import static org.bytedeco.cuda.global.cudnn.*;
import org.bytedeco.cuda.nvrtc.*;
import static org.bytedeco.cuda.global.nvrtc.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;


@Namespace("nvinfer1::apiv") @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class VFillLayer extends VRoot {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public VFillLayer(Pointer p) { super(p); }

    public native @NoException(true) void setDimensions(@Cast("const nvinfer1::Dims*") @ByRef Dims64 dimensions);
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims64 getDimensions();
    public native @NoException(true) void setOperation(FillOperation op);
    public native @NoException(true) void setOperation(@Cast("nvinfer1::FillOperation") int op);
    public native @NoException(true) FillOperation getOperation();
    public native @NoException(true) void setAlpha(double alpha);
    public native @NoException(true) double getAlpha();
    public native @NoException(true) void setBeta(double beta);
    public native @NoException(true) double getBeta();
    public native @NoException(true) void setAlphaInt64(@Cast("int64_t") long alpha);
    public native @Cast("int64_t") @NoException(true) long getAlphaInt64();
    public native @NoException(true) void setBetaInt64(@Cast("int64_t") long beta);
    public native @Cast("int64_t") @NoException(true) long getBetaInt64();
    public native @Cast("bool") @NoException(true) boolean isAlphaBetaInt64();
    public native @NoException(true) DataType getToType();
    public native @NoException(true) void setToType(DataType toType);
    public native @NoException(true) void setToType(@Cast("nvinfer1::DataType") int toType);
}
