// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.cuda.cublas.*;
import static org.bytedeco.cuda.global.cublas.*;
import org.bytedeco.cuda.cudnn.*;
import static org.bytedeco.cuda.global.cudnn.*;
import org.bytedeco.cuda.nvrtc.*;
import static org.bytedeco.cuda.global.nvrtc.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;


/**
 *  \class IPluginResourceContext
 * 
 *  \brief Interface for plugins to access per context resources provided by TensorRT
 * 
 *  There is no public way to construct an IPluginResourceContext. It appears as an argument to
 *  IPluginV3OneRuntime::attachToContext(). Overrides of that method can use the IPluginResourceContext object to access
 *  any available per context resources.
 * 
 *  \warning Do not inherit from this class, as doing so will break forward-compatibility of the API and ABI.
 * 
 *  @see IPluginV3OneRuntime::attachToContext()
 *  */
@Namespace("nvinfer1") @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class IPluginResourceContext extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IPluginResourceContext(Pointer p) { super(p); }

    /** \brief Get the GPU allocator associated with the resource context
     * 
     *  @see IPluginV3OneRuntime::attachToContext()
     *  */
    
    //!
    //!
    public native @NoException(true) IGpuAllocator getGpuAllocator();

    /** \brief Get the error recorder associated with the resource context
     * 
     *  @see IPluginV3OneRuntime::attachToContext()
     *  */
    public native @NoException(true) IErrorRecorder getErrorRecorder();
}
