// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;


/**
 *  \class IElementWiseLayer
 * 
 *  \brief A elementwise layer in a network definition.
 * 
 *  This layer applies a per-element binary operation between corresponding elements of two tensors.
 * 
 *  The input dimensions of the two input tensors must be equal, and the output tensor is the same size as each input.
 *  */
@Namespace("nvinfer1") @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class IElementWiseLayer extends ILayer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IElementWiseLayer(Pointer p) { super(p); }

    /**
     *  \brief Set the binary operation for the layer.
     * 
     *  DLA supports only kSUM, kPROD, kMAX and kMIN.
     * 
     *  @see getOperation(), ElementWiseOperation
     * 
     *  @see getBiasWeights()
     *  */
    
    
    //!
    //!
    //!
    //!
    public native void setOperation(ElementWiseOperation type);
    public native void setOperation(@Cast("nvinfer1::ElementWiseOperation") int type);

    /**
     *  \brief Get the binary operation for the layer.
     * 
     *  @see setOperation(), ElementWiseOperation
     * 
     *  @see setBiasWeights()
     *  */
    public native ElementWiseOperation getOperation();
}
