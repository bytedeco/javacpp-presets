// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;


/**
 *  \class DimsNCHW
 *  \brief Descriptor for data with one index dimension, one channel dimension and two spatial dimensions.
 *  */
@Namespace("nvinfer1") @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class DimsNCHW extends Dims4 {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DimsNCHW(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public DimsNCHW(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public DimsNCHW position(long position) {
        return (DimsNCHW)super.position(position);
    }

    /**
     *  \brief Construct an empty DimsNCHW object.
     *  */
    
    
    //!
    //!
    //!
    public DimsNCHW() { super((Pointer)null); allocate(); }
    private native void allocate();

    /**
     *  \brief Construct a DimsNCHW given batch size, channel count, height and width.
     * 
     *  @param batchSize The batch size (commonly denoted N).
     *  @param channels The channel count.
     *  @param height The height of the data.
     *  @param width The width of the data.
     *  */
    
    
    //!
    //!
    //!
    public DimsNCHW(int batchSize, int channels, int height, int width) { super((Pointer)null); allocate(batchSize, channels, height, width); }
    private native void allocate(int batchSize, int channels, int height, int width);

    /**
     *  \brief Get the index count.
     * 
     *  @return The index count.
     *  */
    
    
    //!
    //!
    //!
    public native @ByRef IntPointer n();

    /**
     *  \brief Get the index count.
     * 
     *  @return The index count.
     *  */

    /**
     *  \brief Get the channel count.
     * 
     *  @return The channel count.
     *  */
    
    
    //!
    //!
    //!
    public native @ByRef IntPointer c();

    /**
     *  \brief Get the channel count.
     * 
     *  @return The channel count.
     *  */

    /**
     *  \brief Get the height.
     * 
     *  @return The height.
     *  */
    
    
    //!
    //!
    //!
    public native @ByRef IntPointer h();

    /**
     *  \brief Get the height.
     * 
     *  @return The height.
     *  */

    /**
     *  \brief Get the width.
     * 
     *  @return The width.
     *  */
    
    
    //!
    //!
    //!
    public native @ByRef IntPointer w();

    /**
     *  \brief Get the width.
     * 
     *  @return The width.
     *  */
}
