// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.cuda.cublas.*;
import static org.bytedeco.cuda.global.cublas.*;
import org.bytedeco.cuda.cudnn.*;
import static org.bytedeco.cuda.global.cudnn.*;
import org.bytedeco.cuda.nvrtc.*;
import static org.bytedeco.cuda.global.nvrtc.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;

@Namespace("nvinfer1::v_1_0") @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class IPluginCreatorV3One extends IPluginCreatorInterface {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public IPluginCreatorV3One(Pointer p) { super(p); }

    /**
     *  \brief Return version information associated with this interface. Applications must not override this method.
     *  */
    
    
    //!
    //!
    //!
    //!
    //!
    public native @ByVal @NoException(true) InterfaceInfo getInterfaceInfo();

    /**
     *  \brief Return a plugin object. Return nullptr in case of error.
     * 
     *  @param name A NULL-terminated name string of length 1024 or less, including the NULL terminator.
     *  @param fc A pointer to a collection of fields needed for constructing the plugin.
     *  @param phase The TensorRT phase in which the plugin is being created
     * 
     *  When the phase is TensorRTPhase::kRUNTIME, the PluginFieldCollection provided for serialization by the plugin's
     *  runtime interface will be passed as fc.
     * 
     *  \note The returned plugin object must be in an initialized state
     *  */
    
    
    //!
    //!
    //!
    public native @NoException(true) IPluginV3 createPlugin(
            String name, @Const PluginFieldCollection fc, TensorRTPhase phase);
    public native @NoException(true) IPluginV3 createPlugin(
            @Cast("const char*") BytePointer name, @Const PluginFieldCollection fc, @Cast("nvinfer1::TensorRTPhase") int phase);

    /**
     *  \brief Return a list of fields that need to be passed to createPlugin() when creating a plugin for use in the
     *  TensorRT build phase.
     * 
     *  @see PluginFieldCollection
     *  */
    
    
    //!
    //!
    //!
    public native @Const @NoException(true) PluginFieldCollection getFieldNames();

    /**
     *  \brief Return the plugin name.
     * 
     *  \warning The string returned must be NULL-terminated and have a length of 1024 bytes or less including
     *  the NULL terminator.
     *  */
    
    
    //!
    //!
    //!
    public native @NoException(true) String getPluginName();

    /**
     *  \brief Return the plugin version.
     * 
     *  \warning The string returned must be NULL-terminated and have a length of 1024 bytes or less including
     *  the NULL terminator.
     *  */
    
    
    //!
    //!
    //!
    public native @NoException(true) String getPluginVersion();

    /**
     *  \brief Return the plugin namespace.
     * 
     *  \warning The string returned must be NULL-terminated and have a length of 1024 bytes or less including
     *  the NULL terminator.
     *  */
    public native @NoException(true) String getPluginNamespace();
}
