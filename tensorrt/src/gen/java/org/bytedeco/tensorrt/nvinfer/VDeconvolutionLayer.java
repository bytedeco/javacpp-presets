// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.cuda.cublas.*;
import static org.bytedeco.cuda.global.cublas.*;
import org.bytedeco.cuda.cudnn.*;
import static org.bytedeco.cuda.global.cudnn.*;
import org.bytedeco.cuda.nvrtc.*;
import static org.bytedeco.cuda.global.nvrtc.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;


@Namespace("nvinfer1::apiv") @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class VDeconvolutionLayer extends VRoot {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public VDeconvolutionLayer(Pointer p) { super(p); }

    public native @NoException(true) void setNbOutputMaps(@Cast("int64_t") long nbOutputMaps);
    public native @Cast("int64_t") @NoException(true) long getNbOutputMaps();
    public native @NoException(true) void setNbGroups(@Cast("int64_t") long nbGroups);
    public native @Cast("int64_t") @NoException(true) long getNbGroups();
    public native @NoException(true) void setKernelWeights(@ByVal Weights weights);
    public native @ByVal @NoException(true) Weights getKernelWeights();
    public native @NoException(true) void setBiasWeights(@ByVal Weights weights);
    public native @ByVal @NoException(true) Weights getBiasWeights();
    public native @NoException(true) void setPrePadding(@Cast("const nvinfer1::Dims*") @ByRef Dims64 padding);
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims64 getPrePadding();
    public native @NoException(true) void setPostPadding(@Cast("const nvinfer1::Dims*") @ByRef Dims64 padding);
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims64 getPostPadding();
    public native @NoException(true) void setPaddingMode(PaddingMode paddingMode);
    public native @NoException(true) void setPaddingMode(@Cast("nvinfer1::PaddingMode") int paddingMode);
    public native @NoException(true) PaddingMode getPaddingMode();
    public native @NoException(true) void setKernelSizeNd(@Cast("const nvinfer1::Dims*") @ByRef Dims64 kernelSize);
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims64 getKernelSizeNd();
    public native @NoException(true) void setStrideNd(@Cast("const nvinfer1::Dims*") @ByRef Dims64 stride);
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims64 getStrideNd();
    public native @NoException(true) void setPaddingNd(@Cast("const nvinfer1::Dims*") @ByRef Dims64 padding);
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims64 getPaddingNd();
    public native @NoException(true) void setDilationNd(@Cast("const nvinfer1::Dims*") @ByRef Dims64 dilation);
    public native @ByVal @Cast("nvinfer1::Dims*") @NoException(true) Dims64 getDilationNd();
}
