// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorrt.nvinfer;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.cuda.cublas.*;
import static org.bytedeco.cuda.global.cublas.*;
import org.bytedeco.cuda.cudnn.*;
import static org.bytedeco.cuda.global.cudnn.*;
import org.bytedeco.cuda.nvrtc.*;
import static org.bytedeco.cuda.global.nvrtc.*;

import static org.bytedeco.tensorrt.global.nvinfer.*;



/**
 *  \class ISqueezeLayer
 * 
 *  \brief Layer that represents a squeeze operation, removing unit dimensions of the input tensor
 *  on a set of axes.
 * 
 *  \warning Do not inherit from this class, as doing so will break forward-compatibility of the API and ABI.
 *  */
@Namespace("nvinfer1") @NoOffset @Properties(inherit = org.bytedeco.tensorrt.presets.nvinfer.class)
public class ISqueezeLayer extends ILayer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ISqueezeLayer(Pointer p) { super(p); }

    /**
     *  \brief Append or replace an input of this layer with a specific tensor
     * 
     *  @param index The index of the input to modify.
     *  @param tensor The new input tensor.
     * 
     *  For a Squeeze layer, the values 0-1 are valid for index.
     *  The indices are as follows:
     * 
     *  - 0: Input data tensor.
     *  - 1: The axes to remove. Must resolvable to a constant Int32 or Int64 1D shape tensor.
     *  */
}
