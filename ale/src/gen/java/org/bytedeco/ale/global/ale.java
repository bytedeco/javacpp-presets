// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.ale.global;

import org.bytedeco.ale.*;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

public class ale extends org.bytedeco.ale.presets.ale {
    static { Loader.load(); }

// Targeting ../StringOptional.java


// Parsed from emucore/Device.hxx

//============================================================================
//
// MM     MM  6666  555555  0000   2222
// MMMM MMMM 66  66 55     00  00 22  22
// MM MMM MM 66     55     00  00     22
// MM  M  MM 66666  55555  00  00  22222  --  "A 6502 Microprocessor Emulator"
// MM     MM 66  66     55 00  00 22
// MM     MM 66  66 55  55 00  00 22
// MM     MM  6666   5555   0000  222222
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Device.hxx,v 1.6 2007/01/14 16:17:57 stephena Exp $
//============================================================================

// #ifndef DEVICE_HXX
// #define DEVICE_HXX
// Targeting ../System.java


// Targeting ../Serializer.java


// Targeting ../Deserializer.java



  // namespace stella
  // namespace ale

// #include <cstdint>
// Targeting ../Device.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Control.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Control.hxx,v 1.9 2007/02/22 02:15:46 stephena Exp $
//============================================================================

// #ifndef CONTROLLER_HXX
// #define CONTROLLER_HXX
// Targeting ../Controller.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Event.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Event.hxx,v 1.28 2007/01/30 17:13:07 stephena Exp $
//============================================================================

// #ifndef EVENT_HXX
// #define EVENT_HXX
// Targeting ../Event.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Random.hxx

//============================================================================
//
//   SSSS    tt          lll  lll
//  SS  SS   tt           ll   ll
//  SS     tttttt  eeee   ll   ll   aaaa
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Random.hxx,v 1.4 2007/01/01 18:04:49 stephena Exp $
//============================================================================

// #ifndef RANDOM_HXX
// #define RANDOM_HXX

  // namespace stella
  // namespace ale

// #include <cstdint>
// Targeting ../Random.java



  // namespace stella
  // namespace ale

// #endif



// Parsed from common/Constants.h

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  common_constants.h
 *
 *  Defines a set of constants used by various parts of the player agent code
 *
 **************************************************************************** */

// #ifndef __CONSTANTS_H__
// #define __CONSTANTS_H__

// #include <string>
// #include <vector>

// Define actions
/** enum ale::Action */
public static final int
  PLAYER_A_NOOP          = 0,
  PLAYER_A_FIRE          = 1,
  PLAYER_A_UP            = 2,
  PLAYER_A_RIGHT         = 3,
  PLAYER_A_LEFT          = 4,
  PLAYER_A_DOWN          = 5,
  PLAYER_A_UPRIGHT       = 6,
  PLAYER_A_UPLEFT        = 7,
  PLAYER_A_DOWNRIGHT     = 8,
  PLAYER_A_DOWNLEFT      = 9,
  PLAYER_A_UPFIRE        = 10,
  PLAYER_A_RIGHTFIRE     = 11,
  PLAYER_A_LEFTFIRE      = 12,
  PLAYER_A_DOWNFIRE      = 13,
  PLAYER_A_UPRIGHTFIRE   = 14,
  PLAYER_A_UPLEFTFIRE    = 15,
  PLAYER_A_DOWNRIGHTFIRE = 16,
  PLAYER_A_DOWNLEFTFIRE  = 17,
  PLAYER_B_NOOP          = 18,
  PLAYER_B_FIRE          = 19,
  PLAYER_B_UP            = 20,
  PLAYER_B_RIGHT         = 21,
  PLAYER_B_LEFT          = 22,
  PLAYER_B_DOWN          = 23,
  PLAYER_B_UPRIGHT       = 24,
  PLAYER_B_UPLEFT        = 25,
  PLAYER_B_DOWNRIGHT     = 26,
  PLAYER_B_DOWNLEFT      = 27,
  PLAYER_B_UPFIRE        = 28,
  PLAYER_B_RIGHTFIRE     = 29,
  PLAYER_B_LEFTFIRE      = 30,
  PLAYER_B_DOWNFIRE      = 31,
  PLAYER_B_UPRIGHTFIRE   = 32,
  PLAYER_B_UPLEFTFIRE    = 33,
  PLAYER_B_DOWNRIGHTFIRE = 34,
  PLAYER_B_DOWNLEFTFIRE  = 35,
  RESET                  = 40, // MGB: Use SYSTEM_RESET to reset the environment.
  UNDEFINED              = 41,
  RANDOM                 = 42,
  SAVE_STATE             = 43,
  LOAD_STATE             = 44,
  SYSTEM_RESET           = 45,
  LAST_ACTION_INDEX      = 50;

public static final int PLAYER_A_MAX = (18);
public static final int PLAYER_B_MAX = (36);

@Namespace("ale") public static native @StdString BytePointer action_to_string(@Cast("ale::Action") int a);

//  Define datatypes

// mode type

// difficulty type

// reward type for RL interface

// Other constant values
public static final int RAM_LENGTH = 128;

  // namespace ale

// #endif  // __CONSTANTS_H__


// Parsed from emucore/M6532.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: M6532.hxx,v 1.5 2007/01/01 18:04:48 stephena Exp $
//============================================================================

// #ifndef M6532_HXX
// #define M6532_HXX

  // namespace stella
  // namespace ale

// #include "emucore/Device.hxx"
// #include "emucore/Random.hxx"
// Targeting ../M6532.java



  // namespace stella
  // namespace ale

// #endif



// Parsed from emucore/Cart.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Cart.hxx,v 1.19 2007/06/14 13:47:50 stephena Exp $
//============================================================================

// #ifndef CARTRIDGE_HXX
// #define CARTRIDGE_HXX

  // namespace stella
  // namespace ale

// #include <fstream>
// #include "emucore/Device.hxx"
// #include "common/Log.hpp"
// Targeting ../Cartridge.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Console.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Console.hxx,v 1.61 2007/07/27 13:49:16 stephena Exp $
//============================================================================

// #ifndef CONSOLE_HXX
// #define CONSOLE_HXX
// Targeting ../MediaSource.java


// Targeting ../Switches.java



  // namespace stella
  // namespace ale

// #include "emucore/Control.hxx"
// #include "emucore/Props.hxx"
// #include "emucore/TIA.hxx"
// #include "emucore/Cart.hxx"
// Targeting ../Console.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Screen.hxx

/******************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  Screen.hxx
 *
 *  Base class for displaying the screen of the 2600.
 **************************************************************************** */

// #ifndef SCREEN_HXX
// #define SCREEN_HXX
// Targeting ../Screen.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Sound.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Sound.hxx,v 1.23 2007/01/01 18:04:50 stephena Exp $
//============================================================================

// #ifndef SOUND_HXX
// #define SOUND_HXX
// Targeting ../Sound.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Settings.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Settings.hxx,v 1.33 2007/07/27 13:49:16 stephena Exp $
//============================================================================

// #ifndef SETTINGS_HXX
// #define SETTINGS_HXX

  // namespace stella
  // namespace ale

// #include <map>
// #include <vector>
// #include <stdexcept>
// Targeting ../Settings.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/OSystem.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: OSystem.hxx,v 1.55 2007/08/12 23:05:12 stephena Exp $
//============================================================================

// #ifndef OSYSTEM_HXX
// #define OSYSTEM_HXX

  // namespace stella
  // namespace ale

// #include <filesystem>

// #include "emucore/Sound.hxx"
// #include "emucore/Screen.hxx"
// #include "common/SoundNull.hxx"
// #include "emucore/Settings.hxx"
// #include "emucore/Console.hxx"
// #include "emucore/Event.hxx"  //ALE 
// #include "common/ColourPalette.hpp"
// #include "common/Log.hpp"
// Targeting ../OSystem.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/Props.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: Props.hxx,v 1.15 2007/02/06 23:34:33 stephena Exp $
//============================================================================

// #ifndef PROPERTIES_HXX
// #define PROPERTIES_HXX

// #include <string>
// #include <iostream>

/** enum ale::stella::PropertyType */
public static final int
  Cartridge_MD5 = 0,
  Cartridge_Manufacturer = 1,
  Cartridge_ModelNo = 2,
  Cartridge_Name = 3,
  Cartridge_Note = 4,
  Cartridge_Rarity = 5,
  Cartridge_Sound = 6,
  Cartridge_Type = 7,
  Console_LeftDifficulty = 8,
  Console_RightDifficulty = 9,
  Console_TelevisionType = 10,
  Console_SwapPorts = 11,
  Controller_Left = 12,
  Controller_Right = 13,
  Controller_SwapPaddles = 14,
  Display_Format = 15,
  Display_YStart = 16,
  Display_Height = 17,
  Display_Phosphor = 18,
  Display_PPBlend = 19,
  Emulation_HmoveBlanks = 20,
  LastPropType = 21;
// Targeting ../StellaProperties.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from emucore/PropsSet.hxx

//============================================================================
//
//   SSSS    tt          lll  lll       
//  SS  SS   tt           ll   ll        
//  SS     tttttt  eeee   ll   ll   aaaa 
//   SSSS    tt   ee  ee  ll   ll      aa
//      SS   tt   eeeeee  ll   ll   aaaaa  --  "An Atari 2600 VCS Emulator"
//  SS  SS   tt   ee      ll   ll  aa  aa
//   SSSS     ttt  eeeee llll llll  aaaaa
//
// Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
//
// See the file "license" for information on usage and redistribution of
// this file, and for a DISCLAIMER OF ALL WARRANTIES.
//
// $Id: PropsSet.hxx,v 1.18 2007/01/01 18:04:49 stephena Exp $
//============================================================================

// #ifndef PROPERTIES_SET_HXX
// #define PROPERTIES_SET_HXX
// Targeting ../StellaPropertiesSet.java



  // namespace stella
  // namespace ale

// #endif


// Parsed from common/ColourPalette.hpp

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  ColourPalette.hpp
 *
 *  Enables conversion from NTSC/SECAM/PAL to RGB via the OSystem's palette.
 **************************************************************************** */

// #ifndef __COLOUR_PALETTE_HPP__
// #define __COLOUR_PALETTE_HPP__

// #include <vector>
// #include <string>
// Targeting ../ColourPalette.java



  // namespace ale

// #endif  // __COLOUR_PALETTE_HPP__


// Parsed from common/ScreenExporter.hpp

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  ScreenExporter.hpp
 *
 *  A class for exporting Atari 2600 frames as PNGs.
 *
 **************************************************************************** */

// #ifndef __SCREEN_EXPORTER_HPP__
// #define __SCREEN_EXPORTER_HPP__

// #include <string>

// #include "common/Constants.h"
// #include "common/ColourPalette.hpp"
// #include "environment/ale_screen.hpp"
// Targeting ../ScreenExporter.java



  // namespace ale

// #endif  // __SCREEN_EXPORTER_HPP__


// Parsed from environment/ale_ram.hpp

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  ale_ram.hpp
 *
 *  A class that encapsulates the Atari 2600 RAM. Code is provided inline for
 *   efficiency reasonss.
 *
 **************************************************************************** */

// #ifndef __ALE_RAM_HPP__
// #define __ALE_RAM_HPP__

// #include <cstddef>
// #include <cstring>
// Targeting ../ALERAM.java



// Byte accessors




  // namespace ale

// #endif  // __ALE_RAM_HPP__


// Parsed from environment/ale_screen.hpp

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  ale_screen.hpp
 *
 *  A class that encapsulates an Atari 2600 screen. Code is provided inline for
 *   efficiency reasons.
 *
 **************************************************************************** */

// #ifndef __ALE_SCREEN_HPP__
// #define __ALE_SCREEN_HPP__

// #include <cassert>
// #include <cstddef>
// #include <cstring>
// #include <memory>
// #include <vector>
// Targeting ../ALEScreen.java











// pixel accessors, (row, column)-ordered




// Access a whole row


  // namespace ale

// #endif  // __ALE_SCREEN_HPP__


// Parsed from environment/ale_state.hpp

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  ale_state.hpp
 *
 *  A class that stores a copy of the current ALE state. We use one to keep track
 *   of paddle resistance and in search trees.
 *
 **************************************************************************** */

// #ifndef __ALE_STATE_HPP__
// #define __ALE_STATE_HPP__

// #include <string>
// #include <optional>

// #include "common/Constants.h"
// #include "emucore/OSystem.hxx"
// #include "emucore/Event.hxx"
// #include "emucore/Random.hxx"
// #include "common/Log.hpp"
// Targeting ../RomSettings.java



public static final int PADDLE_DELTA = 23000;
// MGB Values taken from Paddles.cxx (Stella 3.3) - 1400000 * [5,235] / 255
public static final int PADDLE_MIN = 27450;
// MGB - was 1290196; updated to 790196... seems to be fine for breakout and pong;
//  avoids pong paddle going off screen
public static final int PADDLE_MAX = 790196;
public static final int PADDLE_DEFAULT_VALUE = (((PADDLE_MAX - PADDLE_MIN) / 2) + PADDLE_MIN);
// Targeting ../ALEState.java



  // namespace ale

// #endif  // __ALE_STATE_HPP__


// Parsed from environment/stella_environment_wrapper.hpp

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  stella_environment_wrapper.hpp
 *
 * Method wrapper for StellaEnvironment.
 *
 **************************************************************************** */

// #ifndef __STELLA_ENVIRONMENT_WRAPPER_HPP__
// #define __STELLA_ENVIRONMENT_WRAPPER_HPP__

// #include "common/Constants.h"
// #include "emucore/Random.hxx"
// Targeting ../StellaEnvironmentWrapper.java



  // namespace ale

// #endif  // __STELLA_ENVIRONMENT_WRAPPER_HPP__


// Parsed from environment/stella_environment.hpp

/* *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  stella_environment.hpp
 *
 *  A class that wraps around the Stella core to provide users with a typical
 *  reinforcement learning environment interface.
 *
 **************************************************************************** */

// #ifndef __STELLA_ENVIRONMENT_HPP__
// #define __STELLA_ENVIRONMENT_HPP__

// #include "environment/ale_ram.hpp"
// #include "environment/ale_screen.hpp"
// #include "environment/ale_state.hpp"
// #include "environment/phosphor_blend.hpp"
// #include "environment/stella_environment_wrapper.hpp"
// #include "emucore/Event.hxx"
// #include "emucore/OSystem.hxx"
// #include "emucore/System.hxx"
// #include "emucore/Random.hxx"
// #include "common/Constants.h"
// #include "games/RomSettings.hpp"
// #include "common/Log.hpp"
// #include "common/ScreenExporter.hpp"

// #include <cstddef>
// #include <memory>
// Targeting ../StellaEnvironment.java



  // namespace ale

// #endif  // __STELLA_ENVIRONMENT_HPP__


// Parsed from ale_interface.hpp

/* *****************************************************************************
 * The line 99 is based on Xitari's code, from Google Inc.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version 2
 * as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 * *****************************************************************************
 * A.L.E (Arcade Learning Environment)
 * Copyright (c) 2009-2013 by Yavar Naddaf, Joel Veness, Marc G. Bellemare and
 *   the Reinforcement Learning and Artificial Intelligence Laboratory
 * Released under the GNU General Public License; see License.txt for details.
 *
 * Based on: Stella  --  "An Atari 2600 VCS Emulator"
 * Copyright (c) 1995-2007 by Bradford W. Mott and the Stella team
 *
 * *****************************************************************************
 *  ale_interface.hpp
 *
 *  The shared library interface.
 **************************************************************************** */

// #ifndef __ALE_INTERFACE_HPP__
// #define __ALE_INTERFACE_HPP__

// #include "emucore/OSystem.hxx"
// #include "games/Roms.hpp"
// #include "environment/stella_environment.hpp"
// #include "common/ScreenExporter.hpp"
// #include "common/Log.hpp"
// #include "version.hpp"

// #include <string>
// #include <optional>
// #include <memory>
// #include <filesystem>
// Targeting ../ALEInterface.java



  // namespace ale

// #endif  // __ALE_INTERFACE_HPP__


}
