// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.kvazaar;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.kvazaar.global.kvazaar.*;


/**
 * \brief Other information about an encoded frame
 */
@Properties(inherit = org.bytedeco.kvazaar.presets.kvazaar.class)
public class kvz_frame_info extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public kvz_frame_info() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public kvz_frame_info(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public kvz_frame_info(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public kvz_frame_info position(long position) {
        return (kvz_frame_info)super.position(position);
    }
    @Override public kvz_frame_info getPointer(long i) {
        return new kvz_frame_info((Pointer)this).offsetAddress(i);
    }


  /**
   * \brief Picture order count
   */
  public native int poc(); public native kvz_frame_info poc(int setter);

  /**
   * \brief Quantization parameter
   */
  public native byte qp(); public native kvz_frame_info qp(byte setter);

  /**
   * \brief Type of the NAL VCL unit
   */
  public native @Cast("kvz_nal_unit_type") int nal_unit_type(); public native kvz_frame_info nal_unit_type(int setter);

  /**
   * \brief Type of the slice
   */
  public native @Cast("kvz_slice_type") int slice_type(); public native kvz_frame_info slice_type(int setter);

  /**
   * \brief Reference picture lists
   *
   * The first list contains the reference picture POCs that are less than the
   * POC of this frame and the second one contains those that are greater.
   */
  public native int ref_list(int i, int j); public native kvz_frame_info ref_list(int i, int j, int setter);
  @MemberGetter public native @Cast("int(* /*[2]*/ )[16]") IntPointer ref_list();

  /**
   * \brief Lengths of the reference picture lists
   */
  public native int ref_list_len(int i); public native kvz_frame_info ref_list_len(int i, int setter);
  @MemberGetter public native IntPointer ref_list_len();

}
