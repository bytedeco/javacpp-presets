// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflow;

import org.bytedeco.tensorflow.Allocator;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.tensorflow.global.tensorflow.*;
  // namespace tensorflow

// Internal structures used by the C API. These are likely to change and should
// not be depended on.

@Properties(inherit = org.bytedeco.tensorflow.presets.tensorflow.class)
public class TF_SessionOptions extends org.bytedeco.tensorflow.AbstractTF_SessionOptions {
    static { Loader.load(); }
    /** Default native constructor. */
    public TF_SessionOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TF_SessionOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TF_SessionOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TF_SessionOptions position(long position) {
        return (TF_SessionOptions)super.position(position);
    }
    @Override public TF_SessionOptions getPointer(long i) {
        return new TF_SessionOptions((Pointer)this).position(position + i);
    }

  public native @ByRef SessionOptions options(); public native TF_SessionOptions options(SessionOptions setter);
}
