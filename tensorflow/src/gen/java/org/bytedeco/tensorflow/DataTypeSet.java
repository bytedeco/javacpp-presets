// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflow;

import org.bytedeco.tensorflow.Allocator;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflow.global.tensorflow.*;


// DataTypeSet represents a set of DataType values as a simple and efficient
// bit mask.  Note that DataTypeSet cannot represent all DataType values; it
// cannot represent any of the DT_*_REF values.
@Namespace("tensorflow") @NoOffset @Properties(inherit = org.bytedeco.tensorflow.presets.tensorflow.class)
public class DataTypeSet extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public DataTypeSet(Pointer p) { super(p); }

  public DataTypeSet(@Const @ByRef DataTypeSet other) { super((Pointer)null); allocate(other); }
  private native void allocate(@Const @ByRef DataTypeSet other);
  public DataTypeSet(@Cast("tensorflow::uint32") int mask) { super((Pointer)null); allocate(mask); }
  private native void allocate(@Cast("tensorflow::uint32") int mask);

  public native @Cast("const bool") boolean Contains(@Cast("tensorflow::DataType") int dt);

  @NoOffset public static class Iterator extends Pointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public Iterator(Pointer p) { super(p); }
  
    public Iterator(@Const @ByRef DataTypeSet set, @Cast("tensorflow::uint32") int pos) { super((Pointer)null); allocate(set, pos); }
    private native void allocate(@Const @ByRef DataTypeSet set, @Cast("tensorflow::uint32") int pos);
    public native @Cast("tensorflow::DataType") @Name("operator *") int multiply();
    public native @ByRef @Name("operator ++") Iterator increment();
    public native @Cast("bool") @Name("operator ==") boolean equals(@Const @ByRef Iterator other);
    public native @Cast("bool") @Name("operator !=") boolean notEquals(@Const @ByRef Iterator other);
    public native @Cast("size_t") @Name("operator -") long subtract(@Const @ByRef Iterator other);
  }

  public static native @Cast("tensorflow::uint32") int ctz_uint32(@Cast("tensorflow::uint32") int x);

  public static native @Cast("tensorflow::uint32") int clz_uint32(@Cast("tensorflow::uint32") int x);

  public native @ByVal Iterator begin();

  public native @ByVal Iterator end();

  public native @Cast("size_t") long size();

  public native @Const @ByVal @Name("operator |") DataTypeSet or(@Const @ByRef DataTypeSet other);
}
