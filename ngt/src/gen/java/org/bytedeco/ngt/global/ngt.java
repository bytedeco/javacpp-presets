// Targeted by JavaCPP version 1.5.7-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.ngt.global;

import org.bytedeco.ngt.*;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

public class ngt extends org.bytedeco.ngt.presets.ngt {
    static { Loader.load(); }

// Targeting ../mapStringString.java


// Targeting ../setString.java


// Targeting ../vectorObjectDistance.java


// Targeting ../vecfloat.java


// Targeting ../pairFloatDouble.java


// Targeting ../pairNGTObjectSize.java


// Parsed from NGT/Common.h

//
// Copyright (C) 2015 Yahoo Japan Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// #pragma once

// #include	<string>
// #include	<vector>
// #include	<queue>
// #include	<map>
// #include	<set>
// #include	<iostream>
// #include	<sstream>
// #include	<fstream>
// #include	<cassert>
// #include	<cstdlib>
// #include	<cmath>
// #include	<cfloat>
// #include	<climits>
// #include	<iomanip>
// #include	<algorithm>
// #include	<typeinfo>

// #include	<sys/time.h>
// #include	<fcntl.h>

// #include	"NGT/defines.h"
// #include	"NGT/SharedMemoryAllocator.h"

// #define ADVANCED_USE_REMOVED_LIST
// #define	SHARED_REMOVED_LIST

// #define	NGTThrowException(MESSAGE)			throw NGT::Exception(__FILE__, (size_t)__LINE__, MESSAGE)
// #define	NGTThrowSpecificException(MESSAGE, TYPE)	throw NGT::TYPE(__FILE__, (size_t)__LINE__, MESSAGE)
// Targeting ../Exception.java


// Targeting ../Args.java


// Targeting ../CompactString.java


// Targeting ../BooleanSet.java


// Targeting ../PropertySet.java


    @Namespace("NGT::Serializer") public static native void read(@Cast("std::istream*") @ByRef Pointer is, @Cast("uint8_t*") BytePointer v, @Cast("size_t") long s);
    @Namespace("NGT::Serializer") public static native void read(@Cast("std::istream*") @ByRef Pointer is, @Cast("uint8_t*") ByteBuffer v, @Cast("size_t") long s);
    @Namespace("NGT::Serializer") public static native void read(@Cast("std::istream*") @ByRef Pointer is, @Cast("uint8_t*") byte[] v, @Cast("size_t") long s);

    @Namespace("NGT::Serializer") public static native void write(@Cast("std::ostream*") @ByRef Pointer os, @Cast("const uint8_t*") BytePointer v, @Cast("size_t") long s);
    @Namespace("NGT::Serializer") public static native void write(@Cast("std::ostream*") @ByRef Pointer os, @Cast("const uint8_t*") ByteBuffer v, @Cast("size_t") long s);
    @Namespace("NGT::Serializer") public static native void write(@Cast("std::ostream*") @ByRef Pointer os, @Cast("const uint8_t*") byte[] v, @Cast("size_t") long s);


   // namespace Serialize


// #ifdef NGT_SHARED_MEMORY_ALLOCATOR
// #endif 

// #ifdef NGT_SHARED_MEMORY_ALLOCATOR

// #else // NGT_SHARED_MEMORY_ALLOCATOR

// #endif // NGT_SHARED_MEMORY_ALLOCATOR


// #ifdef NGT_SHARED_MEMORY_ALLOCATOR

// #endif	// NGT_SHARED_MEMORY_ALLOCATOR

// #pragma pack(2)
// Targeting ../ObjectDistance.java



// #pragma pack()
// Targeting ../Object.java


// Targeting ../ObjectDistances.java


// Targeting ../Container.java


// Targeting ../SearchContainer.java


// Targeting ../InsertContainer.java



 // namespace NGT



// Parsed from NGT/Index.h

//
// Copyright (C) 2015 Yahoo Japan Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// #pragma once

// #include	<string>
// #include	<vector>
// #include	<map>
// #include	<set>
// #include	<bitset>
// #include	<iomanip>
// #include	<unordered_set>

// #include	<sys/time.h>
// #include	<sys/stat.h>
// #include	<stdint.h>

// #include	"NGT/defines.h"
// #include	"NGT/Common.h"
// #include	"NGT/Tree.h"
// #include	"NGT/Thread.h"
// #include	"NGT/Graph.h"
// Targeting ../Property.java


// Targeting ../ngtIndex.java



 // namespace NGT








}
