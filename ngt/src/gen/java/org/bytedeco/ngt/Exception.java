// Targeted by JavaCPP version 1.5.7-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.ngt;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.ngt.global.ngt.*;


  @Namespace("NGT") @NoOffset @Properties(inherit = org.bytedeco.ngt.presets.ngt.class)
public class Exception extends Pointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public Exception(Pointer p) { super(p); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public Exception(long size) { super((Pointer)null); allocateArray(size); }
      private native void allocateArray(long size);
      @Override public Exception position(long position) {
          return (Exception)super.position(position);
      }
      @Override public Exception getPointer(long i) {
          return new Exception((Pointer)this).offsetAddress(i);
      }
  
    public Exception() { super((Pointer)null); allocate(); }
    private native void allocate();
    public Exception(@StdString BytePointer file, @Cast("size_t") long line, @Cast("std::stringstream*") @ByRef Pointer m) { super((Pointer)null); allocate(file, line, m); }
    private native void allocate(@StdString BytePointer file, @Cast("size_t") long line, @Cast("std::stringstream*") @ByRef Pointer m);
    public Exception(@StdString String file, @Cast("size_t") long line, @Cast("std::stringstream*") @ByRef Pointer m) { super((Pointer)null); allocate(file, line, m); }
    private native void allocate(@StdString String file, @Cast("size_t") long line, @Cast("std::stringstream*") @ByRef Pointer m);
    public Exception(@StdString BytePointer file, @Cast("size_t") long line, @StdString BytePointer m) { super((Pointer)null); allocate(file, line, m); }
    private native void allocate(@StdString BytePointer file, @Cast("size_t") long line, @StdString BytePointer m);
    public Exception(@StdString String file, @Cast("size_t") long line, @StdString String m) { super((Pointer)null); allocate(file, line, m); }
    private native void allocate(@StdString String file, @Cast("size_t") long line, @StdString String m);
    public native void set(@StdString BytePointer file, @Cast("size_t") long line, @StdString BytePointer m);
    public native void set(@StdString String file, @Cast("size_t") long line, @StdString String m);
    public native @ByRef @Name("operator =") Exception put(@Const @ByRef Exception e);
    public native @Cast("const char*") BytePointer what();
    public native @StdString @ByRef BytePointer getMessage();
  }
