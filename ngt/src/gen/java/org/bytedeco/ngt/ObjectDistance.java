// Targeted by JavaCPP version 1.5.7-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.ngt;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.ngt.global.ngt.*;

  @Namespace("NGT") @NoOffset @Properties(inherit = org.bytedeco.ngt.presets.ngt.class)
public class ObjectDistance extends Pointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public ObjectDistance(Pointer p) { super(p); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public ObjectDistance(long size) { super((Pointer)null); allocateArray(size); }
      private native void allocateArray(long size);
      @Override public ObjectDistance position(long position) {
          return (ObjectDistance)super.position(position);
      }
      @Override public ObjectDistance getPointer(long i) {
          return new ObjectDistance((Pointer)this).offsetAddress(i);
      }
  
    public ObjectDistance() { super((Pointer)null); allocate(); }
    private native void allocate();
    public ObjectDistance(@Cast("unsigned int") int i, float d) { super((Pointer)null); allocate(i, d); }
    private native void allocate(@Cast("unsigned int") int i, float d);
    public native @Cast("bool") @Name("operator ==") boolean equals(@Const @ByRef ObjectDistance o);
    public native void set(@Cast("unsigned int") int i, float d);
    public native @Cast("bool") @Name("operator <") boolean lessThan(@Const @ByRef ObjectDistance o);
    public native @Cast("bool") @Name("operator >") boolean greaterThan(@Const @ByRef ObjectDistance o);
    public native void serialize(@Cast("std::ofstream*") @ByRef Pointer os);
    public native void deserialize(@Cast("std::ifstream*") @ByRef Pointer is);

    public native void serializeAsText(@Cast("std::ofstream*") @ByRef Pointer os);

    public native void deserializeAsText(@Cast("std::ifstream*") @ByRef Pointer is);

    
    
    public native @Cast("uint32_t") int id(); public native ObjectDistance id(int setter);
    public native float distance(); public native ObjectDistance distance(float setter);
  }
