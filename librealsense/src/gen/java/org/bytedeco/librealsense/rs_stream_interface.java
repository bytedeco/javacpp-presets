// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.librealsense;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.librealsense.global.RealSense.*;


// this interface is an entry point for extending librealsense with custom devices while keeping librealsense public API
// the interfaces in this file are expected to be inherited from, never used directly, rs.hpp provides safer and simpler wrapper
// an example usage would be playback and record. this API allows to integrate custom playback&record implementation while keeping librealsense API

@Properties(inherit = org.bytedeco.librealsense.presets.RealSense.class)
public class rs_stream_interface extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public rs_stream_interface(Pointer p) { super(p); }


    public native @ByVal rs_extrinsics get_extrinsics_to(@Const @ByRef rs_stream_interface r);
    public native float get_depth_scale();
    
    public native @ByVal rs_intrinsics get_intrinsics();
    public native @ByVal rs_intrinsics get_rectified_intrinsics();
    public native @Cast("rs_format") int get_format();
    public native int get_framerate();

    public native double get_frame_metadata(@Cast("rs_frame_metadata") int frame_metadata);
    public native @Cast("bool") boolean supports_frame_metadata(@Cast("rs_frame_metadata") int frame_metadata);
    public native int get_frame_stride();
    public native int get_frame_bpp();
    public native @Cast("unsigned long long") long get_frame_number();
    public native double get_frame_timestamp();
    public native long get_frame_system_time();
    public native @Cast("const uint8_t*") BytePointer get_frame_data();

    public native int get_mode_count();
    public native void get_mode(int mode, IntPointer w, IntPointer h, @Cast("rs_format*") IntPointer f, IntPointer fps);
    public native void get_mode(int mode, IntBuffer w, IntBuffer h, @Cast("rs_format*") IntBuffer f, IntBuffer fps);
    public native void get_mode(int mode, int[] w, int[] h, @Cast("rs_format*") int[] f, int[] fps);

    public native @Cast("bool") boolean is_enabled();
    public native @Cast("rs_stream") int get_stream_type();
}
