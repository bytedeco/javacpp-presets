// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.llvm.LLVM;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.llvm.global.LLVM.*;


/**
 * Callback type for ExecutionSession lookups.
 *
 * If Err is LLVMErrorSuccess then Result will contain a pointer to a
 * list of ( SymbolStringPtr, JITEvaluatedSymbol ) pairs of length NumPairs.
 *
 * If Err is a failure value then Result and Ctx are undefined and should
 * not be accessed. The Callback is responsible for handling the error
 * value (e.g. by calling LLVMGetErrorMessage + LLVMDisposeErrorMessage).
 *
 * The caller retains ownership of the Result array and will release all
 * contained symbol names. Clients are responsible for retaining any symbol
 * names that they wish to hold after the function returns.
 */
@Properties(inherit = org.bytedeco.llvm.presets.LLVM.class)
public class LLVMOrcExecutionSessionLookupHandleResultFunction extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    LLVMOrcExecutionSessionLookupHandleResultFunction(Pointer p) { super(p); }
    protected LLVMOrcExecutionSessionLookupHandleResultFunction() { allocate(); }
    private native void allocate();
    public native void call(
    LLVMErrorRef Err, @Cast("LLVMOrcCSymbolMapPairs") LLVMOrcCSymbolMapPair Result, @Cast("size_t") long NumPairs,
    Pointer Ctx);
}
