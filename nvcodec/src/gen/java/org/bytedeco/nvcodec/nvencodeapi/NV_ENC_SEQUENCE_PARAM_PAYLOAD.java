// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.nvcodec.nvencodeapi;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.nvcodec.nvcuvid.*;
import static org.bytedeco.nvcodec.global.nvcuvid.*;

import static org.bytedeco.nvcodec.global.nvencodeapi.*;



/**
 * \struct _NV_ENC_SEQUENCE_PARAM_PAYLOAD
 * Sequence and picture paramaters payload.
 */
@Properties(inherit = org.bytedeco.nvcodec.presets.nvencodeapi.class)
public class NV_ENC_SEQUENCE_PARAM_PAYLOAD extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public NV_ENC_SEQUENCE_PARAM_PAYLOAD() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public NV_ENC_SEQUENCE_PARAM_PAYLOAD(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public NV_ENC_SEQUENCE_PARAM_PAYLOAD(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public NV_ENC_SEQUENCE_PARAM_PAYLOAD position(long position) {
        return (NV_ENC_SEQUENCE_PARAM_PAYLOAD)super.position(position);
    }
    @Override public NV_ENC_SEQUENCE_PARAM_PAYLOAD getPointer(long i) {
        return new NV_ENC_SEQUENCE_PARAM_PAYLOAD((Pointer)this).position(position + i);
    }

    /** [in]:  Struct version. Must be set to ::NV_ENC_INITIALIZE_PARAMS_VER. */
    public native @Cast("uint32_t") int version(); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD version(int setter);
    /** [in]:  Specifies the size of the spsppsBuffer provided by the client */
    public native @Cast("uint32_t") int inBufferSize(); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD inBufferSize(int setter);
    /** [in]:  Specifies the SPS id to be used in sequence header. Default value is 0.  */
    public native @Cast("uint32_t") int spsId(); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD spsId(int setter);
    /** [in]:  Specifies the PPS id to be used in picture header. Default value is 0.  */
    public native @Cast("uint32_t") int ppsId(); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD ppsId(int setter);
    /** [in]:  Specifies bitstream header pointer of size NV_ENC_SEQUENCE_PARAM_PAYLOAD::inBufferSize. 
                                                                         It is the client's responsibility to manage this memory. */
    public native Pointer spsppsBuffer(); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD spsppsBuffer(Pointer setter);
    /** [out]: Size of the sequence and picture header in bytes. */
    public native @Cast("uint32_t*") IntPointer outSPSPPSPayloadSize(); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD outSPSPPSPayloadSize(IntPointer setter);
    /** [in]:  Reserved and must be set to 0 */
    public native @Cast("uint32_t") int reserved(int i); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD reserved(int i, int setter);
    @MemberGetter public native @Cast("uint32_t*") IntPointer reserved();
    /** [in]:  Reserved and must be set to NULL */
    public native Pointer reserved2(int i); public native NV_ENC_SEQUENCE_PARAM_PAYLOAD reserved2(int i, Pointer setter);
    @MemberGetter public native @Cast("void**") PointerPointer reserved2();
}
