// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.nvcodec.nvencodeapi;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;
import org.bytedeco.nvcodec.nvcuvid.*;
import static org.bytedeco.nvcodec.global.nvcuvid.*;

import static org.bytedeco.nvcodec.global.nvencodeapi.*;

 


/**
 * \struct _NV_ENC_CONFIG_H264_VUI_PARAMETERS
 * H264 Video Usability Info parameters
 */
@Properties(inherit = org.bytedeco.nvcodec.presets.nvencodeapi.class)
public class NV_ENC_CONFIG_H264_VUI_PARAMETERS extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public NV_ENC_CONFIG_H264_VUI_PARAMETERS() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public NV_ENC_CONFIG_H264_VUI_PARAMETERS(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public NV_ENC_CONFIG_H264_VUI_PARAMETERS(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public NV_ENC_CONFIG_H264_VUI_PARAMETERS position(long position) {
        return (NV_ENC_CONFIG_H264_VUI_PARAMETERS)super.position(position);
    }
    @Override public NV_ENC_CONFIG_H264_VUI_PARAMETERS getPointer(long i) {
        return new NV_ENC_CONFIG_H264_VUI_PARAMETERS((Pointer)this).position(position + i);
    }

    /** [in]: if set to 1 , it specifies that the overscanInfo is present */
    public native @Cast("uint32_t") int overscanInfoPresentFlag(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS overscanInfoPresentFlag(int setter);
    /** [in]: Specifies the overscan info(as defined in Annex E of the ITU-T Specification). */
    public native @Cast("uint32_t") int overscanInfo(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS overscanInfo(int setter);
    /** [in]: If set to 1, it specifies  that the videoFormat, videoFullRangeFlag and colourDescriptionPresentFlag are present. */
    public native @Cast("uint32_t") int videoSignalTypePresentFlag(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS videoSignalTypePresentFlag(int setter);
    /** [in]: Specifies the source video format(as defined in Annex E of the ITU-T Specification).*/
    public native @Cast("uint32_t") int videoFormat(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS videoFormat(int setter);
    /** [in]: Specifies the output range of the luma and chroma samples(as defined in Annex E of the ITU-T Specification). */
    public native @Cast("uint32_t") int videoFullRangeFlag(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS videoFullRangeFlag(int setter);
    /** [in]: If set to 1, it specifies that the colourPrimaries, transferCharacteristics and colourMatrix are present. */
    public native @Cast("uint32_t") int colourDescriptionPresentFlag(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS colourDescriptionPresentFlag(int setter);
    /** [in]: Specifies color primaries for converting to RGB(as defined in Annex E of the ITU-T Specification) */
    public native @Cast("uint32_t") int colourPrimaries(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS colourPrimaries(int setter);
    /** [in]: Specifies the opto-electronic transfer characteristics to use (as defined in Annex E of the ITU-T Specification) */
    public native @Cast("uint32_t") int transferCharacteristics(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS transferCharacteristics(int setter);
    /** [in]: Specifies the matrix coefficients used in deriving the luma and chroma from the RGB primaries (as defined in Annex E of the ITU-T Specification). */
    public native @Cast("uint32_t") int colourMatrix(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS colourMatrix(int setter);
    /** [in]: if set to 1 , it specifies that the chromaSampleLocationTop and chromaSampleLocationBot are present.*/
    public native @Cast("uint32_t") int chromaSampleLocationFlag(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS chromaSampleLocationFlag(int setter);
    /** [in]: Specifies the chroma sample location for top field(as defined in Annex E of the ITU-T Specification) */
    public native @Cast("uint32_t") int chromaSampleLocationTop(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS chromaSampleLocationTop(int setter);
    /** [in]: Specifies the chroma sample location for bottom field(as defined in Annex E of the ITU-T Specification) */
    public native @Cast("uint32_t") int chromaSampleLocationBot(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS chromaSampleLocationBot(int setter);
    /** [in]: if set to 1, it specifies the bitstream restriction parameters are present in the bitstream.*/
    public native @Cast("uint32_t") int bitstreamRestrictionFlag(); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS bitstreamRestrictionFlag(int setter);
    public native @Cast("uint32_t") int reserved(int i); public native NV_ENC_CONFIG_H264_VUI_PARAMETERS reserved(int i, int setter);
    @MemberGetter public native @Cast("uint32_t*") IntPointer reserved();
}
