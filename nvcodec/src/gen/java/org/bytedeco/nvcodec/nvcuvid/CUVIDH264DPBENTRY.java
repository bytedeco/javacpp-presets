// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.nvcodec.nvcuvid;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.nvcodec.global.nvcuvid.*;


/*********************************************************/
/** \struct CUVIDH264DPBENTRY
/** H.264 DPB entry
/** This structure is used in CUVIDH264PICPARAMS structure
/*********************************************************/
@Properties(inherit = org.bytedeco.nvcodec.presets.nvcuvid.class)
public class CUVIDH264DPBENTRY extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUVIDH264DPBENTRY() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUVIDH264DPBENTRY(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUVIDH264DPBENTRY(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUVIDH264DPBENTRY position(long position) {
        return (CUVIDH264DPBENTRY)super.position(position);
    }
    @Override public CUVIDH264DPBENTRY getPointer(long i) {
        return new CUVIDH264DPBENTRY((Pointer)this).position(position + i);
    }

    /** picture index of reference frame                                        */
    public native int PicIdx(); public native CUVIDH264DPBENTRY PicIdx(int setter);
    /** frame_num(short-term) or LongTermFrameIdx(long-term)                    */
    public native int FrameIdx(); public native CUVIDH264DPBENTRY FrameIdx(int setter);
    /** 0=short term reference, 1=long term reference                           */
    public native int is_long_term(); public native CUVIDH264DPBENTRY is_long_term(int setter);
    /** non-existing reference frame (corresponding PicIdx should be set to -1) */
    public native int not_existing(); public native CUVIDH264DPBENTRY not_existing(int setter);
    /** 0=unused, 1=top_field, 2=bottom_field, 3=both_fields                    */
    public native int used_for_reference(); public native CUVIDH264DPBENTRY used_for_reference(int setter);
    /** field order count of top and bottom fields                              */
    public native int FieldOrderCnt(int i); public native CUVIDH264DPBENTRY FieldOrderCnt(int i, int setter);
    @MemberGetter public native IntPointer FieldOrderCnt();
}
