// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.nvcodec.nvcuvid;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.nvcodec.global.nvcuvid.*;


/**********************************************************************************/
/** \ingroup STRUCTS
/** \struct CUSEIMESSAGE;
/** Used in CUVIDSEIMESSAGEINFO structure
/**********************************************************************************/
@Properties(inherit = org.bytedeco.nvcodec.presets.nvcuvid.class)
public class CUSEIMESSAGE extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUSEIMESSAGE() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUSEIMESSAGE(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUSEIMESSAGE(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUSEIMESSAGE position(long position) {
        return (CUSEIMESSAGE)super.position(position);
    }
    @Override public CUSEIMESSAGE getPointer(long i) {
        return new CUSEIMESSAGE((Pointer)this).offsetAddress(i);
    }

    /** OUT: SEI Message Type      */
    public native @Cast("unsigned char") byte sei_message_type(); public native CUSEIMESSAGE sei_message_type(byte setter);
    public native @Cast("unsigned char") byte reserved(int i); public native CUSEIMESSAGE reserved(int i, byte setter);
    @MemberGetter public native @Cast("unsigned char*") BytePointer reserved();
    /** OUT: SEI Message Size      */
    public native @Cast("unsigned int") int sei_message_size(); public native CUSEIMESSAGE sei_message_size(int setter);
}
