// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.nvcodec.nvcuvid;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.nvcodec.global.nvcuvid.*;


/****************************************************/
/** \struct CUVIDRECONFIGUREDECODERINFO
/** Struct for decoder reset
/** This structure is used in cuvidReconfigureDecoder() API
/****************************************************/
@Properties(inherit = org.bytedeco.nvcodec.presets.nvcuvid.class)
public class CUVIDRECONFIGUREDECODERINFO extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUVIDRECONFIGUREDECODERINFO() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUVIDRECONFIGUREDECODERINFO(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUVIDRECONFIGUREDECODERINFO(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUVIDRECONFIGUREDECODERINFO position(long position) {
        return (CUVIDRECONFIGUREDECODERINFO)super.position(position);
    }
    @Override public CUVIDRECONFIGUREDECODERINFO getPointer(long i) {
        return new CUVIDRECONFIGUREDECODERINFO((Pointer)this).position(position + i);
    }

    /** IN: Coded sequence width in pixels, MUST be < = ulMaxWidth defined at CUVIDDECODECREATEINFO  */
    public native @Cast("unsigned int") int ulWidth(); public native CUVIDRECONFIGUREDECODERINFO ulWidth(int setter);
    /** IN: Coded sequence height in pixels, MUST be < = ulMaxHeight defined at CUVIDDECODECREATEINFO  */
    public native @Cast("unsigned int") int ulHeight(); public native CUVIDRECONFIGUREDECODERINFO ulHeight(int setter);
    /** IN: Post processed output width */
    public native @Cast("unsigned int") int ulTargetWidth(); public native CUVIDRECONFIGUREDECODERINFO ulTargetWidth(int setter);
    /** IN: Post Processed output height */
    public native @Cast("unsigned int") int ulTargetHeight(); public native CUVIDRECONFIGUREDECODERINFO ulTargetHeight(int setter);
    /** IN: Maximum number of internal decode surfaces */
    public native @Cast("unsigned int") int ulNumDecodeSurfaces(); public native CUVIDRECONFIGUREDECODERINFO ulNumDecodeSurfaces(int setter);
    /** Reserved for future use. Set to Zero */
    public native @Cast("unsigned int") int reserved1(int i); public native CUVIDRECONFIGUREDECODERINFO reserved1(int i, int setter);
    @MemberGetter public native @Cast("unsigned int*") IntPointer reserved1();
    /**
    * IN: Area of frame to be displayed. Use-case : Source Cropping
    */
        @Name("display_area.left") public native short display_area_left(); public native CUVIDRECONFIGUREDECODERINFO display_area_left(short setter);
        @Name("display_area.top") public native short display_area_top(); public native CUVIDRECONFIGUREDECODERINFO display_area_top(short setter);
        @Name("display_area.right") public native short display_area_right(); public native CUVIDRECONFIGUREDECODERINFO display_area_right(short setter);
        @Name("display_area.bottom") public native short display_area_bottom(); public native CUVIDRECONFIGUREDECODERINFO display_area_bottom(short setter);
    /**
    * IN: Target Rectangle in the OutputFrame. Use-case : Aspect ratio Conversion
    */
        @Name("target_rect.left") public native short target_rect_left(); public native CUVIDRECONFIGUREDECODERINFO target_rect_left(short setter);
        @Name("target_rect.top") public native short target_rect_top(); public native CUVIDRECONFIGUREDECODERINFO target_rect_top(short setter);
        @Name("target_rect.right") public native short target_rect_right(); public native CUVIDRECONFIGUREDECODERINFO target_rect_right(short setter);
        @Name("target_rect.bottom") public native short target_rect_bottom(); public native CUVIDRECONFIGUREDECODERINFO target_rect_bottom(short setter);
    /** Reserved for future use. Set to Zero */
    public native @Cast("unsigned int") int reserved2(int i); public native CUVIDRECONFIGUREDECODERINFO reserved2(int i, int setter);
    @MemberGetter public native @Cast("unsigned int*") IntPointer reserved2();
}
