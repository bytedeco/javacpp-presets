// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;

// #endif  // __cplusplus

// C API for TFLite telemetry profiler.
// See C++ interface in tflite::telemetry::TelemetryProfiler.
// Note: This struct does not comply with ABI stability.
@Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class TfLiteTelemetryProfilerStruct extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TfLiteTelemetryProfilerStruct() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TfLiteTelemetryProfilerStruct(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TfLiteTelemetryProfilerStruct(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TfLiteTelemetryProfilerStruct position(long position) {
        return (TfLiteTelemetryProfilerStruct)super.position(position);
    }
    @Override public TfLiteTelemetryProfilerStruct getPointer(long i) {
        return new TfLiteTelemetryProfilerStruct((Pointer)this).offsetAddress(i);
    }

  // Data that profiler needs to identify itself. This data is owned by the
  // profiler. The profiler is owned in the user code, so the profiler is
  // responsible for deallocating this when it is destroyed.
  public native Pointer data(); public native TfLiteTelemetryProfilerStruct data(Pointer setter);

  // Reports a telemetry event with status.
  // `event_name` indicates the name of the event (e.g. "Invoke") and should not
  // be nullptr.
  // `status`: uint64_t representation of TelemetryStatusCode.
  public static class ReportTelemetryEvent_TfLiteTelemetryProfilerStruct_BytePointer_long extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    ReportTelemetryEvent_TfLiteTelemetryProfilerStruct_BytePointer_long(Pointer p) { super(p); }
      protected ReportTelemetryEvent_TfLiteTelemetryProfilerStruct_BytePointer_long() { allocate(); }
      private native void allocate();
      public native void call(
        TfLiteTelemetryProfilerStruct profiler, @Cast("const char*") BytePointer event_name,
        @Cast("uint64_t") long status);
  }
  public native ReportTelemetryEvent_TfLiteTelemetryProfilerStruct_BytePointer_long ReportTelemetryEvent(); public native TfLiteTelemetryProfilerStruct ReportTelemetryEvent(ReportTelemetryEvent_TfLiteTelemetryProfilerStruct_BytePointer_long setter);

  // Reports an op telemetry event with status.
  // Same as `ReportTelemetryEvent`, with additional args `op_idx` and
  // `subgraph_idx`.
  // `status`: uint64_t representation of TelemetryStatusCode.
  public static class ReportTelemetryOpEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    ReportTelemetryOpEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long(Pointer p) { super(p); }
      protected ReportTelemetryOpEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long() { allocate(); }
      private native void allocate();
      public native void call(
        TfLiteTelemetryProfilerStruct profiler, @Cast("const char*") BytePointer event_name,
        @Cast("int64_t") long op_idx, @Cast("int64_t") long subgraph_idx, @Cast("uint64_t") long status);
  }
  public native ReportTelemetryOpEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long ReportTelemetryOpEvent(); public native TfLiteTelemetryProfilerStruct ReportTelemetryOpEvent(ReportTelemetryOpEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long setter);

  // Reports the model and interpreter settings.
  // `setting_name` indicates the name of the setting and should not be nullptr.
  // `settings`'s lifespan is not guaranteed outside the scope of
  // `ReportSettings` call.
  public static class ReportSettings_TfLiteTelemetryProfilerStruct_BytePointer_TfLiteTelemetrySettings extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    ReportSettings_TfLiteTelemetryProfilerStruct_BytePointer_TfLiteTelemetrySettings(Pointer p) { super(p); }
      protected ReportSettings_TfLiteTelemetryProfilerStruct_BytePointer_TfLiteTelemetrySettings() { allocate(); }
      private native void allocate();
      public native void call(
        TfLiteTelemetryProfilerStruct profiler, @Cast("const char*") BytePointer setting_name,
        @Const TfLiteTelemetrySettings settings);
  }
  public native ReportSettings_TfLiteTelemetryProfilerStruct_BytePointer_TfLiteTelemetrySettings ReportSettings(); public native TfLiteTelemetryProfilerStruct ReportSettings(ReportSettings_TfLiteTelemetryProfilerStruct_BytePointer_TfLiteTelemetrySettings setter);

  // Signals the beginning of an operator invocation.
  // `op_name` is the name of the operator and should not be nullptr.
  // Op invoke event are triggered with OPERATOR_INVOKE_EVENT type for TfLite
  // ops and delegate kernels, and DELEGATE_OPERATOR_INVOKE_EVENT for delegate
  // ops within a delegate kernels, if the instrumentation is in place.
  // Returns event handle which can be passed to `EndOpInvokeEvent` later.
  public static class ReportBeginOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    ReportBeginOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long(Pointer p) { super(p); }
      protected ReportBeginOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long() { allocate(); }
      private native void allocate();
      public native @Cast("uint32_t") int call(
        TfLiteTelemetryProfilerStruct profiler, @Cast("const char*") BytePointer op_name,
        @Cast("int64_t") long op_idx, @Cast("int64_t") long subgraph_idx);
  }
  public native ReportBeginOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long ReportBeginOpInvokeEvent(); public native TfLiteTelemetryProfilerStruct ReportBeginOpInvokeEvent(ReportBeginOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long setter);

  // Signals the end to the event specified by `event_handle`.
  public static class ReportEndOpInvokeEvent_TfLiteTelemetryProfilerStruct_int extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    ReportEndOpInvokeEvent_TfLiteTelemetryProfilerStruct_int(Pointer p) { super(p); }
      protected ReportEndOpInvokeEvent_TfLiteTelemetryProfilerStruct_int() { allocate(); }
      private native void allocate();
      public native void call(
        TfLiteTelemetryProfilerStruct profiler, @Cast("uint32_t") int event_handle);
  }
  public native ReportEndOpInvokeEvent_TfLiteTelemetryProfilerStruct_int ReportEndOpInvokeEvent(); public native TfLiteTelemetryProfilerStruct ReportEndOpInvokeEvent(ReportEndOpInvokeEvent_TfLiteTelemetryProfilerStruct_int setter);

  // For op / delegate op with built-in performance measurements, they
  // are able to report the elapsed time directly.
  // `elapsed_time` is in microsecond.
  public static class ReportOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    ReportOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long(Pointer p) { super(p); }
      protected ReportOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long() { allocate(); }
      private native void allocate();
      public native void call(
        TfLiteTelemetryProfilerStruct profiler, @Cast("const char*") BytePointer op_name,
        @Cast("uint64_t") long elapsed_time, @Cast("int64_t") long op_idx, @Cast("int64_t") long subgraph_idx);
  }
  public native ReportOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long ReportOpInvokeEvent(); public native TfLiteTelemetryProfilerStruct ReportOpInvokeEvent(ReportOpInvokeEvent_TfLiteTelemetryProfilerStruct_BytePointer_long_long_long setter);
}
