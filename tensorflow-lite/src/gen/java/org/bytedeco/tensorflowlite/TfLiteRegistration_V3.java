// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;


/** \private */
// Old version of `TfLiteRegistration` to maintain binary backward
// compatibility.
// The legacy registration type must be a POD struct type whose field types must
// be a prefix of the field types in TfLiteRegistration, and offset of the first
// field in TfLiteRegistration that is not present in the legacy registration
// type must be greater than or equal to the size of the legacy registration
// type.
// WARNING: This structure is deprecated / not an official part of the
// API. It should be only used for binary backward compatibility.
@Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class TfLiteRegistration_V3 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TfLiteRegistration_V3() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TfLiteRegistration_V3(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TfLiteRegistration_V3(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TfLiteRegistration_V3 position(long position) {
        return (TfLiteRegistration_V3)super.position(position);
    }
    @Override public TfLiteRegistration_V3 getPointer(long i) {
        return new TfLiteRegistration_V3((Pointer)this).offsetAddress(i);
    }

  public static class Init_TfLiteContext_BytePointer_long extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    Init_TfLiteContext_BytePointer_long(Pointer p) { super(p); }
      protected Init_TfLiteContext_BytePointer_long() { allocate(); }
      private native void allocate();
      public native Pointer call(TfLiteContext context, @Cast("const char*") BytePointer buffer, @Cast("size_t") long length);
  }
  public native Init_TfLiteContext_BytePointer_long init(); public native TfLiteRegistration_V3 init(Init_TfLiteContext_BytePointer_long setter);
  public static class Free_TfLiteContext_Pointer extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    Free_TfLiteContext_Pointer(Pointer p) { super(p); }
      protected Free_TfLiteContext_Pointer() { allocate(); }
      private native void allocate();
      public native void call(TfLiteContext context, Pointer buffer);
  }
  public native @Name("free") Free_TfLiteContext_Pointer _free(); public native TfLiteRegistration_V3 _free(Free_TfLiteContext_Pointer setter);
  public static class Prepare_TfLiteContext_TfLiteNode extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    Prepare_TfLiteContext_TfLiteNode(Pointer p) { super(p); }
      protected Prepare_TfLiteContext_TfLiteNode() { allocate(); }
      private native void allocate();
      public native @Cast("TfLiteStatus") int call(TfLiteContext context, TfLiteNode node);
  }
  public native Prepare_TfLiteContext_TfLiteNode prepare(); public native TfLiteRegistration_V3 prepare(Prepare_TfLiteContext_TfLiteNode setter);
  public static class Invoke_TfLiteContext_TfLiteNode extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    Invoke_TfLiteContext_TfLiteNode(Pointer p) { super(p); }
      protected Invoke_TfLiteContext_TfLiteNode() { allocate(); }
      private native void allocate();
      public native @Cast("TfLiteStatus") int call(TfLiteContext context, TfLiteNode node);
  }
  public native Invoke_TfLiteContext_TfLiteNode invoke(); public native TfLiteRegistration_V3 invoke(Invoke_TfLiteContext_TfLiteNode setter);
  public static class Profiling_string_TfLiteContext_TfLiteNode extends FunctionPointer {
      static { Loader.load(); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public    Profiling_string_TfLiteContext_TfLiteNode(Pointer p) { super(p); }
      protected Profiling_string_TfLiteContext_TfLiteNode() { allocate(); }
      private native void allocate();
      public native @Cast("const char*") BytePointer call(@Const TfLiteContext context,
                                    @Const TfLiteNode node);
  }
  public native Profiling_string_TfLiteContext_TfLiteNode profiling_string(); public native TfLiteRegistration_V3 profiling_string(Profiling_string_TfLiteContext_TfLiteNode setter);
  public native int builtin_code(); public native TfLiteRegistration_V3 builtin_code(int setter);
  public native @Cast("const char*") BytePointer custom_name(); public native TfLiteRegistration_V3 custom_name(BytePointer setter);
  public native int version(); public native TfLiteRegistration_V3 version(int setter);
  public native TfLiteRegistrationExternal registration_external(); public native TfLiteRegistration_V3 registration_external(TfLiteRegistrationExternal setter);
}
