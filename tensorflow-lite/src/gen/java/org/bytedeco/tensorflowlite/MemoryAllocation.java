// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;


@Namespace("tflite") @NoOffset @Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class MemoryAllocation extends Allocation {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public MemoryAllocation(Pointer p) { super(p); }

  // Provides a (read-only) view of the provided buffer region as an allocation.
  // Note: The caller retains ownership of `ptr`, and must ensure it remains
  // valid for the lifetime of the class instance.
  public MemoryAllocation(@Const Pointer ptr, @Cast("size_t") long num_bytes,
                     ErrorReporter error_reporter) { super((Pointer)null); allocate(ptr, num_bytes, error_reporter); }
  private native void allocate(@Const Pointer ptr, @Cast("size_t") long num_bytes,
                     ErrorReporter error_reporter);
  public native @Const Pointer base();
  public native @Cast("size_t") long bytes();
  public native @Cast("bool") boolean valid();
}
