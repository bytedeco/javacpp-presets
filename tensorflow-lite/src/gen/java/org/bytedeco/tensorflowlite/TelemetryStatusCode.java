// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;


// A namespaced status code for telemetry events.
@Namespace("tflite::telemetry") @NoOffset @Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class TelemetryStatusCode extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TelemetryStatusCode(Pointer p) { super(p); }

  public native @Cast("tflite::telemetry::TelemetrySource") int source(); public native TelemetryStatusCode source(int setter);
  public native @Cast("uint32_t") int status_code(); public native TelemetryStatusCode status_code(int setter);

  // Helper constructors to build the status code from various types.
  public TelemetryStatusCode() { super((Pointer)null); allocate(); }
  private native void allocate();
  public TelemetryStatusCode(@Cast("tflite::telemetry::TelemetrySource") int source, @Cast("uint32_t") int status_code) { super((Pointer)null); allocate(source, status_code); }
  private native void allocate(@Cast("tflite::telemetry::TelemetrySource") int source, @Cast("uint32_t") int status_code);
  public TelemetryStatusCode(@Cast("TfLiteStatus") int status) { super((Pointer)null); allocate(status); }
  private native void allocate(@Cast("TfLiteStatus") int status);
  public TelemetryStatusCode(@Cast("uint64_t") long code) { super((Pointer)null); allocate(code); }
  private native void allocate(@Cast("uint64_t") long code);

  // Returns the uint64_t representation of the status code.
  public native @Cast("uint64_t") long code();

  public native @Cast("bool") @Name("operator ==") boolean equals(@Const @ByRef TelemetryStatusCode other);
}
