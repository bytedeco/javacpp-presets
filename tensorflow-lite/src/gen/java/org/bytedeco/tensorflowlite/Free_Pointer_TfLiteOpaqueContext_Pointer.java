// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;


/** Sets the deallocation callback for the registration, similarly to
 *  {@code TfLiteOperatorSetFree}. The function returns an error upon failure.
 * 
 *  This callback is called to deallocate the data returned by the init
 *  callback. The value passed in the {@code data} parameter is the value that was
 *  returned by the {@code init} callback. The value passed in the {@code user_data}
 *  parameter is the value that was passed to {@code TfLiteOperatorCreateWithData}.
 *  Please refer {@code free} of {@code TfLiteRegistration} for the detail.
 *  */
@Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class Free_Pointer_TfLiteOpaqueContext_Pointer extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    Free_Pointer_TfLiteOpaqueContext_Pointer(Pointer p) { super(p); }
    protected Free_Pointer_TfLiteOpaqueContext_Pointer() { allocate(); }
    private native void allocate();
    public native void call(Pointer user_data, TfLiteOpaqueContext context, Pointer data);
}
