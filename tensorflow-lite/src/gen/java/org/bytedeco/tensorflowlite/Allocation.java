// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;


// A memory allocation handle. This could be a mmap or shared memory.
@Namespace("tflite") @NoOffset @Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class Allocation extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Allocation(Pointer p) { super(p); }


  /** enum class tflite::Allocation::Type */
  public static final int
    kMMap = 0,
    kFileCopy = 1,
    kMemory = 2;

  // Base pointer of this allocation
  public native @Const Pointer base();
  // Size in bytes of the allocation
  public native @Cast("size_t") long bytes();
  // Whether the allocation is valid
  public native @Cast("bool") boolean valid();
  // Return the type of the Allocation.
  public native @Cast("tflite::Allocation::Type") int type();
}
