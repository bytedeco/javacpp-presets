// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;


// Metadata to encode each dimension in a sparse tensor.
@Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class TfLiteDimensionMetadata extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TfLiteDimensionMetadata() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TfLiteDimensionMetadata(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TfLiteDimensionMetadata(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TfLiteDimensionMetadata position(long position) {
        return (TfLiteDimensionMetadata)super.position(position);
    }
    @Override public TfLiteDimensionMetadata getPointer(long i) {
        return new TfLiteDimensionMetadata((Pointer)this).offsetAddress(i);
    }

  public native @Cast("TfLiteDimensionType") int format(); public native TfLiteDimensionMetadata format(int setter);
  public native int dense_size(); public native TfLiteDimensionMetadata dense_size(int setter);
  public native TfLiteIntArray array_segments(); public native TfLiteDimensionMetadata array_segments(TfLiteIntArray setter);
  public native TfLiteIntArray array_indices(); public native TfLiteDimensionMetadata array_indices(TfLiteIntArray setter);
}
