// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.tensorflowlite;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tensorflowlite.global.tensorflowlite.*;


// Maps T to the corresponding TfLiteArray type.

@Name("tflite::array_internal::TfLiteArrayInfo<int>") @Properties(inherit = org.bytedeco.tensorflowlite.presets.tensorflowlite.class)
public class TfLiteArrayInfo extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TfLiteArrayInfo() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TfLiteArrayInfo(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TfLiteArrayInfo(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TfLiteArrayInfo position(long position) {
        return (TfLiteArrayInfo)super.position(position);
    }
    @Override public TfLiteArrayInfo getPointer(long i) {
        return new TfLiteArrayInfo((Pointer)this).offsetAddress(i);
    }

}
