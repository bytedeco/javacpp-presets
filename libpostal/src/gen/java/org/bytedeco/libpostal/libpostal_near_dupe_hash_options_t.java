// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libpostal;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.libpostal.global.postal.*;



/*
Deduping
*/


// Near-dupe hashing methods

@Properties(inherit = org.bytedeco.libpostal.presets.postal.class)
public class libpostal_near_dupe_hash_options_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public libpostal_near_dupe_hash_options_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public libpostal_near_dupe_hash_options_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public libpostal_near_dupe_hash_options_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public libpostal_near_dupe_hash_options_t position(long position) {
        return (libpostal_near_dupe_hash_options_t)super.position(position);
    }

    public native @Cast("bool") boolean with_name(); public native libpostal_near_dupe_hash_options_t with_name(boolean with_name);
    public native @Cast("bool") boolean with_address(); public native libpostal_near_dupe_hash_options_t with_address(boolean with_address);
    public native @Cast("bool") boolean with_unit(); public native libpostal_near_dupe_hash_options_t with_unit(boolean with_unit);
    public native @Cast("bool") boolean with_city_or_equivalent(); public native libpostal_near_dupe_hash_options_t with_city_or_equivalent(boolean with_city_or_equivalent);
    public native @Cast("bool") boolean with_small_containing_boundaries(); public native libpostal_near_dupe_hash_options_t with_small_containing_boundaries(boolean with_small_containing_boundaries);
    public native @Cast("bool") boolean with_postal_code(); public native libpostal_near_dupe_hash_options_t with_postal_code(boolean with_postal_code);
    public native @Cast("bool") boolean with_latlon(); public native libpostal_near_dupe_hash_options_t with_latlon(boolean with_latlon);
    public native double latitude(); public native libpostal_near_dupe_hash_options_t latitude(double latitude);
    public native double longitude(); public native libpostal_near_dupe_hash_options_t longitude(double longitude);
    public native @Cast("uint32_t") int geohash_precision(); public native libpostal_near_dupe_hash_options_t geohash_precision(int geohash_precision);
    public native @Cast("bool") boolean name_and_address_keys(); public native libpostal_near_dupe_hash_options_t name_and_address_keys(boolean name_and_address_keys);
    public native @Cast("bool") boolean name_only_keys(); public native libpostal_near_dupe_hash_options_t name_only_keys(boolean name_only_keys);
    public native @Cast("bool") boolean address_only_keys(); public native libpostal_near_dupe_hash_options_t address_only_keys(boolean address_only_keys);
}
