// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;
 // namespace torch

@Namespace("torch::optim") @NoOffset @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class AdamWOptions extends OptimizerCloneableAdamWOptions {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AdamWOptions(Pointer p) { super(p); }

  public AdamWOptions(double lr/*=1e-3*/) { super((Pointer)null); allocate(lr); }
  private native void allocate(double lr/*=1e-3*/);
  public AdamWOptions() { super((Pointer)null); allocate(); }
  private native void allocate();
  public native @ByRef @NoException DoublePointer lr();
  public native @Cast("std::tuple<double,double>*") @ByRef @NoException DoublePointer betas();
  public native @ByRef @NoException DoublePointer eps();
  public native @ByRef @NoException DoublePointer weight_decay();
  public native @Cast("bool*") @ByRef @NoException BoolPointer amsgrad();
  
  
  
}
