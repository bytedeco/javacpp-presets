// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


// A Function is a pure Graph with no implicit `self` object bound.
// It contains schema information and the executor that manages the
// execution of the function. Method is a wrapper around an
// underlying Function that also provides a `self` object.
@Namespace("torch::jit") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class Function extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Function(Pointer p) { super(p); }

  public native @StdString BytePointer doc_string();

  public native @Cast("bool") boolean isGraphFunction();

  public native void run(@ByRef IValueVector stack);

  public native @ByVal @Name("operator ()") IValue apply(
        @StdVector IValue stack,
        @Cast("const torch::jit::Kwargs*") @ByRef(nullValue = "torch::jit::Kwargs()") IValueIValueMap kwargs);
  public native @ByVal @Name("operator ()") IValue apply(
        @StdVector IValue stack);

  public native @Const @ByRef QualifiedName qualname();

  public native @StdString BytePointer name();

  // if this isn't yet defined, run its method_creator function
  public native void ensure_defined();

  public native @SharedPtr @ByVal Graph graph();

  public native @SharedPtr @ByVal Graph optimized_graph();

  public native void clear_execution_info();

  public native @ByRef GraphExecutor get_executor();

  public native @Const @ByRef FunctionSchema getSchema();

  public native @Cast("size_t") long num_inputs();

  public native void check_single_output();

  public native @StdString BytePointer pretty_print_schema();

  public native @ByRef Function setSchema(@ByVal FunctionSchema schema);
}
