// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;
import org.bytedeco.javacpp.chrono.*;
import static org.bytedeco.javacpp.global.chrono.*;

import static org.bytedeco.pytorch.global.torch.*;


@Namespace("torch::dynamo::autograd") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class AutogradCompilerCall extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public AutogradCompilerCall() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public AutogradCompilerCall(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AutogradCompilerCall(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public AutogradCompilerCall position(long position) {
        return (AutogradCompilerCall)super.position(position);
    }
    @Override public AutogradCompilerCall getPointer(long i) {
        return new AutogradCompilerCall((Pointer)this).offsetAddress(i);
    }

  public native void add_size_input(@Const @ByRef SymInt s);

  public native @Cast("size_t") long emplace_hook(@ByRef(true) SafePyObject fn);

  public native @ByRef @NoOffset TensorArgs tensor_args(); public native AutogradCompilerCall tensor_args(TensorArgs setter);
  public native @StdVector @NoOffset SizeInput all_size_inputs(); public native AutogradCompilerCall all_size_inputs(SizeInput setter);
  public native @ByRef @Cast("std::vector<int64_t>*") @NoOffset LongVector dyn_size_inputs(); public native AutogradCompilerCall dyn_size_inputs(LongVector setter);
  
  public native @ByRef @NoOffset NodeCalls node_calls(); public native AutogradCompilerCall node_calls(NodeCalls setter);
  public native @NoOffset SizeInput.DynType default_dyn_type(); public native AutogradCompilerCall default_dyn_type(SizeInput.DynType setter);
}
