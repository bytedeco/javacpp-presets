// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


// CompleteArgumentSpec represents one particular specialization.
// It is designed so that it can be created, hashed, and compared quickly
// since it is used along the hot-path of the JIT to check if the code
// we have created is valid for the given inputs.

// COmpleteArgumentInfoPOD is only used internally in CompleteArgumentSpec
// API users should use ArgumentInfo
@Namespace("torch::jit") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class CompleteArgumentInfoPOD extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CompleteArgumentInfoPOD() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CompleteArgumentInfoPOD(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CompleteArgumentInfoPOD(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CompleteArgumentInfoPOD position(long position) {
        return (CompleteArgumentInfoPOD)super.position(position);
    }
    @Override public CompleteArgumentInfoPOD getPointer(long i) {
        return new CompleteArgumentInfoPOD((Pointer)this).offsetAddress(i);
    }

  // total size is 64-bit
  public native @Cast("unsigned") @NoOffset int is_tensor(); public native CompleteArgumentInfoPOD is_tensor(int setter); // all other fields are invalid if this is false
  public native @Cast("unsigned") @NoOffset int type(); public native CompleteArgumentInfoPOD type(int setter); // scalar type
  public native @Cast("unsigned") @NoOffset int defined(); public native CompleteArgumentInfoPOD defined(int setter);
  public native @Cast("unsigned") @NoOffset int requires_grad(); public native CompleteArgumentInfoPOD requires_grad(int setter);
  public native @NoOffset int device(); public native CompleteArgumentInfoPOD device(int setter);
  public native @Cast("unsigned") @NoOffset int dev_type(); public native CompleteArgumentInfoPOD dev_type(int setter);
  public native @Cast("unsigned") @NoOffset int total_dims(); public native CompleteArgumentInfoPOD total_dims(int setter); // all TensorInfoPODs are in CompleteArgumentSpec's
                       // tensor_info() array. total_dims is the total number of
                       // dimensions seen so far in all previous members of
                       // tensor_info(), including this tensor 2*total_dims
                       // becomes the offset into the sizes_strides list for the
                       // _next_ tensor in the tensor_info array for tensor 0,
                       // the offset is always 0
}
