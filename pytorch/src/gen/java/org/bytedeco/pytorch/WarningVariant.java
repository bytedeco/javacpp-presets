// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;

@NoOffset @Name("std::variant<c10::Warning::UserWarning,c10::Warning::DeprecationWarning>") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class WarningVariant extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public WarningVariant(Pointer p) { super(p); }
    public WarningVariant(Warning.UserWarning value) { this(); put(value); }
    public WarningVariant(Warning.DeprecationWarning value) { this(); put(value); }
    public WarningVariant()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef WarningVariant put(@ByRef WarningVariant x);

    public @ByRef Warning.UserWarning get0() { return get0(this); }
    @Namespace @Name("std::get<0>") public static native @ByRef Warning.UserWarning get0(@ByRef WarningVariant container);
    @ValueSetter public native WarningVariant put(@ByRef Warning.UserWarning value);
    public @ByRef Warning.DeprecationWarning get1() { return get1(this); }
    @Namespace @Name("std::get<1>") public static native @ByRef Warning.DeprecationWarning get1(@ByRef WarningVariant container);
    @ValueSetter public native WarningVariant put(@ByRef Warning.DeprecationWarning value);
}

