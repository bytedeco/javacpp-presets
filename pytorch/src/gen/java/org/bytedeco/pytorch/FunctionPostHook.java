// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


@Namespace("torch::autograd") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class FunctionPostHook extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public FunctionPostHook() { super((Pointer)null); allocate(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public FunctionPostHook(Pointer p) { super(p); }
    @UniquePtr @Name("std::make_unique<JavaCPP_torch_0003a_0003aautograd_0003a_0003aFunctionPostHook>") private native void allocate();

  @Virtual(true) public native @ByVal @Name("operator ()") TensorVector apply(
        @Const @ByRef TensorVector outputs,
        @Const @ByRef TensorVector inputs);
  // only implemented for python hooks, registers hook with compiled autograd
  @Virtual public native void compiled_args(@ByRef CompiledNodeArgs args);
}
