// Targeted by JavaCPP version 1.5.10-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


// This struct holds the actual type information. There will be
// one allocated per type. TypeMeta objects will then point to the struct
// instance for the type they're configured for.
@Namespace("caffe2::detail") @NoOffset @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class TypeMetaData extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TypeMetaData(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TypeMetaData(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public TypeMetaData position(long position) {
        return (TypeMetaData)super.position(position);
    }
    @Override public TypeMetaData getPointer(long i) {
        return new TypeMetaData((Pointer)this).offsetAddress(i);
    }

  @Opaque public static class New extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public New() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public New(Pointer p) { super(p); }
  }
  @Opaque public static class PlacementNew extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public PlacementNew() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public PlacementNew(Pointer p) { super(p); }
  }
  @Opaque public static class Copy extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public Copy() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public Copy(Pointer p) { super(p); }
  }
  @Opaque public static class PlacementDelete extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public PlacementDelete() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public PlacementDelete(Pointer p) { super(p); }
  }
  @Opaque public static class Delete extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public Delete() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public Delete(Pointer p) { super(p); }
  }

  public TypeMetaData() { super((Pointer)null); allocate(); }
  @NoException(true) private native void allocate();

  public TypeMetaData(
        @Cast("size_t") long itemsize,
        New newFn,
        PlacementNew placementNew,
        Copy copy,
        PlacementDelete placementDelete,
        Delete deleteFn,
        @ByVal TypeIdentifier id,
        @StringView BytePointer name) { super((Pointer)null); allocate(itemsize, newFn, placementNew, copy, placementDelete, deleteFn, id, name); }
  @NoException(true) private native void allocate(
        @Cast("size_t") long itemsize,
        New newFn,
        PlacementNew placementNew,
        Copy copy,
        PlacementDelete placementDelete,
        Delete deleteFn,
        @ByVal TypeIdentifier id,
        @StringView BytePointer name);
  public TypeMetaData(
        @Cast("size_t") long itemsize,
        New newFn,
        PlacementNew placementNew,
        Copy copy,
        PlacementDelete placementDelete,
        Delete deleteFn,
        @ByVal TypeIdentifier id,
        @StringView String name) { super((Pointer)null); allocate(itemsize, newFn, placementNew, copy, placementDelete, deleteFn, id, name); }
  @NoException(true) private native void allocate(
        @Cast("size_t") long itemsize,
        New newFn,
        PlacementNew placementNew,
        Copy copy,
        PlacementDelete placementDelete,
        Delete deleteFn,
        @ByVal TypeIdentifier id,
        @StringView String name);

  public native @Cast("size_t") long itemsize_(); public native TypeMetaData itemsize_(long setter);
  public native New new_(); public native TypeMetaData new_(New setter);
  public native PlacementNew placementNew_(); public native TypeMetaData placementNew_(PlacementNew setter);
  public native Copy copy_(); public native TypeMetaData copy_(Copy setter);
  public native PlacementDelete placementDelete_(); public native TypeMetaData placementDelete_(PlacementDelete setter);
  public native Delete delete_(); public native TypeMetaData delete_(Delete setter);
  public native @ByRef TypeIdentifier id_(); public native TypeMetaData id_(TypeIdentifier setter);
  public native @StringView BytePointer name_(); public native TypeMetaData name_(BytePointer setter);
}
