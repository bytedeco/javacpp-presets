// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


@Namespace("c10") @NoOffset @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class Warning extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public Warning(Pointer p) { super(p); }

  @Opaque public static class UserWarning extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public UserWarning() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public UserWarning(Pointer p) { super(p); }
  }
  @Opaque public static class DeprecationWarning extends Pointer {
      /** Empty constructor. Calls {@code super((Pointer)null)}. */
      public DeprecationWarning() { super((Pointer)null); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public DeprecationWarning(Pointer p) { super(p); }
  }

  public Warning(
        @ByVal @Cast("c10::Warning::warning_variant_t*") Nonlinearity type,
        @Const @ByRef SourceLocation source_location,
        @StdString BytePointer msg,
        @Cast("bool") boolean verbatim) { super((Pointer)null); allocate(type, source_location, msg, verbatim); }
  private native void allocate(
        @ByVal @Cast("c10::Warning::warning_variant_t*") Nonlinearity type,
        @Const @ByRef SourceLocation source_location,
        @StdString BytePointer msg,
        @Cast("bool") boolean verbatim);
  public Warning(
        @ByVal @Cast("c10::Warning::warning_variant_t*") Nonlinearity type,
        @Const @ByRef SourceLocation source_location,
        @StdString String msg,
        @Cast("bool") boolean verbatim) { super((Pointer)null); allocate(type, source_location, msg, verbatim); }
  private native void allocate(
        @ByVal @Cast("c10::Warning::warning_variant_t*") Nonlinearity type,
        @Const @ByRef SourceLocation source_location,
        @StdString String msg,
        @Cast("bool") boolean verbatim);

  public Warning(
        @ByVal @Cast("c10::Warning::warning_variant_t*") Nonlinearity type,
        @ByVal SourceLocation source_location,
        @ByVal CompileTimeEmptyString msg,
        @Cast("bool") boolean verbatim) { super((Pointer)null); allocate(type, source_location, msg, verbatim); }
  private native void allocate(
        @ByVal @Cast("c10::Warning::warning_variant_t*") Nonlinearity type,
        @ByVal SourceLocation source_location,
        @ByVal CompileTimeEmptyString msg,
        @Cast("bool") boolean verbatim);

  // Getters for members
  public native @ByVal @Cast("c10::Warning::warning_variant_t*") Nonlinearity type();
  public native @Const @ByRef SourceLocation source_location();
  public native @StdString BytePointer msg();
  public native @Cast("bool") boolean verbatim();
}
