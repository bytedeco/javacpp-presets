// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;

@NoOffset @Name("torch::optional<std::tuple<at::Tensor,at::Tensor> >") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class TensorTensorOptional extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TensorTensorOptional(Pointer p) { super(p); }
    public TensorTensorOptional(Tensor value) { put(value); }
    public TensorTensorOptional()       { allocate();  }
    private native void allocate();
    public native @Name("operator =") @ByRef TensorTensorOptional put(@ByRef TensorTensorOptional x);


    @Name("value") public native @Cast("std::tuple<at::Tensor,at::Tensor>*") @ByRef Tensor get();
    @ValueSetter public native TensorTensorOptional put(@Cast("std::tuple<at::Tensor,at::Tensor>*") @ByRef Tensor value);
}

