// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


@Namespace("c10") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class SymFloatNodeImpl extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SymFloatNodeImpl() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SymFloatNodeImpl(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SymFloatNodeImpl(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SymFloatNodeImpl position(long position) {
        return (SymFloatNodeImpl)super.position(position);
    }
    @Override public SymFloatNodeImpl getPointer(long i) {
        return new SymFloatNodeImpl((Pointer)this).offsetAddress(i);
    }

  public native @ByVal SymFloat toSymFloat();

  public native @ByVal @Cast("c10::SymFloatNode*") Pointer wrap(double num);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer add(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer sub(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer mul(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer truediv(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer eq(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer ne(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer gt(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer lt(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer le(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymFloatNode*") Pointer ge(@Cast("const c10::SymFloatNode*") @ByRef Pointer other);
  public native @ByVal @Cast("c10::SymIntNode*") Pointer ceil();
  public native @StdString BytePointer str();
  
}
