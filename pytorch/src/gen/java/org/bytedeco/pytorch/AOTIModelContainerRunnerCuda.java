// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


@Namespace("torch::inductor") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class AOTIModelContainerRunnerCuda extends AOTIModelContainerRunner {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AOTIModelContainerRunnerCuda(Pointer p) { super(p); }

  public AOTIModelContainerRunnerCuda(
        @Cast("const char*") BytePointer model_path,
        @Cast("size_t") long num_models/*=1*/,
        @Cast("const char*") BytePointer cubin_dir/*=nullptr*/) { super((Pointer)null); allocate(model_path, num_models, cubin_dir); }
  private native void allocate(
        @Cast("const char*") BytePointer model_path,
        @Cast("size_t") long num_models/*=1*/,
        @Cast("const char*") BytePointer cubin_dir/*=nullptr*/);
  public AOTIModelContainerRunnerCuda(
        @Cast("const char*") BytePointer model_path) { super((Pointer)null); allocate(model_path); }
  private native void allocate(
        @Cast("const char*") BytePointer model_path);
  public AOTIModelContainerRunnerCuda(
        String model_path,
        @Cast("size_t") long num_models/*=1*/,
        String cubin_dir/*=nullptr*/) { super((Pointer)null); allocate(model_path, num_models, cubin_dir); }
  private native void allocate(
        String model_path,
        @Cast("size_t") long num_models/*=1*/,
        String cubin_dir/*=nullptr*/);
  public AOTIModelContainerRunnerCuda(
        String model_path) { super((Pointer)null); allocate(model_path); }
  private native void allocate(
        String model_path);

  public native @Cast({"", "std::vector<torch::Tensor>"}) @StdMove TensorVector run(
        @Cast({"", "std::vector<torch::Tensor>"}) @StdMove TensorVector inputs);
}
