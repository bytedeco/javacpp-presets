// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.Module;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;
 // namespace functional

// ============================================================================

/** Options for the {@code TripletMarginWithDistanceLoss} module.
 * 
 *  Example:
 *  <pre>{@code
 *  TripletMarginWithDistanceLoss model(TripletMarginWithDistanceLossOptions().margin(3).swap(false));
 *  }</pre> */
@Namespace("torch::nn") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class TripletMarginWithDistanceLossOptions extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public TripletMarginWithDistanceLossOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public TripletMarginWithDistanceLossOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TripletMarginWithDistanceLossOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public TripletMarginWithDistanceLossOptions position(long position) {
        return (TripletMarginWithDistanceLossOptions)super.position(position);
    }
    @Override public TripletMarginWithDistanceLossOptions getPointer(long i) {
        return new TripletMarginWithDistanceLossOptions((Pointer)this).position(position + i);
    }

  public native @Cast("c10::optional<torch::nn::TripletMarginWithDistanceLossOptions::distance_function_t>*") @ByRef @NoException Pointer distance_function();
  public native @ByRef @NoException DoublePointer margin();
  public native @Cast("bool*") @ByRef @NoException BoolPointer swap();
  public native @Cast("torch::nn::TripletMarginWithDistanceLossOptions::reduction_t*") @ByRef @NoException Pointer reduction();
}
