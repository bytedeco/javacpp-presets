// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.pytorch;

import org.bytedeco.pytorch.Allocator;
import org.bytedeco.pytorch.Function;
import org.bytedeco.pytorch.functions.*;
import org.bytedeco.pytorch.Module;
import org.bytedeco.javacpp.annotation.Cast;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.pytorch.global.torch.*;


// POD version of LocalDispatchKeySet.  Declared here just so that
// we can put it in the guards.
// This struct encapsulates special handling for TLS initialization
// in set_included()/included() API so that they reflect the truth.
// If you want to create PODLocalDispatchKeySet with non-zero state,
// use set_included() instead of default constructor.
@Namespace("c10::impl") @Properties(inherit = org.bytedeco.pytorch.presets.torch.class)
public class PODLocalDispatchKeySet extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PODLocalDispatchKeySet() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PODLocalDispatchKeySet(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PODLocalDispatchKeySet(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PODLocalDispatchKeySet position(long position) {
        return (PODLocalDispatchKeySet)super.position(position);
    }
    @Override public PODLocalDispatchKeySet getPointer(long i) {
        return new PODLocalDispatchKeySet((Pointer)this).offsetAddress(i);
    }

  public native @Cast("uint64_t") long included_(); public native PODLocalDispatchKeySet included_(long setter);
  public native @Cast("uint64_t") long excluded_(); public native PODLocalDispatchKeySet excluded_(long setter);

  // See Note [TLS Initialization]
  public native @ByVal DispatchKeySet included();
  public native @ByVal DispatchKeySet excluded();

  public native void set_included(@ByVal DispatchKeySet x);
  public native void set_excluded(@ByVal DispatchKeySet x);
}
