// Targeted by JavaCPP version 1.5.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libecl;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.libecl.global.libecl.*;


@Namespace("ecl::util") @NoOffset @Properties(inherit = org.bytedeco.libecl.presets.libecl.class)
public class TestArea extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TestArea(Pointer p) { super(p); }

    public TestArea(@StdString BytePointer test_name, @Cast("bool") boolean store_area/*=false*/) { super((Pointer)null); allocate(test_name, store_area); }
    private native void allocate(@StdString BytePointer test_name, @Cast("bool") boolean store_area/*=false*/);
    public TestArea(@StdString BytePointer test_name) { super((Pointer)null); allocate(test_name); }
    private native void allocate(@StdString BytePointer test_name);
    public TestArea(@StdString String test_name, @Cast("bool") boolean store_area/*=false*/) { super((Pointer)null); allocate(test_name, store_area); }
    private native void allocate(@StdString String test_name, @Cast("bool") boolean store_area/*=false*/);
    public TestArea(@StdString String test_name) { super((Pointer)null); allocate(test_name); }
    private native void allocate(@StdString String test_name);
    public native @StdString BytePointer test_cwd();
    public native @StdString BytePointer original_cwd();

    public native void copy_directory(@StdString BytePointer input_directory);
    public native void copy_directory(@StdString String input_directory);
    public native void copy_directory_content(@StdString BytePointer input_directory);
    public native void copy_directory_content(@StdString String input_directory);
    public native @Cast("bool") boolean copy_parent(@StdString BytePointer input_path);
    public native @Cast("bool") boolean copy_parent(@StdString String input_path);
    public native @Cast("bool") boolean copy_parent_content(@StdString BytePointer original_path);
    public native @Cast("bool") boolean copy_parent_content(@StdString String original_path);

    public native void copy_file(@StdString BytePointer input_src_file);
    public native void copy_file(@StdString String input_src_file);
    public native @StdString BytePointer original_path(@StdString BytePointer input_path);
    public native @StdString String original_path(@StdString String input_path);
}
