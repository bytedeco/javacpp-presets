// Targeted by JavaCPP version 1.5.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libecl;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.libecl.global.libecl.*;
  // 'Normal' 8 characters 'CHAR' type.

@Properties(inherit = org.bytedeco.libecl.presets.libecl.class)
public class ecl_type_struct extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public ecl_type_struct() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ecl_type_struct(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ecl_type_struct(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ecl_type_struct position(long position) {
        return (ecl_type_struct)super.position(position);
    }
    @Override public ecl_type_struct getPointer(long i) {
        return new ecl_type_struct(this).position(position + i);
    }

  @MemberGetter public native @Cast("const ecl_type_enum") int type();
  @MemberGetter public native @Cast("const size_t") long element_size();
}
