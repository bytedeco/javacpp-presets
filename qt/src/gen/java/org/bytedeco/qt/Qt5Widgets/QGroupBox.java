// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.qt.Qt5Widgets;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.qt.Qt5Core.*;
import static org.bytedeco.qt.global.Qt5Core.*;
import org.bytedeco.qt.Qt5Gui.*;
import static org.bytedeco.qt.global.Qt5Gui.*;

import static org.bytedeco.qt.global.Qt5Widgets.*;

// Parsed from QtWidgets/qgroupbox.h

@Properties(inherit = org.bytedeco.qt.presets.Qt5Widgets.class)
public class QGroupBox extends QWidget {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public QGroupBox(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public QGroupBox(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public QGroupBox position(long position) {
        return (QGroupBox)super.position(position);
    }
    @Override public QGroupBox getPointer(long i) {
        return new QGroupBox((Pointer)this).position(position + i);
    }

    public QGroupBox(QWidget parent/*=nullptr*/) { super((Pointer)null); allocate(parent); }
    private native void allocate(QWidget parent/*=nullptr*/);
    public QGroupBox() { super((Pointer)null); allocate(); }
    private native void allocate();
    public QGroupBox(@Const @ByRef QString title, QWidget parent/*=nullptr*/) { super((Pointer)null); allocate(title, parent); }
    private native void allocate(@Const @ByRef QString title, QWidget parent/*=nullptr*/);
    public QGroupBox(@Const @ByRef QString title) { super((Pointer)null); allocate(title); }
    private native void allocate(@Const @ByRef QString title);

    public native @ByVal QString title();
    public native void setTitle(@Const @ByRef QString title);

    public native @ByVal @Cast("Qt::Alignment") int alignment();
    public native void setAlignment(int alignment);

    public native @ByVal QSize minimumSizeHint();

    public native @Cast("bool") boolean isFlat();
    public native void setFlat(@Cast("bool") boolean flat);
    public native @Cast("bool") boolean isCheckable();
    public native void setCheckable(@Cast("bool") boolean checkable);
    public native @Cast("bool") boolean isChecked();
    public native void setChecked(@Cast("bool") boolean checked);
    @Virtual protected native @Cast("bool") boolean event(QEvent event);
    @Virtual protected native void childEvent(QChildEvent event);
    @Virtual protected native void paintEvent(QPaintEvent event);
    @Virtual protected native void changeEvent(QEvent event);
}
