// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.qt.QtCore;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.qt.global.QtCore.*;


@NoOffset @Properties(inherit = org.bytedeco.qt.presets.QtCore.class)
public class QMessageLogContext extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public QMessageLogContext(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public QMessageLogContext(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public QMessageLogContext position(long position) {
        return (QMessageLogContext)super.position(position);
    }

     public QMessageLogContext() { super((Pointer)null); allocate(); }
private native void allocate();
     public QMessageLogContext(@Cast("const char*") BytePointer fileName, int lineNumber, @Cast("const char*") BytePointer functionName, @Cast("const char*") BytePointer categoryName) { super((Pointer)null); allocate(fileName, lineNumber, functionName, categoryName); }
private native void allocate(@Cast("const char*") BytePointer fileName, int lineNumber, @Cast("const char*") BytePointer functionName, @Cast("const char*") BytePointer categoryName);
public QMessageLogContext(String fileName, int lineNumber, String functionName, String categoryName) { super((Pointer)null); allocate(fileName, lineNumber, functionName, categoryName); }
private native void allocate(String fileName, int lineNumber, String functionName, String categoryName);

    public native void copy(@Const @ByRef QMessageLogContext logContext);

    public native int version(); public native QMessageLogContext version(int version);
    public native int line(); public native QMessageLogContext line(int line);
    @MemberGetter public native @Cast("const char*") BytePointer file();
    @MemberGetter public native @Cast("const char*") BytePointer function();
    @MemberGetter public native @Cast("const char*") BytePointer category();
}
