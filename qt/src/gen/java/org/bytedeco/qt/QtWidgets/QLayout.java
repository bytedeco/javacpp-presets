// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.qt.QtWidgets;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.qt.QtCore.*;
import static org.bytedeco.qt.global.QtCore.*;
import org.bytedeco.qt.QtGui.*;
import static org.bytedeco.qt.global.QtGui.*;

import static org.bytedeco.qt.global.QtWidgets.*;

// Parsed from QtWidgets/qlayout.h

@Properties(inherit = org.bytedeco.qt.presets.QtWidgets.class)
public class QLayout extends QObject {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public QLayout(Pointer p) { super(p); }
    public QLayoutItem asQLayoutItem() { return asQLayoutItem(this); }
    @Namespace public static native @Name("static_cast<QLayoutItem*>") QLayoutItem asQLayoutItem(QLayout pointer);

    /** enum QLayout::SizeConstraint */
    public static final int
        SetDefaultConstraint = 0,
        SetNoConstraint = 1,
        SetMinimumSize = 2,
        SetFixedSize = 3,
        SetMaximumSize = 4,
        SetMinAndMaxSize = 5;
    

    public native int margin();
    public native int spacing();

    public native void setMargin(int arg0);
    public native void setSpacing(int arg0);

    public native void setContentsMargins(int left, int top, int right, int bottom);
    public native void getContentsMargins(IntPointer left, IntPointer top, IntPointer right, IntPointer bottom);
    public native void getContentsMargins(IntBuffer left, IntBuffer top, IntBuffer right, IntBuffer bottom);
    public native void getContentsMargins(int[] left, int[] top, int[] right, int[] bottom);

    public native @Cast("bool") boolean setAlignment(QWidget w, @ByVal @Cast("Qt::Alignment") int alignment);
    public native @Cast("bool") boolean setAlignment(QLayout l, @ByVal @Cast("Qt::Alignment") int alignment);

    public native void setSizeConstraint(@Cast("QLayout::SizeConstraint") int arg0);
    public native @Cast("QLayout::SizeConstraint") int sizeConstraint();
    public native void setMenuBar(QWidget w);
    public native QWidget menuBar();

    public native QWidget parentWidget();

    public native void invalidate();
    public native @Cast("bool") boolean activate();
    public native void update();

    public native void addWidget(QWidget w);
    public native void addItem(QLayoutItem arg0);

    public native void removeWidget(QWidget w);
    public native void removeItem(QLayoutItem arg0);
    public native @ByVal QSize minimumSize();
    public native @ByVal QSize maximumSize();
    public native QLayoutItem itemAt(int index);
    public native QLayoutItem takeAt(int index);
    public native int indexOf(QWidget arg0);
    public native int indexOf(QLayoutItem arg0);
    public native int count();
    public native @Cast("bool") boolean isEmpty();

    public native QLayoutItem replaceWidget(QWidget from, QWidget to);

    public native int totalHeightForWidth(int w);
    public native @ByVal QSize totalMinimumSize();
    public native @ByVal QSize totalMaximumSize();
    public native @ByVal QSize totalSizeHint();
    public native QLayout layout();

    public native void setEnabled(@Cast("bool") boolean arg0);
    public native @Cast("bool") boolean isEnabled();


    public static native @ByVal QSize closestAcceptableSize(@Const QWidget w, @Const @ByRef QSize s);

}
