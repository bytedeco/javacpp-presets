// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.qt.QtWidgets;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.qt.QtCore.*;
import static org.bytedeco.qt.global.QtCore.*;
import org.bytedeco.qt.QtGui.*;
import static org.bytedeco.qt.global.QtGui.*;

import static org.bytedeco.qt.global.QtWidgets.*;

// Parsed from QtWidgets/qboxlayout.h

@Properties(inherit = org.bytedeco.qt.presets.QtWidgets.class)
public class QBoxLayout extends QLayout {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public QBoxLayout(Pointer p) { super(p); }

    /** enum QBoxLayout::Direction */
    public static final int LeftToRight = 0, RightToLeft = 1, TopToBottom = 2, BottomToTop = 3,
                     Down = TopToBottom, Up = BottomToTop;

    public QBoxLayout(@Cast("QBoxLayout::Direction") int arg0, QWidget parent/*=nullptr*/) { super((Pointer)null); allocate(arg0, parent); }
    private native void allocate(@Cast("QBoxLayout::Direction") int arg0, QWidget parent/*=nullptr*/);
    public QBoxLayout(@Cast("QBoxLayout::Direction") int arg0) { super((Pointer)null); allocate(arg0); }
    private native void allocate(@Cast("QBoxLayout::Direction") int arg0);

    public native @Cast("QBoxLayout::Direction") int direction();
    public native void setDirection(@Cast("QBoxLayout::Direction") int arg0);

    public native void addSpacing(int size);
    public native void addStretch(int stretch/*=0*/);
    public native void addStretch();
    public native void addWidget(QWidget arg0, int stretch/*=0*/, @ByVal(nullValue = "Qt::Alignment()") @Cast("Qt::Alignment") int alignment);
    public native void addWidget(QWidget arg0);
    public native void addLayout(QLayout layout, int stretch/*=0*/);
    public native void addLayout(QLayout layout);
    public native void addStrut(int arg0);
    public native void addItem(QLayoutItem arg0);

    public native void insertSpacing(int index, int size);
    public native void insertStretch(int index, int stretch/*=0*/);
    public native void insertStretch(int index);
    public native void insertWidget(int index, QWidget widget, int stretch/*=0*/, @ByVal(nullValue = "Qt::Alignment()") @Cast("Qt::Alignment") int alignment);
    public native void insertWidget(int index, QWidget widget);
    public native void insertLayout(int index, QLayout layout, int stretch/*=0*/);
    public native void insertLayout(int index, QLayout layout);
    public native void insertItem(int index, QLayoutItem arg1);

    public native int spacing();
    public native void setSpacing(int spacing);

    public native @Cast("bool") boolean setStretchFactor(QWidget w, int stretch);
    public native @Cast("bool") boolean setStretchFactor(QLayout l, int stretch);
    public native void setStretch(int index, int stretch);
    public native int stretch(int index);

    public native @ByVal QSize sizeHint();
    public native @ByVal QSize minimumSize();
    public native @ByVal QSize maximumSize();

    public native @Cast("bool") boolean hasHeightForWidth();
    public native int heightForWidth(int arg0);
    public native int minimumHeightForWidth(int arg0);
    public native void invalidate();
    public native QLayoutItem itemAt(int arg0);
    public native QLayoutItem takeAt(int arg0);
    public native int count();
}
