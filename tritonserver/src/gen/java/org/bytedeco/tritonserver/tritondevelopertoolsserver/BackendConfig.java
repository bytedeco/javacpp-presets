// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.tritonserver.tritondevelopertoolsserver;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tritonserver.global.tritondevelopertoolsserver.*;


//==============================================================================
/** Structure to hold backend configuration for setting 'ServerOptions'.
 *  Different Triton-supported backends have different backend configuration
 *  options. Please refer to the 'Command line options' section in the
 *  documentation of each backend to see the options (e.g. Tensorflow Backend:
 *  https://github.com/triton-inference-server/tensorflow_backend#command-line-options) */
@Namespace("triton::developer_tools::server") @NoOffset @Properties(inherit = org.bytedeco.tritonserver.presets.tritondevelopertoolsserver.class)
public class BackendConfig extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public BackendConfig(Pointer p) { super(p); }

  public BackendConfig(
        @StdString BytePointer name, @StdString BytePointer setting,
        @StdString BytePointer value) { super((Pointer)null); allocate(name, setting, value); }
  private native void allocate(
        @StdString BytePointer name, @StdString BytePointer setting,
        @StdString BytePointer value);
  public BackendConfig(
        @StdString String name, @StdString String setting,
        @StdString String value) { super((Pointer)null); allocate(name, setting, value); }
  private native void allocate(
        @StdString String name, @StdString String setting,
        @StdString String value);

  // The name of the backend.
  public native @StdString BytePointer name_(); public native BackendConfig name_(BytePointer setter);
  // The name of the setting.
  public native @StdString BytePointer setting_(); public native BackendConfig setting_(BytePointer setter);
  // The setting value.
  public native @StdString BytePointer value_(); public native BackendConfig value_(BytePointer setter);
}
