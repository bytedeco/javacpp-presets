// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.tritonserver.tritonserver;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.tritonserver.global.tritonserver.*;


/** Type for trace timeline activity callback function. This callback function
 *  is used to report activity occurring for a trace. This function
 *  does not take ownership of 'trace' and so any information needed
 *  from that object must be copied before returning. The 'userp' data
 *  is the same as what is supplied in the call to
 *  TRITONSERVER_InferenceTraceNew. */
@Properties(inherit = org.bytedeco.tritonserver.presets.tritonserver.class)
public class TRITONSERVER_InferenceTraceActivityFn_t extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    TRITONSERVER_InferenceTraceActivityFn_t(Pointer p) { super(p); }
    protected TRITONSERVER_InferenceTraceActivityFn_t() { allocate(); }
    private native void allocate();
    public native void call(
    TRITONSERVER_InferenceTrace trace,
    @Cast("TRITONSERVER_InferenceTraceActivity") int activity, @Cast("uint64_t") long timestamp_ns,
    Pointer userp);
}
