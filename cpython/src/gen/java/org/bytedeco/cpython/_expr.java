// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cpython.global.python.*;

@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class _expr extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public _expr() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public _expr(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public _expr(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public _expr position(long position) {
        return (_expr)super.position(position);
    }
    @Override public _expr getPointer(long i) {
        return new _expr((Pointer)this).position(position + i);
    }

    public native @Cast("_expr_kind") int kind(); public native _expr kind(int setter);
            @Name("v.BoolOp.op") public native @Cast("boolop_ty") int v_BoolOp_op(); public native _expr v_BoolOp_op(int setter);
            @Name("v.BoolOp.values") public native asdl_seq v_BoolOp_values(); public native _expr v_BoolOp_values(asdl_seq setter);

            @Name("v.NamedExpr.target") public native _expr v_NamedExpr_target(); public native _expr v_NamedExpr_target(_expr setter);
            @Name("v.NamedExpr.value") public native _expr v_NamedExpr_value(); public native _expr v_NamedExpr_value(_expr setter);

            @Name("v.BinOp.left") public native _expr v_BinOp_left(); public native _expr v_BinOp_left(_expr setter);
            @Name("v.BinOp.op") public native @Cast("operator_ty") int v_BinOp_op(); public native _expr v_BinOp_op(int setter);
            @Name("v.BinOp.right") public native _expr v_BinOp_right(); public native _expr v_BinOp_right(_expr setter);

            @Name("v.UnaryOp.op") public native @Cast("unaryop_ty") int v_UnaryOp_op(); public native _expr v_UnaryOp_op(int setter);
            @Name("v.UnaryOp.operand") public native _expr v_UnaryOp_operand(); public native _expr v_UnaryOp_operand(_expr setter);

            @Name("v.Lambda.args") public native _arguments v_Lambda_args(); public native _expr v_Lambda_args(_arguments setter);
            @Name("v.Lambda.body") public native _expr v_Lambda_body(); public native _expr v_Lambda_body(_expr setter);

            @Name("v.IfExp.test") public native _expr v_IfExp_test(); public native _expr v_IfExp_test(_expr setter);
            @Name("v.IfExp.body") public native _expr v_IfExp_body(); public native _expr v_IfExp_body(_expr setter);
            @Name("v.IfExp.orelse") public native _expr v_IfExp_orelse(); public native _expr v_IfExp_orelse(_expr setter);

            @Name("v.Dict.keys") public native asdl_seq v_Dict_keys(); public native _expr v_Dict_keys(asdl_seq setter);
            @Name("v.Dict.values") public native asdl_seq v_Dict_values(); public native _expr v_Dict_values(asdl_seq setter);

            @Name("v.Set.elts") public native asdl_seq v_Set_elts(); public native _expr v_Set_elts(asdl_seq setter);

            @Name("v.ListComp.elt") public native _expr v_ListComp_elt(); public native _expr v_ListComp_elt(_expr setter);
            @Name("v.ListComp.generators") public native asdl_seq v_ListComp_generators(); public native _expr v_ListComp_generators(asdl_seq setter);

            @Name("v.SetComp.elt") public native _expr v_SetComp_elt(); public native _expr v_SetComp_elt(_expr setter);
            @Name("v.SetComp.generators") public native asdl_seq v_SetComp_generators(); public native _expr v_SetComp_generators(asdl_seq setter);

            @Name("v.DictComp.key") public native _expr v_DictComp_key(); public native _expr v_DictComp_key(_expr setter);
            @Name("v.DictComp.value") public native _expr v_DictComp_value(); public native _expr v_DictComp_value(_expr setter);
            @Name("v.DictComp.generators") public native asdl_seq v_DictComp_generators(); public native _expr v_DictComp_generators(asdl_seq setter);

            @Name("v.GeneratorExp.elt") public native _expr v_GeneratorExp_elt(); public native _expr v_GeneratorExp_elt(_expr setter);
            @Name("v.GeneratorExp.generators") public native asdl_seq v_GeneratorExp_generators(); public native _expr v_GeneratorExp_generators(asdl_seq setter);

            @Name("v.Await.value") public native _expr v_Await_value(); public native _expr v_Await_value(_expr setter);

            @Name("v.Yield.value") public native _expr v_Yield_value(); public native _expr v_Yield_value(_expr setter);

            @Name("v.YieldFrom.value") public native _expr v_YieldFrom_value(); public native _expr v_YieldFrom_value(_expr setter);

            @Name("v.Compare.left") public native _expr v_Compare_left(); public native _expr v_Compare_left(_expr setter);
            @Name("v.Compare.ops") public native asdl_int_seq v_Compare_ops(); public native _expr v_Compare_ops(asdl_int_seq setter);
            @Name("v.Compare.comparators") public native asdl_seq v_Compare_comparators(); public native _expr v_Compare_comparators(asdl_seq setter);

            @Name("v.Call.func") public native _expr v_Call_func(); public native _expr v_Call_func(_expr setter);
            @Name("v.Call.args") public native asdl_seq v_Call_args(); public native _expr v_Call_args(asdl_seq setter);
            @Name("v.Call.keywords") public native asdl_seq v_Call_keywords(); public native _expr v_Call_keywords(asdl_seq setter);

            @Name("v.FormattedValue.value") public native _expr v_FormattedValue_value(); public native _expr v_FormattedValue_value(_expr setter);
            @Name("v.FormattedValue.conversion") public native int v_FormattedValue_conversion(); public native _expr v_FormattedValue_conversion(int setter);
            @Name("v.FormattedValue.format_spec") public native _expr v_FormattedValue_format_spec(); public native _expr v_FormattedValue_format_spec(_expr setter);

            @Name("v.JoinedStr.values") public native asdl_seq v_JoinedStr_values(); public native _expr v_JoinedStr_values(asdl_seq setter);

            @Name("v.Constant.value") public native @Cast("constant") PyObject v_Constant_value(); public native _expr v_Constant_value(PyObject setter);
            @Name("v.Constant.kind") public native @Cast("string") PyObject v_Constant_kind(); public native _expr v_Constant_kind(PyObject setter);

            @Name("v.Attribute.value") public native _expr v_Attribute_value(); public native _expr v_Attribute_value(_expr setter);
            @Name("v.Attribute.attr") public native @Cast("identifier") PyObject v_Attribute_attr(); public native _expr v_Attribute_attr(PyObject setter);
            @Name("v.Attribute.ctx") public native @Cast("expr_context_ty") int v_Attribute_ctx(); public native _expr v_Attribute_ctx(int setter);

            @Name("v.Subscript.value") public native _expr v_Subscript_value(); public native _expr v_Subscript_value(_expr setter);
            @Name("v.Subscript.slice") public native _expr v_Subscript_slice(); public native _expr v_Subscript_slice(_expr setter);
            @Name("v.Subscript.ctx") public native @Cast("expr_context_ty") int v_Subscript_ctx(); public native _expr v_Subscript_ctx(int setter);

            @Name("v.Starred.value") public native _expr v_Starred_value(); public native _expr v_Starred_value(_expr setter);
            @Name("v.Starred.ctx") public native @Cast("expr_context_ty") int v_Starred_ctx(); public native _expr v_Starred_ctx(int setter);

            @Name("v.Name.id") public native @Cast("identifier") PyObject v_Name_id(); public native _expr v_Name_id(PyObject setter);
            @Name("v.Name.ctx") public native @Cast("expr_context_ty") int v_Name_ctx(); public native _expr v_Name_ctx(int setter);

            @Name("v.List.elts") public native asdl_seq v_List_elts(); public native _expr v_List_elts(asdl_seq setter);
            @Name("v.List.ctx") public native @Cast("expr_context_ty") int v_List_ctx(); public native _expr v_List_ctx(int setter);

            @Name("v.Tuple.elts") public native asdl_seq v_Tuple_elts(); public native _expr v_Tuple_elts(asdl_seq setter);
            @Name("v.Tuple.ctx") public native @Cast("expr_context_ty") int v_Tuple_ctx(); public native _expr v_Tuple_ctx(int setter);

            @Name("v.Slice.lower") public native _expr v_Slice_lower(); public native _expr v_Slice_lower(_expr setter);
            @Name("v.Slice.upper") public native _expr v_Slice_upper(); public native _expr v_Slice_upper(_expr setter);
            @Name("v.Slice.step") public native _expr v_Slice_step(); public native _expr v_Slice_step(_expr setter);
    public native int lineno(); public native _expr lineno(int setter);
    public native int col_offset(); public native _expr col_offset(int setter);
    public native int end_lineno(); public native _expr end_lineno(int setter);
    public native int end_col_offset(); public native _expr end_col_offset(int setter);
}
