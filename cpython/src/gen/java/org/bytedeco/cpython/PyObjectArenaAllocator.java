// Targeted by JavaCPP version 1.5.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cpython.global.python.*;

// #endif


@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class PyObjectArenaAllocator extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PyObjectArenaAllocator() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PyObjectArenaAllocator(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PyObjectArenaAllocator(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PyObjectArenaAllocator position(long position) {
        return (PyObjectArenaAllocator)super.position(position);
    }
    @Override public PyObjectArenaAllocator getPointer(long i) {
        return new PyObjectArenaAllocator((Pointer)this).position(position + i);
    }

    /* user context passed as the first argument to the 2 functions */
    public native Pointer ctx(); public native PyObjectArenaAllocator ctx(Pointer setter);

    /* allocate an arena of size bytes */
    public static class Alloc_Pointer_long extends FunctionPointer {
        static { Loader.load(); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public    Alloc_Pointer_long(Pointer p) { super(p); }
        protected Alloc_Pointer_long() { allocate(); }
        private native void allocate();
        public native Pointer call(Pointer ctx, @Cast("size_t") long size);
    }
    public native Alloc_Pointer_long alloc(); public native PyObjectArenaAllocator alloc(Alloc_Pointer_long setter);

    /* free an arena */
    public static class Free_Pointer_Pointer_long extends FunctionPointer {
        static { Loader.load(); }
        /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
        public    Free_Pointer_Pointer_long(Pointer p) { super(p); }
        protected Free_Pointer_Pointer_long() { allocate(); }
        private native void allocate();
        public native void call(Pointer ctx, Pointer ptr, @Cast("size_t") long size);
    }
    public native @Name("free") Free_Pointer_Pointer_long _free(); public native PyObjectArenaAllocator _free(Free_Pointer_Pointer_long setter);
}
