// Targeted by JavaCPP version 1.5.10-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cpython.global.python.*;



@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class PyTraceInfo extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PyTraceInfo() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PyTraceInfo(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PyTraceInfo(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PyTraceInfo position(long position) {
        return (PyTraceInfo)super.position(position);
    }
    @Override public PyTraceInfo getPointer(long i) {
        return new PyTraceInfo((Pointer)this).offsetAddress(i);
    }

    public native PyCodeObject code(); public native PyTraceInfo code(PyCodeObject setter); // The code object for the bounds. May be NULL.
    public native @ByRef PyCodeAddressRange bounds(); public native PyTraceInfo bounds(PyCodeAddressRange setter); // Only valid if code != NULL.
}
