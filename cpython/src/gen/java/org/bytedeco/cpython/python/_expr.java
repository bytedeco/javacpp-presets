// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython.python;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cpython.global.python.*;

@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class _expr extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public _expr() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public _expr(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public _expr(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public _expr position(long position) {
        return (_expr)super.position(position);
    }

    public native @Cast("_expr_kind") int kind(); public native _expr kind(int kind);
            @Name("v.BoolOp.op") public native @Cast("boolop_ty") int v_BoolOp_op(); public native _expr v_BoolOp_op(int v_BoolOp_op);
            @Name("v.BoolOp.values") public native asdl_seq v_BoolOp_values(); public native _expr v_BoolOp_values(asdl_seq v_BoolOp_values);
        
            @Name("v.BinOp.left") public native _expr v_BinOp_left(); public native _expr v_BinOp_left(_expr v_BinOp_left);
            @Name("v.BinOp.op") public native @Cast("operator_ty") int v_BinOp_op(); public native _expr v_BinOp_op(int v_BinOp_op);
            @Name("v.BinOp.right") public native _expr v_BinOp_right(); public native _expr v_BinOp_right(_expr v_BinOp_right);
        
            @Name("v.UnaryOp.op") public native @Cast("unaryop_ty") int v_UnaryOp_op(); public native _expr v_UnaryOp_op(int v_UnaryOp_op);
            @Name("v.UnaryOp.operand") public native _expr v_UnaryOp_operand(); public native _expr v_UnaryOp_operand(_expr v_UnaryOp_operand);
        
            @Name("v.Lambda.args") public native _arguments v_Lambda_args(); public native _expr v_Lambda_args(_arguments v_Lambda_args);
            @Name("v.Lambda.body") public native _expr v_Lambda_body(); public native _expr v_Lambda_body(_expr v_Lambda_body);
        
            @Name("v.IfExp.test") public native _expr v_IfExp_test(); public native _expr v_IfExp_test(_expr v_IfExp_test);
            @Name("v.IfExp.body") public native _expr v_IfExp_body(); public native _expr v_IfExp_body(_expr v_IfExp_body);
            @Name("v.IfExp.orelse") public native _expr v_IfExp_orelse(); public native _expr v_IfExp_orelse(_expr v_IfExp_orelse);
        
            @Name("v.Dict.keys") public native asdl_seq v_Dict_keys(); public native _expr v_Dict_keys(asdl_seq v_Dict_keys);
            @Name("v.Dict.values") public native asdl_seq v_Dict_values(); public native _expr v_Dict_values(asdl_seq v_Dict_values);
        
            @Name("v.Set.elts") public native asdl_seq v_Set_elts(); public native _expr v_Set_elts(asdl_seq v_Set_elts);
        
            @Name("v.ListComp.elt") public native _expr v_ListComp_elt(); public native _expr v_ListComp_elt(_expr v_ListComp_elt);
            @Name("v.ListComp.generators") public native asdl_seq v_ListComp_generators(); public native _expr v_ListComp_generators(asdl_seq v_ListComp_generators);
        
            @Name("v.SetComp.elt") public native _expr v_SetComp_elt(); public native _expr v_SetComp_elt(_expr v_SetComp_elt);
            @Name("v.SetComp.generators") public native asdl_seq v_SetComp_generators(); public native _expr v_SetComp_generators(asdl_seq v_SetComp_generators);
        
            @Name("v.DictComp.key") public native _expr v_DictComp_key(); public native _expr v_DictComp_key(_expr v_DictComp_key);
            @Name("v.DictComp.value") public native _expr v_DictComp_value(); public native _expr v_DictComp_value(_expr v_DictComp_value);
            @Name("v.DictComp.generators") public native asdl_seq v_DictComp_generators(); public native _expr v_DictComp_generators(asdl_seq v_DictComp_generators);
        
            @Name("v.GeneratorExp.elt") public native _expr v_GeneratorExp_elt(); public native _expr v_GeneratorExp_elt(_expr v_GeneratorExp_elt);
            @Name("v.GeneratorExp.generators") public native asdl_seq v_GeneratorExp_generators(); public native _expr v_GeneratorExp_generators(asdl_seq v_GeneratorExp_generators);
        
            @Name("v.Await.value") public native _expr v_Await_value(); public native _expr v_Await_value(_expr v_Await_value);
        
            @Name("v.Yield.value") public native _expr v_Yield_value(); public native _expr v_Yield_value(_expr v_Yield_value);
        
            @Name("v.YieldFrom.value") public native _expr v_YieldFrom_value(); public native _expr v_YieldFrom_value(_expr v_YieldFrom_value);
        
            @Name("v.Compare.left") public native _expr v_Compare_left(); public native _expr v_Compare_left(_expr v_Compare_left);
            @Name("v.Compare.ops") public native asdl_int_seq v_Compare_ops(); public native _expr v_Compare_ops(asdl_int_seq v_Compare_ops);
            @Name("v.Compare.comparators") public native asdl_seq v_Compare_comparators(); public native _expr v_Compare_comparators(asdl_seq v_Compare_comparators);
        
            @Name("v.Call.func") public native _expr v_Call_func(); public native _expr v_Call_func(_expr v_Call_func);
            @Name("v.Call.args") public native asdl_seq v_Call_args(); public native _expr v_Call_args(asdl_seq v_Call_args);
            @Name("v.Call.keywords") public native asdl_seq v_Call_keywords(); public native _expr v_Call_keywords(asdl_seq v_Call_keywords);
        
            @Name("v.Num.n") public native @Cast("object") PyObject v_Num_n(); public native _expr v_Num_n(PyObject v_Num_n);
        
            @Name("v.Str.s") public native @Cast("string") PyObject v_Str_s(); public native _expr v_Str_s(PyObject v_Str_s);
        
            @Name("v.FormattedValue.value") public native _expr v_FormattedValue_value(); public native _expr v_FormattedValue_value(_expr v_FormattedValue_value);
            @Name("v.FormattedValue.conversion") public native int v_FormattedValue_conversion(); public native _expr v_FormattedValue_conversion(int v_FormattedValue_conversion);
            @Name("v.FormattedValue.format_spec") public native _expr v_FormattedValue_format_spec(); public native _expr v_FormattedValue_format_spec(_expr v_FormattedValue_format_spec);
        
            @Name("v.JoinedStr.values") public native asdl_seq v_JoinedStr_values(); public native _expr v_JoinedStr_values(asdl_seq v_JoinedStr_values);
        
            @Name("v.Bytes.s") public native @Cast("bytes") PyObject v_Bytes_s(); public native _expr v_Bytes_s(PyObject v_Bytes_s);
        
            @Name("v.NameConstant.value") public native @Cast("singleton") PyObject v_NameConstant_value(); public native _expr v_NameConstant_value(PyObject v_NameConstant_value);
        
            @Name("v.Constant.value") public native @Cast("constant") PyObject v_Constant_value(); public native _expr v_Constant_value(PyObject v_Constant_value);
        
            @Name("v.Attribute.value") public native _expr v_Attribute_value(); public native _expr v_Attribute_value(_expr v_Attribute_value);
            @Name("v.Attribute.attr") public native @Cast("identifier") PyObject v_Attribute_attr(); public native _expr v_Attribute_attr(PyObject v_Attribute_attr);
            @Name("v.Attribute.ctx") public native @Cast("expr_context_ty") int v_Attribute_ctx(); public native _expr v_Attribute_ctx(int v_Attribute_ctx);
        
            @Name("v.Subscript.value") public native _expr v_Subscript_value(); public native _expr v_Subscript_value(_expr v_Subscript_value);
            @Name("v.Subscript.slice") public native _slice v_Subscript_slice(); public native _expr v_Subscript_slice(_slice v_Subscript_slice);
            @Name("v.Subscript.ctx") public native @Cast("expr_context_ty") int v_Subscript_ctx(); public native _expr v_Subscript_ctx(int v_Subscript_ctx);
        
            @Name("v.Starred.value") public native _expr v_Starred_value(); public native _expr v_Starred_value(_expr v_Starred_value);
            @Name("v.Starred.ctx") public native @Cast("expr_context_ty") int v_Starred_ctx(); public native _expr v_Starred_ctx(int v_Starred_ctx);
        
            @Name("v.Name.id") public native @Cast("identifier") PyObject v_Name_id(); public native _expr v_Name_id(PyObject v_Name_id);
            @Name("v.Name.ctx") public native @Cast("expr_context_ty") int v_Name_ctx(); public native _expr v_Name_ctx(int v_Name_ctx);
        
            @Name("v.List.elts") public native asdl_seq v_List_elts(); public native _expr v_List_elts(asdl_seq v_List_elts);
            @Name("v.List.ctx") public native @Cast("expr_context_ty") int v_List_ctx(); public native _expr v_List_ctx(int v_List_ctx);
        
            @Name("v.Tuple.elts") public native asdl_seq v_Tuple_elts(); public native _expr v_Tuple_elts(asdl_seq v_Tuple_elts);
            @Name("v.Tuple.ctx") public native @Cast("expr_context_ty") int v_Tuple_ctx(); public native _expr v_Tuple_ctx(int v_Tuple_ctx);
    public native int lineno(); public native _expr lineno(int lineno);
    public native int col_offset(); public native _expr col_offset(int col_offset);
}
