// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython.python;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cpython.global.python.*;


@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class PyAsyncMethods extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PyAsyncMethods() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PyAsyncMethods(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PyAsyncMethods(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PyAsyncMethods position(long position) {
        return (PyAsyncMethods)super.position(position);
    }

    public native unaryfunc am_await(); public native PyAsyncMethods am_await(unaryfunc am_await);
    public native unaryfunc am_aiter(); public native PyAsyncMethods am_aiter(unaryfunc am_aiter);
    public native unaryfunc am_anext(); public native PyAsyncMethods am_anext(unaryfunc am_anext);
}
