// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython.python;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cpython.global.python.*;


@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class PyOSErrorObject extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PyOSErrorObject() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PyOSErrorObject(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PyOSErrorObject(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PyOSErrorObject position(long position) {
        return (PyOSErrorObject)super.position(position);
    }

    public native @ByRef PyObject ob_base(); public native PyOSErrorObject ob_base(PyObject ob_base); public native PyObject dict(); public native PyOSErrorObject dict(PyObject dict);
             public native PyObject args(); public native PyOSErrorObject args(PyObject args); public native PyObject traceback(); public native PyOSErrorObject traceback(PyObject traceback);
             public native PyObject context(); public native PyOSErrorObject context(PyObject context); public native PyObject cause(); public native PyOSErrorObject cause(PyObject cause);
             public native @Cast("char") byte suppress_context(); public native PyOSErrorObject suppress_context(byte suppress_context);
    public native PyObject myerrno(); public native PyOSErrorObject myerrno(PyObject myerrno);
    public native PyObject strerror(); public native PyOSErrorObject strerror(PyObject strerror);
    public native PyObject filename(); public native PyOSErrorObject filename(PyObject filename);
    public native PyObject filename2(); public native PyOSErrorObject filename2(PyObject filename2);
// #ifdef MS_WINDOWS
// #endif
    public native @Cast("Py_ssize_t") long written(); public native PyOSErrorObject written(long written);   /* only for BlockingIOError, -1 otherwise */
}
