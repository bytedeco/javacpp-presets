// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython.python;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.cpython.global.python.*;


@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class PyCFunctionObject extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PyCFunctionObject() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PyCFunctionObject(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PyCFunctionObject(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PyCFunctionObject position(long position) {
        return (PyCFunctionObject)super.position(position);
    }

    public native @ByRef PyObject ob_base(); public native PyCFunctionObject ob_base(PyObject ob_base);
    public native PyMethodDef m_ml(); public native PyCFunctionObject m_ml(PyMethodDef m_ml); /* Description of the C function to call */
    public native PyObject m_self(); public native PyCFunctionObject m_self(PyObject m_self); /* Passed as 'self' arg to the C func, can be NULL */
    public native PyObject m_module(); public native PyCFunctionObject m_module(PyObject m_module); /* The __module__ attribute, can be anything */
    public native PyObject m_weakreflist(); public native PyCFunctionObject m_weakreflist(PyObject m_weakreflist); /* List of weak references */
}
