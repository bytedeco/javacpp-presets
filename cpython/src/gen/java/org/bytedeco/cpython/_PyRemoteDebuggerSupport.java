// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cpython;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cpython.global.python.*;

@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class _PyRemoteDebuggerSupport extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public _PyRemoteDebuggerSupport() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public _PyRemoteDebuggerSupport(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public _PyRemoteDebuggerSupport(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public _PyRemoteDebuggerSupport position(long position) {
        return (_PyRemoteDebuggerSupport)super.position(position);
    }
    @Override public _PyRemoteDebuggerSupport getPointer(long i) {
        return new _PyRemoteDebuggerSupport((Pointer)this).offsetAddress(i);
    }

    public native int debugger_pending_call(); public native _PyRemoteDebuggerSupport debugger_pending_call(int setter);
    public native @Cast("char") byte debugger_script_path(int i); public native _PyRemoteDebuggerSupport debugger_script_path(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer debugger_script_path();
}
