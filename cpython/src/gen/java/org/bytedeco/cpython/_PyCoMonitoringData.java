// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cpython;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cpython.global.python.*;


/* Main data structure used for instrumentation.
 * This is allocated when needed for instrumentation
 */
@Properties(inherit = org.bytedeco.cpython.presets.python.class)
public class _PyCoMonitoringData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public _PyCoMonitoringData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public _PyCoMonitoringData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public _PyCoMonitoringData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public _PyCoMonitoringData position(long position) {
        return (_PyCoMonitoringData)super.position(position);
    }
    @Override public _PyCoMonitoringData getPointer(long i) {
        return new _PyCoMonitoringData((Pointer)this).offsetAddress(i);
    }

    /* Monitoring specific to this code object */
    public native @ByRef _Py_LocalMonitors local_monitors(); public native _PyCoMonitoringData local_monitors(_Py_LocalMonitors setter);
    /* Monitoring that is active on this code object */
    public native @ByRef _Py_LocalMonitors active_monitors(); public native _PyCoMonitoringData active_monitors(_Py_LocalMonitors setter);
    /* The tools that are to be notified for events for the matching code unit */
    public native @Cast("uint8_t*") BytePointer tools(); public native _PyCoMonitoringData tools(BytePointer setter);
    /* Information to support line events */
    public native _PyCoLineInstrumentationData lines(); public native _PyCoMonitoringData lines(_PyCoLineInstrumentationData setter);
    /* The tools that are to be notified for line events for the matching code unit */
    public native @Cast("uint8_t*") BytePointer line_tools(); public native _PyCoMonitoringData line_tools(BytePointer setter);
    /* Information to support instruction events */
    /* The underlying instructions, which can themselves be instrumented */
    public native @Cast("uint8_t*") BytePointer per_instruction_opcodes(); public native _PyCoMonitoringData per_instruction_opcodes(BytePointer setter);
    /* The tools that are to be notified for instruction events for the matching code unit */
    public native @Cast("uint8_t*") BytePointer per_instruction_tools(); public native _PyCoMonitoringData per_instruction_tools(BytePointer setter);
}
