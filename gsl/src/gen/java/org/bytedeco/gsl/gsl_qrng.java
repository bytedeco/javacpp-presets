// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.gsl;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.gsl.global.gsl.*;


/* Structure describing a generator instance of a
 * specified type, with generator-specific state info
 * and dimension-specific info.
 */
@Properties(inherit = org.bytedeco.gsl.presets.gsl.class)
public class gsl_qrng extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public gsl_qrng() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public gsl_qrng(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public gsl_qrng(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public gsl_qrng position(long position) {
        return (gsl_qrng)super.position(position);
    }
    @Override public gsl_qrng getPointer(long i) {
        return new gsl_qrng((Pointer)this).position(position + i);
    }

  public native @Const gsl_qrng_type type(); public native gsl_qrng type(gsl_qrng_type setter);
  public native @Cast("unsigned int") int dimension(); public native gsl_qrng dimension(int setter);
  public native @Cast("size_t") long state_size(); public native gsl_qrng state_size(long setter);
  public native Pointer state(); public native gsl_qrng state(Pointer setter);
}
