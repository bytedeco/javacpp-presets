// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.gsl;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.gsl.global.gsl.*;



/*
 * A 2D interpolation object which stores the arrays defining the function.
 * In all other respects, this is just like a gsl_interp2d object.
 */
@Properties(inherit = org.bytedeco.gsl.presets.gsl.class)
public class gsl_spline2d extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public gsl_spline2d() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public gsl_spline2d(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public gsl_spline2d(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public gsl_spline2d position(long position) {
        return (gsl_spline2d)super.position(position);
    }

  public native @ByRef gsl_interp2d interp_object(); public native gsl_spline2d interp_object(gsl_interp2d interp_object); /* low-level interpolation object */
  public native DoublePointer xarr(); public native gsl_spline2d xarr(DoublePointer xarr);              /* x data array */
  public native DoublePointer yarr(); public native gsl_spline2d yarr(DoublePointer yarr);              /* y data array */
  public native DoublePointer zarr(); public native gsl_spline2d zarr(DoublePointer zarr);              /* z data array */
}
