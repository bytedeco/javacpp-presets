// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.gsl;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.gsl.global.gsl.*;

// #else
// #endif

@Properties(inherit = org.bytedeco.gsl.presets.gsl.class)
public class gsl_vector_short extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public gsl_vector_short() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public gsl_vector_short(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public gsl_vector_short(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public gsl_vector_short position(long position) {
        return (gsl_vector_short)super.position(position);
    }

  public native @Cast("size_t") long size(); public native gsl_vector_short size(long size);
  public native @Cast("size_t") long stride(); public native gsl_vector_short stride(long stride);
  public native ShortPointer data(); public native gsl_vector_short data(ShortPointer data);
  public native gsl_block_short block(); public native gsl_vector_short block(gsl_block_short block);
  public native int owner(); public native gsl_vector_short owner(int owner);
}
