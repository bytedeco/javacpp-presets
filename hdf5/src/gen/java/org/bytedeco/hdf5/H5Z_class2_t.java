// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.hdf5;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.hdf5.global.hdf5.*;


/*
 * The filter table maps filter identification numbers to structs that
 * contain a pointers to the filter function and timing statistics.
 */
@Properties(inherit = org.bytedeco.hdf5.presets.hdf5.class)
public class H5Z_class2_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public H5Z_class2_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public H5Z_class2_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public H5Z_class2_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public H5Z_class2_t position(long position) {
        return (H5Z_class2_t)super.position(position);
    }

    public native int version(); public native H5Z_class2_t version(int version);                    /* Version number of the H5Z_class_t struct     */
    public native @Cast("H5Z_filter_t") int id(); public native H5Z_class2_t id(int id);                /* Filter ID number                             */
    public native @Cast("unsigned") int encoder_present(); public native H5Z_class2_t encoder_present(int encoder_present);       /* Does this filter have an encoder?            */
    public native @Cast("unsigned") int decoder_present(); public native H5Z_class2_t decoder_present(int decoder_present);       /* Does this filter have a decoder?             */
    @MemberGetter public native @Cast("const char*") BytePointer name();              /* Comment for debugging                        */
    public native H5Z_can_apply_func_t can_apply(); public native H5Z_class2_t can_apply(H5Z_can_apply_func_t can_apply); /* The "can apply" callback for a filter        */
    public native H5Z_set_local_func_t set_local(); public native H5Z_class2_t set_local(H5Z_set_local_func_t set_local); /* The "set local" callback for a filter        */
    public native H5Z_func_t filter(); public native H5Z_class2_t filter(H5Z_func_t filter);              /* The actual filter function                   */
}
