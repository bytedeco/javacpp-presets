// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.hdf5;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.hdf5.global.hdf5.*;

/** <!-- [H5A_info_t_snip] -->
 <p>
 *  <!-- [H5A_operator2_t_snip] -->
/**
 * Typedef for H5Aiterate2() / H5Aiterate_by_name() callbacks
 * @param location_id [in] The identifier for the group, dataset
 *            or named datatype being iterated over
 * @param attr_name [in] The name of the current object attribute
 * @param ainfo [in] The attributeâ€™s info struct
 * @param op_data [in,out] A pointer to the operator data passed in to
 *                H5Aiterate2() or H5Aiterate_by_name()
 * @return The return values from an operator are:
 *          \li Zero causes the iterator to continue, returning zero when
 *              all attributes have been processed.
 *          \li Positive causes the iterator to immediately return that
 *              positive value, indicating short-circuit success. The
 *              iterator can be restarted at the next attribute.
 *          \li Negative causes the iterator to immediately return that value,
 *              indicating failure. The iterator can be restarted at the next
 *              attribute.
 */
@Properties(inherit = org.bytedeco.hdf5.presets.hdf5.class)
public class H5A_operator2_t extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    H5A_operator2_t(Pointer p) { super(p); }
    protected H5A_operator2_t() { allocate(); }
    private native void allocate();
    public native @Cast("herr_t") int call(@Cast("hid_t") long location_id, @Cast("const char*") BytePointer attr_name,
                                  @Const H5A_info_t ainfo, Pointer op_data);
}
