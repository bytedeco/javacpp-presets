// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.hdf5;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.hdf5.global.hdf5.*;


@Properties(inherit = org.bytedeco.hdf5.presets.hdf5.class)
public class H5AC_cache_config_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public H5AC_cache_config_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public H5AC_cache_config_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public H5AC_cache_config_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public H5AC_cache_config_t position(long position) {
        return (H5AC_cache_config_t)super.position(position);
    }

    /* general configuration fields: */
    public native int version(); public native H5AC_cache_config_t version(int version);

    public native @Cast("hbool_t") boolean rpt_fcn_enabled(); public native H5AC_cache_config_t rpt_fcn_enabled(boolean rpt_fcn_enabled);

    public native @Cast("hbool_t") boolean open_trace_file(); public native H5AC_cache_config_t open_trace_file(boolean open_trace_file);
    public native @Cast("hbool_t") boolean close_trace_file(); public native H5AC_cache_config_t close_trace_file(boolean close_trace_file);
    public native @Cast("char") byte trace_file_name(int i); public native H5AC_cache_config_t trace_file_name(int i, byte trace_file_name);
    @MemberGetter public native @Cast("char*") BytePointer trace_file_name();

    public native @Cast("hbool_t") boolean evictions_enabled(); public native H5AC_cache_config_t evictions_enabled(boolean evictions_enabled);

    public native @Cast("hbool_t") boolean set_initial_size(); public native H5AC_cache_config_t set_initial_size(boolean set_initial_size);
    public native @Cast("size_t") long initial_size(); public native H5AC_cache_config_t initial_size(long initial_size);

    public native double min_clean_fraction(); public native H5AC_cache_config_t min_clean_fraction(double min_clean_fraction);

    public native @Cast("size_t") long max_size(); public native H5AC_cache_config_t max_size(long max_size);
    public native @Cast("size_t") long min_size(); public native H5AC_cache_config_t min_size(long min_size);

    public native long epoch_length(); public native H5AC_cache_config_t epoch_length(long epoch_length);


    /* size increase control fields: */
    public native @Cast("H5C_cache_incr_mode") int incr_mode(); public native H5AC_cache_config_t incr_mode(int incr_mode);

    public native double lower_hr_threshold(); public native H5AC_cache_config_t lower_hr_threshold(double lower_hr_threshold);

    public native double increment(); public native H5AC_cache_config_t increment(double increment);

    public native @Cast("hbool_t") boolean apply_max_increment(); public native H5AC_cache_config_t apply_max_increment(boolean apply_max_increment);
    public native @Cast("size_t") long max_increment(); public native H5AC_cache_config_t max_increment(long max_increment);

    public native @Cast("H5C_cache_flash_incr_mode") int flash_incr_mode(); public native H5AC_cache_config_t flash_incr_mode(int flash_incr_mode);
    public native double flash_multiple(); public native H5AC_cache_config_t flash_multiple(double flash_multiple);
    public native double flash_threshold(); public native H5AC_cache_config_t flash_threshold(double flash_threshold);


    /* size decrease control fields: */
    public native @Cast("H5C_cache_decr_mode") int decr_mode(); public native H5AC_cache_config_t decr_mode(int decr_mode);

    public native double upper_hr_threshold(); public native H5AC_cache_config_t upper_hr_threshold(double upper_hr_threshold);

    public native double decrement(); public native H5AC_cache_config_t decrement(double decrement);

    public native @Cast("hbool_t") boolean apply_max_decrement(); public native H5AC_cache_config_t apply_max_decrement(boolean apply_max_decrement);
    public native @Cast("size_t") long max_decrement(); public native H5AC_cache_config_t max_decrement(long max_decrement);

    public native int epochs_before_eviction(); public native H5AC_cache_config_t epochs_before_eviction(int epochs_before_eviction);

    public native @Cast("hbool_t") boolean apply_empty_reserve(); public native H5AC_cache_config_t apply_empty_reserve(boolean apply_empty_reserve);
    public native double empty_reserve(); public native H5AC_cache_config_t empty_reserve(double empty_reserve);


    /* parallel configuration fields: */
    public native @Cast("size_t") long dirty_bytes_threshold(); public native H5AC_cache_config_t dirty_bytes_threshold(long dirty_bytes_threshold);
    public native int metadata_write_strategy(); public native H5AC_cache_config_t metadata_write_strategy(int metadata_write_strategy);

}
