// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;

// Forward decl

@Name("Ort::detail::ConstNodeImpl<OrtNode>") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class ConstNodeImpl extends BaseNode {
    static { Loader.load(); }
    /** Default native constructor. */
    public ConstNodeImpl() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ConstNodeImpl(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ConstNodeImpl(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ConstNodeImpl position(long position) {
        return (ConstNodeImpl)super.position(position);
    }
    @Override public ConstNodeImpl getPointer(long i) {
        return new ConstNodeImpl((Pointer)this).offsetAddress(i);
    }


  // <Wraps OrtApi::Node_GetId
  public native @Cast("size_t") long GetId();
  // <Wraps OrtApi::Node_GetName
  public native @StdString BytePointer GetName();
  // <Wraps OrtApi::Node_GetOperatorType
  public native @StdString BytePointer GetOperatorType();
  // <Wraps OrtApi::Node_GetDomain
  public native @StdString BytePointer GetDomain();
  // <Wraps OrtApi::Node_GetSinceVersion
  public native int GetSinceVersion();

  // <Wraps OrtApi::Node_Inputs
  public native @Cast("Ort::ConstValueInfo*") @StdVector ConstValueInfoImpl GetInputs();
  // <Wraps OrtApi::Node_Outputs
  public native @Cast("Ort::ConstValueInfo*") @StdVector ConstValueInfoImpl GetOutputs();
  // <Wraps OrtApi::Node_ImplicitInputs
  public native @Cast("Ort::ConstValueInfo*") @StdVector ConstValueInfoImpl GetImplicitInputs();
  // <Wraps OrtApi::Node_GetAttributes
  public native @Cast("Ort::ConstOpAttr*") @StdVector ConstOpAttrImpl GetAttributes();
  // <Wraps OrtApi::Node_GetAttributeByName
  // Please, read C API doc for details
  public native @ByVal Status GetAttributeByName(@StdString BytePointer name, @Cast("Ort::ConstOpAttr*") @ByRef ConstOpAttrImpl attr);
  public native @ByVal Status GetAttributeByName(@StdString String name, @Cast("Ort::ConstOpAttr*") @ByRef ConstOpAttrImpl attr);
  // <Wraps OrtApi::Node_GetSubgraphs
  public native @StdVector AttrNameSubgraph GetSubgraphs();
  // <Wraps OrtApi::Node_GetGraph
  // ConstGraph is not available yet
  public native @ByVal ConstGraph GetGraph();
  // <Wraps OrtApi::Node_GetEpName
  public native @StdString BytePointer GetEpName();
}
