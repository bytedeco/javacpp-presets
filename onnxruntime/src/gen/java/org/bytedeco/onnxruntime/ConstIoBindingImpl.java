// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


@Name("Ort::detail::ConstIoBindingImpl<OrtIoBinding>") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class ConstIoBindingImpl extends BaseIoBinding {
    static { Loader.load(); }
    /** Default native constructor. */
    public ConstIoBindingImpl() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public ConstIoBindingImpl(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public ConstIoBindingImpl(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public ConstIoBindingImpl position(long position) {
        return (ConstIoBindingImpl)super.position(position);
    }
    @Override public ConstIoBindingImpl getPointer(long i) {
        return new ConstIoBindingImpl((Pointer)this).offsetAddress(i);
    }


  public native @ByVal StringVector GetOutputNames();
  public native @ByVal StringVector GetOutputNames(OrtAllocator arg0);
  public native @StdMove ValueVector GetOutputValues();
  public native @StdMove ValueVector GetOutputValues(OrtAllocator arg0);
}
