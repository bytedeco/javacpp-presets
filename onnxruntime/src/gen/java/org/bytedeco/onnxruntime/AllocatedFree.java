// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


// Light functor to release memory with OrtAllocator
@Namespace("Ort::detail") @NoOffset @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class AllocatedFree extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AllocatedFree(Pointer p) { super(p); }

  public native OrtAllocator allocator_(); public native AllocatedFree allocator_(OrtAllocator setter);
  public AllocatedFree(OrtAllocator allocator) { super((Pointer)null); allocate(allocator); }
  private native void allocate(OrtAllocator allocator);
  public native @Name("operator ()") void apply(Pointer ptr);
}
