// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


// Return value for Node API
// Must be declared after ConstGraph
@Namespace("Ort") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class AttrNameSubgraph extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public AttrNameSubgraph() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public AttrNameSubgraph(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public AttrNameSubgraph(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public AttrNameSubgraph position(long position) {
        return (AttrNameSubgraph)super.position(position);
    }
    @Override public AttrNameSubgraph getPointer(long i) {
        return new AttrNameSubgraph((Pointer)this).offsetAddress(i);
    }

  public native @StdString BytePointer attr_name(); public native AttrNameSubgraph attr_name(BytePointer setter);
  public native @ByRef ConstGraph sub_graph(); public native AttrNameSubgraph sub_graph(ConstGraph setter);
}
