// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


/** \brief Function called by ORT to write a buffer to a custom destination (e.g., file, stream, etc.).
 *
 * @param state Opaque pointer holding the user's state.
 * @param buffer The buffer to write.
 * @param buffer_num_bytes The size of the buffer in bytes.
 *
 * @return OrtStatus* Write status. Return nullptr on success.
 *                    Use CreateStatus to provide error info. Use ORT_FAIL as the error code.
 *                    ORT will release the OrtStatus* if not null.
 */
@Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class OrtWriteBufferFunc extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    OrtWriteBufferFunc(Pointer p) { super(p); }
    protected OrtWriteBufferFunc() { allocate(); }
    private native void allocate();
    public native OrtStatus call(Pointer state,
                                                     @Const Pointer buffer,
                                                     @Cast("size_t") long buffer_num_bytes);
}
