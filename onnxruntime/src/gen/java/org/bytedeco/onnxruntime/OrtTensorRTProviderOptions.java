// Targeted by JavaCPP version 1.5.5: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


/** <summary>
 *  Options for the TensorRT provider that are passed to SessionOptionsAppendExecutionProvider_TensorRT
 *  </summary> */
@Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class OrtTensorRTProviderOptions extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public OrtTensorRTProviderOptions() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public OrtTensorRTProviderOptions(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public OrtTensorRTProviderOptions(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public OrtTensorRTProviderOptions position(long position) {
        return (OrtTensorRTProviderOptions)super.position(position);
    }
    @Override public OrtTensorRTProviderOptions getPointer(long i) {
        return new OrtTensorRTProviderOptions((Pointer)this).position(position + i);
    }

  public native int device_id(); public native OrtTensorRTProviderOptions device_id(int setter);
  public native int has_user_compute_stream(); public native OrtTensorRTProviderOptions has_user_compute_stream(int setter);
  public native Pointer user_compute_stream(); public native OrtTensorRTProviderOptions user_compute_stream(Pointer setter);
}
