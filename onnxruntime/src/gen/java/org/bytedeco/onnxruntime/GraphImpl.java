// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.onnxruntime;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.opencl.*;
import static org.bytedeco.opencl.global.OpenCL.*;
import org.bytedeco.dnnl.*;
import static org.bytedeco.dnnl.global.dnnl.*;

import static org.bytedeco.onnxruntime.global.onnxruntime.*;


@Name("Ort::detail::GraphImpl<OrtGraph>") @Properties(inherit = org.bytedeco.onnxruntime.presets.onnxruntime.class)
public class GraphImpl extends ConstGraphImpl {
    static { Loader.load(); }
    /** Default native constructor. */
    public GraphImpl() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public GraphImpl(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public GraphImpl(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public GraphImpl position(long position) {
        return (GraphImpl)super.position(position);
    }
    @Override public GraphImpl getPointer(long i) {
        return new GraphImpl((Pointer)this).offsetAddress(i);
    }


// #if !defined(ORT_MINIMAL_BUILD)
  // <Wraps GetModelEditorApi().SetGraphInputs()
  public native void SetInputs(@ByRef ValueInfoVector inputs);
  // <Wraps GetModelEditorApi().SetGraphOutputs()
  public native void SetOutputs(@ByRef ValueInfoVector outputs);
  // <Wraps GetModelEditorApi().AddInitializerToGraph()
  public native void AddInitializer(@StdString BytePointer name, @ByRef Value initializer, @Cast("bool") boolean data_is_external);
  public native void AddInitializer(@StdString String name, @ByRef Value initializer, @Cast("bool") boolean data_is_external);  // Graph takes ownership of Value
  // <Wraps GetModelEditorApi().AddNodeToGraph()
  public native void AddNode(@ByRef Node node);  // Graph takes ownership of Node
// #endif                       // !defined(ORT_MINIMAL_BUILD)
}
