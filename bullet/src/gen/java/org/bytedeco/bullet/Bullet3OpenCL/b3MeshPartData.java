// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.Bullet3OpenCL;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.Bullet3Common.*;
import static org.bytedeco.bullet.global.Bullet3Common.*;
import org.bytedeco.bullet.Bullet3Collision.*;
import static org.bytedeco.bullet.global.Bullet3Collision.*;
import org.bytedeco.bullet.Bullet3Dynamics.*;
import static org.bytedeco.bullet.global.Bullet3Dynamics.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.Bullet3OpenCL.*;


/**do not change those serialization structures, it requires an updated sBulletDNAstr/sBulletDNAstr64 */
@Properties(inherit = org.bytedeco.bullet.presets.Bullet3OpenCL.class)
public class b3MeshPartData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public b3MeshPartData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public b3MeshPartData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public b3MeshPartData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public b3MeshPartData position(long position) {
        return (b3MeshPartData)super.position(position);
    }
    @Override public b3MeshPartData getPointer(long i) {
        return new b3MeshPartData((Pointer)this).offsetAddress(i);
    }

	public native b3Vector3FloatData m_vertices3f(); public native b3MeshPartData m_vertices3f(b3Vector3FloatData setter);
	public native b3Vector3DoubleData m_vertices3d(); public native b3MeshPartData m_vertices3d(b3Vector3DoubleData setter);

	public native b3IntIndexData m_indices32(); public native b3MeshPartData m_indices32(b3IntIndexData setter);
	public native b3ShortIntIndexTripletData m_3indices16(); public native b3MeshPartData m_3indices16(b3ShortIntIndexTripletData setter);
	public native b3CharIndexTripletData m_3indices8(); public native b3MeshPartData m_3indices8(b3CharIndexTripletData setter);

	public native b3ShortIntIndexData m_indices16(); public native b3MeshPartData m_indices16(b3ShortIntIndexData setter);  //backwards compatibility

	public native int m_numTriangles(); public native b3MeshPartData m_numTriangles(int setter);  //length of m_indices = m_numTriangles
	public native int m_numVertices(); public native b3MeshPartData m_numVertices(int setter);
}
