// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletDynamics;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;

import static org.bytedeco.bullet.global.BulletDynamics.*;


/**do not change those serialization structures, it requires an updated sBulletDNAstr/sBulletDNAstr64 */

@Properties(inherit = org.bytedeco.bullet.presets.BulletDynamics.class)
public class btSliderConstraintData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btSliderConstraintData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btSliderConstraintData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btSliderConstraintData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btSliderConstraintData position(long position) {
        return (btSliderConstraintData)super.position(position);
    }
    @Override public btSliderConstraintData getPointer(long i) {
        return new btSliderConstraintData((Pointer)this).offsetAddress(i);
    }

	public native @ByRef btTypedConstraintData m_typeConstraintData(); public native btSliderConstraintData m_typeConstraintData(btTypedConstraintData setter);
	public native @ByRef btTransformFloatData m_rbAFrame(); public native btSliderConstraintData m_rbAFrame(btTransformFloatData setter);  // constraint axii. Assumes z is hinge axis.
	public native @ByRef btTransformFloatData m_rbBFrame(); public native btSliderConstraintData m_rbBFrame(btTransformFloatData setter);

	public native float m_linearUpperLimit(); public native btSliderConstraintData m_linearUpperLimit(float setter);
	public native float m_linearLowerLimit(); public native btSliderConstraintData m_linearLowerLimit(float setter);

	public native float m_angularUpperLimit(); public native btSliderConstraintData m_angularUpperLimit(float setter);
	public native float m_angularLowerLimit(); public native btSliderConstraintData m_angularLowerLimit(float setter);

	public native int m_useLinearReferenceFrameA(); public native btSliderConstraintData m_useLinearReferenceFrameA(int setter);
	public native int m_useOffsetForConstraintFrame(); public native btSliderConstraintData m_useOffsetForConstraintFrame(int setter);
}
