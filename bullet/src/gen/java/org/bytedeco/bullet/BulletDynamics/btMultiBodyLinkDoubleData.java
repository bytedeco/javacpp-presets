// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletDynamics;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;

import static org.bytedeco.bullet.global.BulletDynamics.*;


@Properties(inherit = org.bytedeco.bullet.presets.BulletDynamics.class)
public class btMultiBodyLinkDoubleData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btMultiBodyLinkDoubleData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btMultiBodyLinkDoubleData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btMultiBodyLinkDoubleData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btMultiBodyLinkDoubleData position(long position) {
        return (btMultiBodyLinkDoubleData)super.position(position);
    }
    @Override public btMultiBodyLinkDoubleData getPointer(long i) {
        return new btMultiBodyLinkDoubleData((Pointer)this).offsetAddress(i);
    }

	public native @ByRef btQuaternionDoubleData m_zeroRotParentToThis(); public native btMultiBodyLinkDoubleData m_zeroRotParentToThis(btQuaternionDoubleData setter);
	public native @ByRef btVector3DoubleData m_parentComToThisPivotOffset(); public native btMultiBodyLinkDoubleData m_parentComToThisPivotOffset(btVector3DoubleData setter);
	public native @ByRef btVector3DoubleData m_thisPivotToThisComOffset(); public native btMultiBodyLinkDoubleData m_thisPivotToThisComOffset(btVector3DoubleData setter);
	public native @ByRef btVector3DoubleData m_jointAxisTop(int i); public native btMultiBodyLinkDoubleData m_jointAxisTop(int i, btVector3DoubleData setter);
	@MemberGetter public native btVector3DoubleData m_jointAxisTop();
	public native @ByRef btVector3DoubleData m_jointAxisBottom(int i); public native btMultiBodyLinkDoubleData m_jointAxisBottom(int i, btVector3DoubleData setter);
	@MemberGetter public native btVector3DoubleData m_jointAxisBottom();

	public native @ByRef btVector3DoubleData m_linkInertia(); public native btMultiBodyLinkDoubleData m_linkInertia(btVector3DoubleData setter);  // inertia of the base (in local frame; diagonal)
	public native @ByRef btVector3DoubleData m_absFrameTotVelocityTop(); public native btMultiBodyLinkDoubleData m_absFrameTotVelocityTop(btVector3DoubleData setter);
	public native @ByRef btVector3DoubleData m_absFrameTotVelocityBottom(); public native btMultiBodyLinkDoubleData m_absFrameTotVelocityBottom(btVector3DoubleData setter);
	public native @ByRef btVector3DoubleData m_absFrameLocVelocityTop(); public native btMultiBodyLinkDoubleData m_absFrameLocVelocityTop(btVector3DoubleData setter);
	public native @ByRef btVector3DoubleData m_absFrameLocVelocityBottom(); public native btMultiBodyLinkDoubleData m_absFrameLocVelocityBottom(btVector3DoubleData setter);

	public native double m_linkMass(); public native btMultiBodyLinkDoubleData m_linkMass(double setter);
	public native int m_parentIndex(); public native btMultiBodyLinkDoubleData m_parentIndex(int setter);
	public native int m_jointType(); public native btMultiBodyLinkDoubleData m_jointType(int setter);

	public native int m_dofCount(); public native btMultiBodyLinkDoubleData m_dofCount(int setter);
	public native int m_posVarCount(); public native btMultiBodyLinkDoubleData m_posVarCount(int setter);
	public native double m_jointPos(int i); public native btMultiBodyLinkDoubleData m_jointPos(int i, double setter);
	@MemberGetter public native DoublePointer m_jointPos();
	public native double m_jointVel(int i); public native btMultiBodyLinkDoubleData m_jointVel(int i, double setter);
	@MemberGetter public native DoublePointer m_jointVel();
	public native double m_jointTorque(int i); public native btMultiBodyLinkDoubleData m_jointTorque(int i, double setter);
	@MemberGetter public native DoublePointer m_jointTorque();

	public native double m_jointDamping(); public native btMultiBodyLinkDoubleData m_jointDamping(double setter);
	public native double m_jointFriction(); public native btMultiBodyLinkDoubleData m_jointFriction(double setter);
	public native double m_jointLowerLimit(); public native btMultiBodyLinkDoubleData m_jointLowerLimit(double setter);
	public native double m_jointUpperLimit(); public native btMultiBodyLinkDoubleData m_jointUpperLimit(double setter);
	public native double m_jointMaxForce(); public native btMultiBodyLinkDoubleData m_jointMaxForce(double setter);
	public native double m_jointMaxVelocity(); public native btMultiBodyLinkDoubleData m_jointMaxVelocity(double setter);

	public native @Cast("char*") BytePointer m_linkName(); public native btMultiBodyLinkDoubleData m_linkName(BytePointer setter);
	public native @Cast("char*") BytePointer m_jointName(); public native btMultiBodyLinkDoubleData m_jointName(BytePointer setter);
	public native btCollisionObjectDoubleData m_linkCollider(); public native btMultiBodyLinkDoubleData m_linkCollider(btCollisionObjectDoubleData setter);
	public native @Cast("char*") BytePointer m_paddingPtr(); public native btMultiBodyLinkDoubleData m_paddingPtr(BytePointer setter);
}
