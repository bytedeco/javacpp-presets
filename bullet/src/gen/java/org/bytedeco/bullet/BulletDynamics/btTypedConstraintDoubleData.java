// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletDynamics;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;

import static org.bytedeco.bullet.global.BulletDynamics.*;

// #endif //BACKWARDS_COMPATIBLE

@Properties(inherit = org.bytedeco.bullet.presets.BulletDynamics.class)
public class btTypedConstraintDoubleData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btTypedConstraintDoubleData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btTypedConstraintDoubleData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btTypedConstraintDoubleData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btTypedConstraintDoubleData position(long position) {
        return (btTypedConstraintDoubleData)super.position(position);
    }
    @Override public btTypedConstraintDoubleData getPointer(long i) {
        return new btTypedConstraintDoubleData((Pointer)this).offsetAddress(i);
    }

	public native btRigidBodyDoubleData m_rbA(); public native btTypedConstraintDoubleData m_rbA(btRigidBodyDoubleData setter);
	public native btRigidBodyDoubleData m_rbB(); public native btTypedConstraintDoubleData m_rbB(btRigidBodyDoubleData setter);
	public native @Cast("char*") BytePointer m_name(); public native btTypedConstraintDoubleData m_name(BytePointer setter);

	public native int m_objectType(); public native btTypedConstraintDoubleData m_objectType(int setter);
	public native int m_userConstraintType(); public native btTypedConstraintDoubleData m_userConstraintType(int setter);
	public native int m_userConstraintId(); public native btTypedConstraintDoubleData m_userConstraintId(int setter);
	public native int m_needsFeedback(); public native btTypedConstraintDoubleData m_needsFeedback(int setter);

	public native double m_appliedImpulse(); public native btTypedConstraintDoubleData m_appliedImpulse(double setter);
	public native double m_dbgDrawSize(); public native btTypedConstraintDoubleData m_dbgDrawSize(double setter);

	public native int m_disableCollisionsBetweenLinkedBodies(); public native btTypedConstraintDoubleData m_disableCollisionsBetweenLinkedBodies(int setter);
	public native int m_overrideNumSolverIterations(); public native btTypedConstraintDoubleData m_overrideNumSolverIterations(int setter);

	public native double m_breakingImpulseThreshold(); public native btTypedConstraintDoubleData m_breakingImpulseThreshold(double setter);
	public native int m_isEnabled(); public native btTypedConstraintDoubleData m_isEnabled(int setter);
	public native @Cast("char") byte padding(int i); public native btTypedConstraintDoubleData padding(int i, byte setter);
	@MemberGetter public native @Cast("char*") BytePointer padding();
	
}
