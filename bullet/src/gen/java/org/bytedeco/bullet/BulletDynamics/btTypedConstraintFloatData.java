// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletDynamics;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;

import static org.bytedeco.bullet.global.BulletDynamics.*;


// clang-format off

/**do not change those serialization structures, it requires an updated sBulletDNAstr/sBulletDNAstr64 */
@Properties(inherit = org.bytedeco.bullet.presets.BulletDynamics.class)
public class btTypedConstraintFloatData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btTypedConstraintFloatData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btTypedConstraintFloatData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btTypedConstraintFloatData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btTypedConstraintFloatData position(long position) {
        return (btTypedConstraintFloatData)super.position(position);
    }
    @Override public btTypedConstraintFloatData getPointer(long i) {
        return new btTypedConstraintFloatData((Pointer)this).offsetAddress(i);
    }

	public native btRigidBodyFloatData m_rbA(); public native btTypedConstraintFloatData m_rbA(btRigidBodyFloatData setter);
	public native btRigidBodyFloatData m_rbB(); public native btTypedConstraintFloatData m_rbB(btRigidBodyFloatData setter);
	public native @Cast("char*") BytePointer m_name(); public native btTypedConstraintFloatData m_name(BytePointer setter);

	public native int m_objectType(); public native btTypedConstraintFloatData m_objectType(int setter);
	public native int m_userConstraintType(); public native btTypedConstraintFloatData m_userConstraintType(int setter);
	public native int m_userConstraintId(); public native btTypedConstraintFloatData m_userConstraintId(int setter);
	public native int m_needsFeedback(); public native btTypedConstraintFloatData m_needsFeedback(int setter);

	public native float m_appliedImpulse(); public native btTypedConstraintFloatData m_appliedImpulse(float setter);
	public native float m_dbgDrawSize(); public native btTypedConstraintFloatData m_dbgDrawSize(float setter);

	public native int m_disableCollisionsBetweenLinkedBodies(); public native btTypedConstraintFloatData m_disableCollisionsBetweenLinkedBodies(int setter);
	public native int m_overrideNumSolverIterations(); public native btTypedConstraintFloatData m_overrideNumSolverIterations(int setter);

	public native float m_breakingImpulseThreshold(); public native btTypedConstraintFloatData m_breakingImpulseThreshold(float setter);
	public native int m_isEnabled(); public native btTypedConstraintFloatData m_isEnabled(int setter);
	
}
