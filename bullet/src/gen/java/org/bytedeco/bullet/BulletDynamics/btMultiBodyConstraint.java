// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletDynamics;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;

import static org.bytedeco.bullet.global.BulletDynamics.*;


@NoOffset @Properties(inherit = org.bytedeco.bullet.presets.BulletDynamics.class)
public class btMultiBodyConstraint extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btMultiBodyConstraint(Pointer p) { super(p); }


	public native void updateJacobianSizes();
	public native void allocateJacobiansMultiDof();

	public native int getConstraintType();
	//many constraints have setFrameInB/setPivotInB. Will use 'getConstraintType' later.
	public native void setFrameInB(@Const @ByRef btMatrix3x3 frameInB);
	public native void setPivotInB(@Const @ByRef btVector3 pivotInB);

	public native void finalizeMultiDof();

	public native int getIslandIdA();
	public native int getIslandIdB();

	public native void createConstraintRows(@ByRef btMultiBodySolverConstraintArray constraintRows,
										  @ByRef btMultiBodyJacobianData data,
										  @Const @ByRef btContactSolverInfo infoGlobal);

	public native int getNumRows();

	public native btMultiBody getMultiBodyA();
	public native btMultiBody getMultiBodyB();

	public native int getLinkA();
	public native int getLinkB();
	public native void internalSetAppliedImpulse(int dof, @Cast("btScalar") double appliedImpulse);

	public native @Cast("btScalar") double getAppliedImpulse(int dof);
	// current constraint position
	// constraint is pos >= 0 for unilateral, or pos = 0 for bilateral
	// NOTE: ignored position for friction rows.
	public native @Cast("btScalar") double getPosition(int row);

	public native void setPosition(int row, @Cast("btScalar") double pos);

	public native @Cast("bool") boolean isUnilateral();

	// jacobian blocks.
	// each of size 6 + num_links. (jacobian2 is null if no body2.)
	// format: 3 'omega' coefficients, 3 'v' coefficients, then the 'qdot' coefficients.
	public native @Cast("btScalar*") DoublePointer jacobianA(int row);
	public native @Cast("btScalar*") DoublePointer jacobianB(int row);

	public native @Cast("btScalar") double getMaxAppliedImpulse();
	public native void setMaxAppliedImpulse(@Cast("btScalar") double maxImp);

	public native void debugDraw(btIDebugDraw drawer);

	public native void setGearRatio(@Cast("btScalar") double ratio);
	public native void setGearAuxLink(int gearAuxLink);
	public native void setRelativePositionTarget(@Cast("btScalar") double relPosTarget);
	public native void setErp(@Cast("btScalar") double erp);
}
