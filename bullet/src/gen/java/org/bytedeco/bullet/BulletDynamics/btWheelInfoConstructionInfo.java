// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletDynamics;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;

import static org.bytedeco.bullet.global.BulletDynamics.*;


@Properties(inherit = org.bytedeco.bullet.presets.BulletDynamics.class)
public class btWheelInfoConstructionInfo extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btWheelInfoConstructionInfo() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btWheelInfoConstructionInfo(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btWheelInfoConstructionInfo(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btWheelInfoConstructionInfo position(long position) {
        return (btWheelInfoConstructionInfo)super.position(position);
    }
    @Override public btWheelInfoConstructionInfo getPointer(long i) {
        return new btWheelInfoConstructionInfo((Pointer)this).offsetAddress(i);
    }

	public native @ByRef btVector3 m_chassisConnectionCS(); public native btWheelInfoConstructionInfo m_chassisConnectionCS(btVector3 setter);
	public native @ByRef btVector3 m_wheelDirectionCS(); public native btWheelInfoConstructionInfo m_wheelDirectionCS(btVector3 setter);
	public native @ByRef btVector3 m_wheelAxleCS(); public native btWheelInfoConstructionInfo m_wheelAxleCS(btVector3 setter);
	public native @Cast("btScalar") double m_suspensionRestLength(); public native btWheelInfoConstructionInfo m_suspensionRestLength(double setter);
	public native @Cast("btScalar") double m_maxSuspensionTravelCm(); public native btWheelInfoConstructionInfo m_maxSuspensionTravelCm(double setter);
	public native @Cast("btScalar") double m_wheelRadius(); public native btWheelInfoConstructionInfo m_wheelRadius(double setter);

	public native @Cast("btScalar") double m_suspensionStiffness(); public native btWheelInfoConstructionInfo m_suspensionStiffness(double setter);
	public native @Cast("btScalar") double m_wheelsDampingCompression(); public native btWheelInfoConstructionInfo m_wheelsDampingCompression(double setter);
	public native @Cast("btScalar") double m_wheelsDampingRelaxation(); public native btWheelInfoConstructionInfo m_wheelsDampingRelaxation(double setter);
	public native @Cast("btScalar") double m_frictionSlip(); public native btWheelInfoConstructionInfo m_frictionSlip(double setter);
	public native @Cast("btScalar") double m_maxSuspensionForce(); public native btWheelInfoConstructionInfo m_maxSuspensionForce(double setter);
	public native @Cast("bool") boolean m_bIsFrontWheel(); public native btWheelInfoConstructionInfo m_bIsFrontWheel(boolean setter);
}
