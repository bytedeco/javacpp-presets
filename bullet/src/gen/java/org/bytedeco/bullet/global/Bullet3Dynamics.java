// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.global;

import org.bytedeco.bullet.Bullet3Dynamics.*;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.Bullet3Common.*;
import static org.bytedeco.bullet.global.Bullet3Common.*;
import org.bytedeco.bullet.Bullet3Collision.*;
import static org.bytedeco.bullet.global.Bullet3Collision.*;

public class Bullet3Dynamics extends org.bytedeco.bullet.presets.Bullet3Dynamics {
    static { Loader.load(); }

// Parsed from Bullet3Common/b3AlignedObjectArray.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2013 Erwin Coumans  http://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it freely,
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

// #ifndef B3_OBJECT_ARRAY__
// #define B3_OBJECT_ARRAY__

// #include "b3Scalar.h"  // has definitions like B3_FORCE_INLINE
// #include "b3AlignedAllocator.h"

/**If the platform doesn't support placement new, you can disable B3_USE_PLACEMENT_NEW
 * then the b3AlignedObjectArray doesn't support objects with virtual methods, and non-trivial constructors/destructors
 * You can enable B3_USE_MEMCPY, then swapping elements in the array will use memcpy instead of operator=
 * see discussion here: https://bulletphysics.orgphpBB2/viewtopic.php?t=1231 and
 * http://www.continuousphysics.com/Bullet/phpBB2/viewtopic.php?t=1240 */

public static final int B3_USE_PLACEMENT_NEW = 1;
//#define B3_USE_MEMCPY 1 //disable, because it is cumbersome to find out for each platform where memcpy is defined. It can be in <memory.h> or <string.h> or otherwise...
// #define B3_ALLOW_ARRAY_COPY_OPERATOR  // enabling this can accidently perform deep copies of data if you are not careful

// #ifdef B3_USE_MEMCPY
// #include <memory.h>
// #include <string.h>
// #endif  //B3_USE_MEMCPY

// #ifdef B3_USE_PLACEMENT_NEW
// #include <new>
// Targeting ../Bullet3Dynamics/b3TypedConstraintArray.java



// #endif  //B3_OBJECT_ARRAY__


// Parsed from Bullet3Dynamics/ConstraintSolver/b3ContactSolverInfo.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2006 Erwin Coumans  https://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose, 
including commercial applications, and to alter it and redistribute it freely, 
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

// #ifndef B3_CONTACT_SOLVER_INFO
// #define B3_CONTACT_SOLVER_INFO

// #include "Bullet3Common/b3Scalar.h"

/** enum b3SolverMode */
public static final int
	B3_SOLVER_RANDMIZE_ORDER = 1,
	B3_SOLVER_FRICTION_SEPARATE = 2,
	B3_SOLVER_USE_WARMSTARTING = 4,
	B3_SOLVER_USE_2_FRICTION_DIRECTIONS = 16,
	B3_SOLVER_ENABLE_FRICTION_DIRECTION_CACHING = 32,
	B3_SOLVER_DISABLE_VELOCITY_DEPENDENT_FRICTION_DIRECTION = 64,
	B3_SOLVER_CACHE_FRIENDLY = 128,
	B3_SOLVER_SIMD = 256,
	B3_SOLVER_INTERLEAVE_CONTACT_AND_FRICTION_CONSTRAINTS = 512,
	B3_SOLVER_ALLOW_ZERO_LENGTH_FRICTION_DIRECTIONS = 1024;
// Targeting ../Bullet3Dynamics/b3ContactSolverInfoData.java


// Targeting ../Bullet3Dynamics/b3ContactSolverInfo.java


// Targeting ../Bullet3Dynamics/b3ContactSolverInfoDoubleData.java


// Targeting ../Bullet3Dynamics/b3ContactSolverInfoFloatData.java



// #endif  //B3_CONTACT_SOLVER_INFO


// Parsed from Bullet3Dynamics/ConstraintSolver/b3SolverBody.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2006 Erwin Coumans  https://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose, 
including commercial applications, and to alter it and redistribute it freely, 
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

// #ifndef B3_SOLVER_BODY_H
// #define B3_SOLVER_BODY_H

// #include "Bullet3Common/b3Vector3.h"
// #include "Bullet3Common/b3Matrix3x3.h"

// #include "Bullet3Common/b3AlignedAllocator.h"
// #include "Bullet3Common/b3TransformUtil.h"

/**Until we get other contributions, only use SIMD on Windows, when using Visual Studio 2008 or later, and not double precision */
// #ifdef B3_USE_SSE
// #endif  //

// #ifdef USE_SIMD

// #else
// #define b3SimdScalar b3Scalar
// Targeting ../Bullet3Dynamics/b3SolverBody.java



// #endif  //B3_SOLVER_BODY_H


// Parsed from Bullet3Dynamics/ConstraintSolver/b3SolverConstraint.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2006 Erwin Coumans  https://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose, 
including commercial applications, and to alter it and redistribute it freely, 
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

// #ifndef B3_SOLVER_CONSTRAINT_H
// #define B3_SOLVER_CONSTRAINT_H

// #include "Bullet3Common/b3Vector3.h"
// #include "Bullet3Common/b3Matrix3x3.h"
//#include "b3JacobianEntry.h"
// #include "Bullet3Common/b3AlignedObjectArray.h"

//#define NO_FRICTION_TANGENTIALS 1
// #include "b3SolverBody.h"
// Targeting ../Bullet3Dynamics/b3SolverConstraint.java



// #endif  //B3_SOLVER_CONSTRAINT_H


// Parsed from Bullet3Dynamics/ConstraintSolver/b3TypedConstraint.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2010 Erwin Coumans  https://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose, 
including commercial applications, and to alter it and redistribute it freely, 
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

// #ifndef B3_TYPED_CONSTRAINT_H
// #define B3_TYPED_CONSTRAINT_H

// #include "Bullet3Common/b3Scalar.h"
// #include "b3SolverConstraint.h"
// Targeting ../Bullet3Dynamics/b3Serializer.java



//Don't change any of the existing enum values, so add enum types at the end for serialization compatibility
/** enum b3TypedConstraintType */
public static final int
	B3_POINT2POINT_CONSTRAINT_TYPE = 3,
	B3_HINGE_CONSTRAINT_TYPE = 4,
	B3_CONETWIST_CONSTRAINT_TYPE = 5,
	B3_D6_CONSTRAINT_TYPE = 6,
	B3_SLIDER_CONSTRAINT_TYPE = 7,
	B3_CONTACT_CONSTRAINT_TYPE = 8,
	B3_D6_SPRING_CONSTRAINT_TYPE = 9,
	B3_GEAR_CONSTRAINT_TYPE = 10,
	B3_FIXED_CONSTRAINT_TYPE = 11,
	B3_MAX_CONSTRAINT_TYPE = 12;

/** enum b3ConstraintParams */
public static final int
	B3_CONSTRAINT_ERP = 1,
	B3_CONSTRAINT_STOP_ERP = 2,
	B3_CONSTRAINT_CFM = 3,
	B3_CONSTRAINT_STOP_CFM = 4;

// #if 1
// #define b3AssertConstrParams(_par) b3Assert(_par)
// #else
// #define b3AssertConstrParams(_par)
// Targeting ../Bullet3Dynamics/b3JointFeedback.java


// Targeting ../Bullet3Dynamics/b3TypedConstraint.java



// returns angle in range [-B3_2_PI, B3_2_PI], closest to one of the limits
// all arguments should be normalized angles (i.e. in range [-B3_PI, B3_PI])
public static native @Cast("b3Scalar") float b3AdjustAngleToLimits(@Cast("b3Scalar") float angleInRadians, @Cast("b3Scalar") float angleLowerLimitInRadians, @Cast("b3Scalar") float angleUpperLimitInRadians);
// Targeting ../Bullet3Dynamics/b3TypedConstraintData.java


// Targeting ../Bullet3Dynamics/b3AngularLimit.java



// #endif  //B3_TYPED_CONSTRAINT_H


// Parsed from Bullet3Dynamics/ConstraintSolver/b3FixedConstraint.h


// #ifndef B3_FIXED_CONSTRAINT_H
// #define B3_FIXED_CONSTRAINT_H

// #include "b3TypedConstraint.h"
// Targeting ../Bullet3Dynamics/b3FixedConstraint.java



// #endif  //B3_FIXED_CONSTRAINT_H


// Parsed from Bullet3Dynamics/ConstraintSolver/b3Generic6DofConstraint.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2006 Erwin Coumans  https://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it freely,
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

/** 2009 March: b3Generic6DofConstraint refactored by Roman Ponomarev
/** Added support for generic constraint solver through getInfo1/getInfo2 methods */

/*
2007-09-09
b3Generic6DofConstraint Refactored by Francisco Le?n
email: projectileman@yahoo.com
http://gimpact.sf.net
*/

// #ifndef B3_GENERIC_6DOF_CONSTRAINT_H
// #define B3_GENERIC_6DOF_CONSTRAINT_H

// #include "Bullet3Common/b3Vector3.h"
// #include "b3JacobianEntry.h"
// #include "b3TypedConstraint.h"
// Targeting ../Bullet3Dynamics/b3RotationalLimitMotor.java


// Targeting ../Bullet3Dynamics/b3TranslationalLimitMotor.java



/** enum b36DofFlags */
public static final int
	B3_6DOF_FLAGS_CFM_NORM = 1,
	B3_6DOF_FLAGS_CFM_STOP = 2,
	B3_6DOF_FLAGS_ERP_STOP = 4;
public static final int B3_6DOF_FLAGS_AXIS_SHIFT = 3;
// Targeting ../Bullet3Dynamics/b3Generic6DofConstraint.java



// #endif  //B3_GENERIC_6DOF_CONSTRAINT_H


// Parsed from Bullet3Dynamics/ConstraintSolver/b3JacobianEntry.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2006 Erwin Coumans  https://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose, 
including commercial applications, and to alter it and redistribute it freely, 
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

// #ifndef B3_JACOBIAN_ENTRY_H
// #define B3_JACOBIAN_ENTRY_H

// #include "Bullet3Common/b3Matrix3x3.h"
// Targeting ../Bullet3Dynamics/b3JacobianEntry.java



// #endif  //B3_JACOBIAN_ENTRY_H


// Parsed from Bullet3Dynamics/ConstraintSolver/b3PgsJacobiSolver.h

// #ifndef B3_PGS_JACOBI_SOLVER
// #define B3_PGS_JACOBI_SOLVER
// Targeting ../Bullet3Dynamics/b3ContactPoint.java


// Targeting ../Bullet3Dynamics/b3Dispatcher.java



// #include "b3TypedConstraint.h"
// #include "b3ContactSolverInfo.h"
// #include "b3SolverBody.h"
// #include "b3SolverConstraint.h"
// Targeting ../Bullet3Dynamics/b3PgsJacobiSolver.java



// #endif  //B3_PGS_JACOBI_SOLVER


// Parsed from Bullet3Dynamics/ConstraintSolver/b3Point2PointConstraint.h

/*
Bullet Continuous Collision Detection and Physics Library
Copyright (c) 2003-2006 Erwin Coumans  https://bulletphysics.org

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose, 
including commercial applications, and to alter it and redistribute it freely, 
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/

// #ifndef B3_POINT2POINTCONSTRAINT_H
// #define B3_POINT2POINTCONSTRAINT_H

// #include "Bullet3Common/b3Vector3.h"
//#include "b3JacobianEntry.h"
// #include "b3TypedConstraint.h"
// Targeting ../Bullet3Dynamics/b3RigidBody.java



// #ifdef B3_USE_DOUBLE_PRECISION
// #else
// #define b3Point2PointConstraintData b3Point2PointConstraintFloatData
public static final String b3Point2PointConstraintDataName = "b3Point2PointConstraintFloatData";
// Targeting ../Bullet3Dynamics/b3ConstraintSetting.java



/** enum b3Point2PointFlags */
public static final int
	B3_P2P_FLAGS_ERP = 1,
	B3_P2P_FLAGS_CFM = 2;
// Targeting ../Bullet3Dynamics/b3Point2PointConstraint.java


// Targeting ../Bullet3Dynamics/b3Point2PointConstraintFloatData.java


// Targeting ../Bullet3Dynamics/b3Point2PointConstraintDoubleData.java



/*
B3_FORCE_INLINE	int	b3Point2PointConstraint::calculateSerializeBufferSize() const
{
	return sizeof(b3Point2PointConstraintData);

}

	///fills the dataBuffer and returns the struct name (and 0 on failure)
B3_FORCE_INLINE	const char*	b3Point2PointConstraint::serialize(void* dataBuffer, b3Serializer* serializer) const
{
	b3Point2PointConstraintData* p2pData = (b3Point2PointConstraintData*)dataBuffer;

	b3TypedConstraint::serialize(&p2pData->m_typeConstraintData,serializer);
	m_pivotInA.serialize(p2pData->m_pivotInA);
	m_pivotInB.serialize(p2pData->m_pivotInB);

	return b3Point2PointConstraintDataName;
}
*/

// #endif  //B3_POINT2POINTCONSTRAINT_H


// Parsed from Bullet3Dynamics/shared/b3ContactConstraint4.h

// #ifndef B3_CONTACT_CONSTRAINT5_H
// #define B3_CONTACT_CONSTRAINT5_H

// #include "Bullet3Common/shared/b3Float4.h"
// Targeting ../Bullet3Dynamics/b3ContactConstraint4.java



//inline	void setFrictionCoeff(float value) { m_linear[3] = value; }
public static native float b3GetFrictionCoeff(b3ContactConstraint4 constraint);

// #endif  //B3_CONTACT_CONSTRAINT5_H


// Parsed from Bullet3Dynamics/shared/b3Inertia.h



// #ifndef B3_INERTIA_H
// #define B3_INERTIA_H

// #include "Bullet3Common/shared/b3Mat3x3.h"
// Targeting ../Bullet3Dynamics/b3Inertia.java



// #endif  //B3_INERTIA_H

// Parsed from Bullet3Dynamics/shared/b3IntegrateTransforms.h



// #include "Bullet3Collision/NarrowPhaseCollision/shared/b3RigidBodyData.h"

public static native void integrateSingleTransform(b3RigidBodyData bodies, int nodeID, float timeStep, float angularDamping, @Const @ByRef b3Vector3 gravityAcceleration);

public static native void b3IntegrateTransform(b3RigidBodyData body, float timeStep, float angularDamping, @Const @ByRef b3Vector3 gravityAcceleration);


// Parsed from Bullet3Dynamics/b3CpuRigidBodyPipeline.h

/*
Copyright (c) 2013 Advanced Micro Devices, Inc.  

This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the use of this software.
Permission is granted to anyone to use this software for any purpose, 
including commercial applications, and to alter it and redistribute it freely, 
subject to the following restrictions:

1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.
2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.
3. This notice may not be removed or altered from any source distribution.
*/
//Originally written by Erwin Coumans

// #ifndef B3_CPU_RIGIDBODY_PIPELINE_H
// #define B3_CPU_RIGIDBODY_PIPELINE_H

// #include "Bullet3Common/b3AlignedObjectArray.h"
// #include "Bullet3Collision/NarrowPhaseCollision/b3RaycastInfo.h"
// Targeting ../Bullet3Dynamics/b3CpuRigidBodyPipeline.java



// #endif  //B3_CPU_RIGIDBODY_PIPELINE_H

}
