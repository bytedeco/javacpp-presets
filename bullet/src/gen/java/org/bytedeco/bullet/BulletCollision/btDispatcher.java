// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


/**The btDispatcher interface class can be used in combination with broadphase to dispatch calculations for overlapping pairs.
 * For example for pairwise collision detection, calculating contact points stored in btPersistentManifold or user callbacks (game logic). */
@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btDispatcher extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btDispatcher(Pointer p) { super(p); }


	public native btCollisionAlgorithm findAlgorithm(@Const btCollisionObjectWrapper body0Wrap, @Const btCollisionObjectWrapper body1Wrap, btPersistentManifold sharedManifold, @Cast("ebtDispatcherQueryType") int queryType);

	public native btPersistentManifold getNewManifold(@Const btCollisionObject b0, @Const btCollisionObject b1);

	public native void releaseManifold(btPersistentManifold manifold);

	public native void clearManifold(btPersistentManifold manifold);

	public native @Cast("bool") boolean needsCollision(@Const btCollisionObject body0, @Const btCollisionObject body1);

	public native @Cast("bool") boolean needsResponse(@Const btCollisionObject body0, @Const btCollisionObject body1);

	public native void dispatchAllCollisionPairs(btOverlappingPairCache pairCache, @Const @ByRef btDispatcherInfo dispatchInfo, btDispatcher dispatcher);

	public native int getNumManifolds();

	public native btPersistentManifold getManifoldByIndexInternal(int index);

	public native @Cast("btPersistentManifold**") PointerPointer getInternalManifoldPointer();

	public native btPoolAllocator getInternalManifoldPool();

	public native Pointer allocateCollisionAlgorithm(int size);

	public native void freeCollisionAlgorithm(Pointer ptr);
}
