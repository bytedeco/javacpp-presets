// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


/** The btAxisSweep3 is an efficient implementation of the 3d axis sweep and prune broadphase.
 *  It uses arrays rather then lists for storage of the 3 axis. Also it operates using 16 bit integer coordinates instead of floats.
 *  For large worlds and many objects, use bt32BitAxisSweep3 or btDbvtBroadphase instead. bt32BitAxisSweep3 has higher precision and allows more then 16384 objects at the cost of more memory and bit of performance. */
@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btAxisSweep3 extends btBroadphaseInterface {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btAxisSweep3(Pointer p) { super(p); }

	public btAxisSweep3(@Const @ByRef btVector3 worldAabbMin, @Const @ByRef btVector3 worldAabbMax, @Cast("unsigned short int") short maxHandles/*=16384*/, btOverlappingPairCache pairCache/*=0*/, @Cast("bool") boolean disableRaycastAccelerator/*=false*/) { super((Pointer)null); allocate(worldAabbMin, worldAabbMax, maxHandles, pairCache, disableRaycastAccelerator); }
	private native void allocate(@Const @ByRef btVector3 worldAabbMin, @Const @ByRef btVector3 worldAabbMax, @Cast("unsigned short int") short maxHandles/*=16384*/, btOverlappingPairCache pairCache/*=0*/, @Cast("bool") boolean disableRaycastAccelerator/*=false*/);
	public btAxisSweep3(@Const @ByRef btVector3 worldAabbMin, @Const @ByRef btVector3 worldAabbMax) { super((Pointer)null); allocate(worldAabbMin, worldAabbMax); }
	private native void allocate(@Const @ByRef btVector3 worldAabbMin, @Const @ByRef btVector3 worldAabbMax);
}
