// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


/*
//comparison for set operation, see Solid DT_Encounter
SIMD_FORCE_INLINE bool operator<(const btBroadphasePair& a, const btBroadphasePair& b) 
{ 
    return a.m_pProxy0 < b.m_pProxy0 || 
        (a.m_pProxy0 == b.m_pProxy0 && a.m_pProxy1 < b.m_pProxy1); 
}
*/

@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btBroadphasePairSortPredicate extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btBroadphasePairSortPredicate() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btBroadphasePairSortPredicate(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btBroadphasePairSortPredicate(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btBroadphasePairSortPredicate position(long position) {
        return (btBroadphasePairSortPredicate)super.position(position);
    }
    @Override public btBroadphasePairSortPredicate getPointer(long i) {
        return new btBroadphasePairSortPredicate((Pointer)this).offsetAddress(i);
    }

	public native @Cast("bool") @Name("operator ()") boolean apply(@Const @ByRef btBroadphasePair a, @Const @ByRef btBroadphasePair b);
}
