// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btQuantizedBvhDoubleData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btQuantizedBvhDoubleData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btQuantizedBvhDoubleData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btQuantizedBvhDoubleData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btQuantizedBvhDoubleData position(long position) {
        return (btQuantizedBvhDoubleData)super.position(position);
    }
    @Override public btQuantizedBvhDoubleData getPointer(long i) {
        return new btQuantizedBvhDoubleData((Pointer)this).offsetAddress(i);
    }

	public native @ByRef btVector3DoubleData m_bvhAabbMin(); public native btQuantizedBvhDoubleData m_bvhAabbMin(btVector3DoubleData setter);
	public native @ByRef btVector3DoubleData m_bvhAabbMax(); public native btQuantizedBvhDoubleData m_bvhAabbMax(btVector3DoubleData setter);
	public native @ByRef btVector3DoubleData m_bvhQuantization(); public native btQuantizedBvhDoubleData m_bvhQuantization(btVector3DoubleData setter);
	public native int m_curNodeIndex(); public native btQuantizedBvhDoubleData m_curNodeIndex(int setter);
	public native int m_useQuantization(); public native btQuantizedBvhDoubleData m_useQuantization(int setter);
	public native int m_numContiguousLeafNodes(); public native btQuantizedBvhDoubleData m_numContiguousLeafNodes(int setter);
	public native int m_numQuantizedContiguousNodes(); public native btQuantizedBvhDoubleData m_numQuantizedContiguousNodes(int setter);
	public native btOptimizedBvhNodeDoubleData m_contiguousNodesPtr(); public native btQuantizedBvhDoubleData m_contiguousNodesPtr(btOptimizedBvhNodeDoubleData setter);
	public native btQuantizedBvhNodeData m_quantizedContiguousNodesPtr(); public native btQuantizedBvhDoubleData m_quantizedContiguousNodesPtr(btQuantizedBvhNodeData setter);

	public native int m_traversalMode(); public native btQuantizedBvhDoubleData m_traversalMode(int setter);
	public native int m_numSubtreeHeaders(); public native btQuantizedBvhDoubleData m_numSubtreeHeaders(int setter);
	public native btBvhSubtreeInfoData m_subTreeInfoPtr(); public native btQuantizedBvhDoubleData m_subTreeInfoPtr(btBvhSubtreeInfoData setter);
}
