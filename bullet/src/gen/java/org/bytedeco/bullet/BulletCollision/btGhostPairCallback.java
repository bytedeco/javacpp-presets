// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


/**The btGhostPairCallback interfaces and forwards adding and removal of overlapping pairs from the btBroadphaseInterface to btGhostObject. */
@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btGhostPairCallback extends btOverlappingPairCallback {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btGhostPairCallback(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btGhostPairCallback(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public btGhostPairCallback position(long position) {
        return (btGhostPairCallback)super.position(position);
    }
    @Override public btGhostPairCallback getPointer(long i) {
        return new btGhostPairCallback((Pointer)this).offsetAddress(i);
    }

	public btGhostPairCallback() { super((Pointer)null); allocate(); }
	private native void allocate();

	public native btBroadphasePair addOverlappingPair(btBroadphaseProxy proxy0, btBroadphaseProxy proxy1);

	public native Pointer removeOverlappingPair(btBroadphaseProxy proxy0, btBroadphaseProxy proxy1, btDispatcher dispatcher);

	public native void removeOverlappingPairsContainingProxy(btBroadphaseProxy arg0, btDispatcher arg1);
}
