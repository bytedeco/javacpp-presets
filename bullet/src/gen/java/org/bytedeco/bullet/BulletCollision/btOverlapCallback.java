// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btOverlapCallback extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btOverlapCallback() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btOverlapCallback(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btOverlapCallback(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btOverlapCallback position(long position) {
        return (btOverlapCallback)super.position(position);
    }
    @Override public btOverlapCallback getPointer(long i) {
        return new btOverlapCallback((Pointer)this).offsetAddress(i);
    }

	//return true for deletion of the pair
	@Virtual(true) public native @Cast("bool") boolean processOverlap(@ByRef btBroadphasePair pair);
}
