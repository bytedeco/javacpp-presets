// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btShortIntIndexData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btShortIntIndexData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btShortIntIndexData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btShortIntIndexData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btShortIntIndexData position(long position) {
        return (btShortIntIndexData)super.position(position);
    }
    @Override public btShortIntIndexData getPointer(long i) {
        return new btShortIntIndexData((Pointer)this).offsetAddress(i);
    }

	public native short m_value(); public native btShortIntIndexData m_value(short setter);
	public native @Cast("char") byte m_pad(int i); public native btShortIntIndexData m_pad(int i, byte setter);
	@MemberGetter public native @Cast("char*") BytePointer m_pad();
}
