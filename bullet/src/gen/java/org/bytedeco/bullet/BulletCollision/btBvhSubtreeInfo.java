// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


/**btBvhSubtreeInfo provides info to gather a subtree of limited size */
@NoOffset @Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btBvhSubtreeInfo extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btBvhSubtreeInfo(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btBvhSubtreeInfo(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public btBvhSubtreeInfo position(long position) {
        return (btBvhSubtreeInfo)super.position(position);
    }
    @Override public btBvhSubtreeInfo getPointer(long i) {
        return new btBvhSubtreeInfo((Pointer)this).offsetAddress(i);
    }


	//12 bytes
	public native @Cast("unsigned short int") short m_quantizedAabbMin(int i); public native btBvhSubtreeInfo m_quantizedAabbMin(int i, short setter);
	@MemberGetter public native @Cast("unsigned short int*") ShortPointer m_quantizedAabbMin();
	public native @Cast("unsigned short int") short m_quantizedAabbMax(int i); public native btBvhSubtreeInfo m_quantizedAabbMax(int i, short setter);
	@MemberGetter public native @Cast("unsigned short int*") ShortPointer m_quantizedAabbMax();
	//4 bytes, points to the root of the subtree
	public native int m_rootNodeIndex(); public native btBvhSubtreeInfo m_rootNodeIndex(int setter);
	//4 bytes
	public native int m_subtreeSize(); public native btBvhSubtreeInfo m_subtreeSize(int setter);
	public native int m_padding(int i); public native btBvhSubtreeInfo m_padding(int i, int setter);
	@MemberGetter public native IntPointer m_padding();

	public btBvhSubtreeInfo() { super((Pointer)null); allocate(); }
	private native void allocate();

	public native void setAabbFromQuantizeNode(@Const @ByRef btQuantizedBvhNode quantizedNode);
}
