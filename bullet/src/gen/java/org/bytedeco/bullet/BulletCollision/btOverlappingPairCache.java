// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletCollision;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;

import static org.bytedeco.bullet.global.BulletCollision.*;


/**The btOverlappingPairCache provides an interface for overlapping pair management (add, remove, storage), used by the btBroadphaseInterface broadphases.
 * The btHashedOverlappingPairCache and btSortedOverlappingPairCache classes are two implementations. */
@Properties(inherit = org.bytedeco.bullet.presets.BulletCollision.class)
public class btOverlappingPairCache extends btOverlappingPairCallback {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btOverlappingPairCache(Pointer p) { super(p); }
  // this is needed so we can get to the derived class destructor

	public native btBroadphasePair getOverlappingPairArrayPtr();

	public native @Cast("btBroadphasePairArray*") @ByRef BT_QUANTIZED_BVH_NODE_Array getOverlappingPairArray();

	public native void cleanOverlappingPair(@ByRef btBroadphasePair pair, btDispatcher dispatcher);

	public native int getNumOverlappingPairs();
	public native @Cast("bool") boolean needsBroadphaseCollision(btBroadphaseProxy proxy0, btBroadphaseProxy proxy1);
	public native btOverlapFilterCallback getOverlapFilterCallback();
	public native void cleanProxyFromPairs(btBroadphaseProxy proxy, btDispatcher dispatcher);

	public native void setOverlapFilterCallback(btOverlapFilterCallback callback);

	public native void processAllOverlappingPairs(btOverlapCallback arg0, btDispatcher dispatcher);

	public native void processAllOverlappingPairs(btOverlapCallback callback, btDispatcher dispatcher, @Const @ByRef btDispatcherInfo arg2);
	public native btBroadphasePair findPair(btBroadphaseProxy proxy0, btBroadphaseProxy proxy1);

	public native @Cast("bool") boolean hasDeferredRemoval();

	public native void setInternalGhostPairCallback(btOverlappingPairCallback ghostPairCallback);

	public native void sortOverlappingPairs(btDispatcher dispatcher);
}
