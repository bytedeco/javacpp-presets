// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


@NoOffset @Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class btDeformableCorotatedForce extends btDeformableLagrangianForce {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btDeformableCorotatedForce(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btDeformableCorotatedForce(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public btDeformableCorotatedForce position(long position) {
        return (btDeformableCorotatedForce)super.position(position);
    }
    @Override public btDeformableCorotatedForce getPointer(long i) {
        return new btDeformableCorotatedForce((Pointer)this).offsetAddress(i);
    }

	public native @Cast("btScalar") float m_mu(); public native btDeformableCorotatedForce m_mu(float setter);
	public native @Cast("btScalar") float m_lambda(); public native btDeformableCorotatedForce m_lambda(float setter);
	public btDeformableCorotatedForce() { super((Pointer)null); allocate(); }
	private native void allocate();

	public btDeformableCorotatedForce(@Cast("btScalar") float mu, @Cast("btScalar") float lambda) { super((Pointer)null); allocate(mu, lambda); }
	private native void allocate(@Cast("btScalar") float mu, @Cast("btScalar") float lambda);

	public native void addScaledForces(@Cast("btScalar") float scale, @Cast("btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array force);

	public native void addScaledExplicitForce(@Cast("btScalar") float scale, @Cast("btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array force);

	public native void addScaledDampingForce(@Cast("btScalar") float scale, @Cast("btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array force);

	public native void addScaledElasticForce(@Cast("btScalar") float scale, @Cast("btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array force);

	public native void firstPiola(@Const @ByRef btMatrix3x3 F, @ByRef btMatrix3x3 P);

	public native void addScaledElasticForceDifferential(@Cast("btScalar") float scale, @Cast("const btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array dx, @Cast("btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array df);

	public native void addScaledDampingForceDifferential(@Cast("btScalar") float scale, @Cast("const btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array dv, @Cast("btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array df);

	public native void buildDampingForceDifferentialDiagonal(@Cast("btScalar") float scale, @Cast("btDeformableCorotatedForce::TVStack*") @ByRef btVector3Array diagA);

	public native @Cast("btDeformableLagrangianForceType") int getForceType();
}
