// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


@NoOffset @Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class btVertexBufferDescriptor extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btVertexBufferDescriptor(Pointer p) { super(p); }

	public enum BufferTypes {
		CPU_BUFFER(0),
		DX11_BUFFER(1),
		OPENGL_BUFFER(2);

	    public final int value;
	    private BufferTypes(int v) { this.value = v; }
	    private BufferTypes(BufferTypes e) { this.value = e.value; }
	    public BufferTypes intern() { for (BufferTypes e : values()) if (e.value == value) return e; return this; }
	    @Override public String toString() { return intern().name(); }
	}

	public native @Cast("bool") boolean hasVertexPositions();

	public native @Cast("bool") boolean hasNormals();

	/**
	 * Return the type of the vertex buffer descriptor.
	 */
	public native BufferTypes getBufferType();

	/**
	 * Return the vertex offset in floats from the base pointer.
	 */
	public native int getVertexOffset();

	/**
	 * Return the vertex stride in number of floats between vertices.
	 */
	public native int getVertexStride();

	/**
	 * Return the vertex offset in floats from the base pointer.
	 */
	public native int getNormalOffset();

	/**
	 * Return the vertex stride in number of floats between vertices.
	 */
	public native int getNormalStride();
}
