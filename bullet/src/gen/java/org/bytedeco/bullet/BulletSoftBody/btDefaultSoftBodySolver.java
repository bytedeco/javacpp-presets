// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


@NoOffset @Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class btDefaultSoftBodySolver extends btSoftBodySolver {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btDefaultSoftBodySolver(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btDefaultSoftBodySolver(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public btDefaultSoftBodySolver position(long position) {
        return (btDefaultSoftBodySolver)super.position(position);
    }
    @Override public btDefaultSoftBodySolver getPointer(long i) {
        return new btDefaultSoftBodySolver((Pointer)this).offsetAddress(i);
    }

	public btDefaultSoftBodySolver() { super((Pointer)null); allocate(); }
	private native void allocate();

	public native @ByVal SolverTypes getSolverType();

	public native @Cast("bool") boolean checkInitialized();

	public native void updateSoftBodies();

	public native void optimize(@ByRef btSoftBodyArray softBodies, @Cast("bool") boolean forceUpdate/*=false*/);
	public native void optimize(@ByRef btSoftBodyArray softBodies);

	public native void copyBackToSoftBodies(@Cast("bool") boolean bMove/*=true*/);
	public native void copyBackToSoftBodies();

	public native void solveConstraints(@Cast("btScalar") double solverdt);

	public native void predictMotion(@Cast("btScalar") double solverdt);

	public native void copySoftBodyToVertexBuffer(@Const btSoftBody softBody, btVertexBufferDescriptor vertexBuffer);

	public native void processCollision(btSoftBody arg0, @Const btCollisionObjectWrapper arg1);

	public native void processCollision(btSoftBody arg0, btSoftBody arg1);
}
