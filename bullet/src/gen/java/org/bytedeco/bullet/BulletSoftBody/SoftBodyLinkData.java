// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


@Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class SoftBodyLinkData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public SoftBodyLinkData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public SoftBodyLinkData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public SoftBodyLinkData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public SoftBodyLinkData position(long position) {
        return (SoftBodyLinkData)super.position(position);
    }
    @Override public SoftBodyLinkData getPointer(long i) {
        return new SoftBodyLinkData((Pointer)this).offsetAddress(i);
    }

	public native SoftBodyMaterialData m_material(); public native SoftBodyLinkData m_material(SoftBodyMaterialData setter);
	public native int m_nodeIndices(int i); public native SoftBodyLinkData m_nodeIndices(int i, int setter);
	@MemberGetter public native IntPointer m_nodeIndices();  // Node pointers
	public native float m_restLength(); public native SoftBodyLinkData m_restLength(float setter);    // Rest length
	public native int m_bbending(); public native SoftBodyLinkData m_bbending(int setter);        // Bending link
}
