// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


/**do not change those serialization structures, it requires an updated sBulletDNAstr/sBulletDNAstr64 */
@Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class btSoftBodyFloatData extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btSoftBodyFloatData() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btSoftBodyFloatData(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btSoftBodyFloatData(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btSoftBodyFloatData position(long position) {
        return (btSoftBodyFloatData)super.position(position);
    }
    @Override public btSoftBodyFloatData getPointer(long i) {
        return new btSoftBodyFloatData((Pointer)this).offsetAddress(i);
    }

	public native @ByRef btCollisionObjectFloatData m_collisionObjectData(); public native btSoftBodyFloatData m_collisionObjectData(btCollisionObjectFloatData setter);

	public native SoftBodyPoseData m_pose(); public native btSoftBodyFloatData m_pose(SoftBodyPoseData setter);
	public native SoftBodyMaterialData m_materials(int i); public native btSoftBodyFloatData m_materials(int i, SoftBodyMaterialData setter);
	public native @Cast("SoftBodyMaterialData**") PointerPointer m_materials(); public native btSoftBodyFloatData m_materials(PointerPointer setter);
	public native SoftBodyNodeData m_nodes(); public native btSoftBodyFloatData m_nodes(SoftBodyNodeData setter);
	public native SoftBodyLinkData m_links(); public native btSoftBodyFloatData m_links(SoftBodyLinkData setter);
	public native SoftBodyFaceData m_faces(); public native btSoftBodyFloatData m_faces(SoftBodyFaceData setter);
	public native SoftBodyTetraData m_tetrahedra(); public native btSoftBodyFloatData m_tetrahedra(SoftBodyTetraData setter);
	public native SoftRigidAnchorData m_anchors(); public native btSoftBodyFloatData m_anchors(SoftRigidAnchorData setter);
	public native SoftBodyClusterData m_clusters(); public native btSoftBodyFloatData m_clusters(SoftBodyClusterData setter);
	public native btSoftBodyJointData m_joints(); public native btSoftBodyFloatData m_joints(btSoftBodyJointData setter);

	public native int m_numMaterials(); public native btSoftBodyFloatData m_numMaterials(int setter);
	public native int m_numNodes(); public native btSoftBodyFloatData m_numNodes(int setter);
	public native int m_numLinks(); public native btSoftBodyFloatData m_numLinks(int setter);
	public native int m_numFaces(); public native btSoftBodyFloatData m_numFaces(int setter);
	public native int m_numTetrahedra(); public native btSoftBodyFloatData m_numTetrahedra(int setter);
	public native int m_numAnchors(); public native btSoftBodyFloatData m_numAnchors(int setter);
	public native int m_numClusters(); public native btSoftBodyFloatData m_numClusters(int setter);
	public native int m_numJoints(); public native btSoftBodyFloatData m_numJoints(int setter);
	public native @ByRef SoftBodyConfigData m_config(); public native btSoftBodyFloatData m_config(SoftBodyConfigData setter);
}
