// Targeted by JavaCPP version 1.5.8-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


@NoOffset @Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class btDeformableMousePickingForce extends btDeformableLagrangianForce {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btDeformableMousePickingForce(Pointer p) { super(p); }

	public btDeformableMousePickingForce(@Cast("btScalar") float k, @Cast("btScalar") float d, @Const @ByRef btSoftBody.Face face, @Const @ByRef btVector3 mouse_pos, @Cast("btScalar") float maxForce/*=0.3*/) { super((Pointer)null); allocate(k, d, face, mouse_pos, maxForce); }
	private native void allocate(@Cast("btScalar") float k, @Cast("btScalar") float d, @Const @ByRef btSoftBody.Face face, @Const @ByRef btVector3 mouse_pos, @Cast("btScalar") float maxForce/*=0.3*/);
	public btDeformableMousePickingForce(@Cast("btScalar") float k, @Cast("btScalar") float d, @Const @ByRef btSoftBody.Face face, @Const @ByRef btVector3 mouse_pos) { super((Pointer)null); allocate(k, d, face, mouse_pos); }
	private native void allocate(@Cast("btScalar") float k, @Cast("btScalar") float d, @Const @ByRef btSoftBody.Face face, @Const @ByRef btVector3 mouse_pos);

	public native void addScaledForces(@Cast("btScalar") float scale, @Cast("btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array force);

	public native void addScaledExplicitForce(@Cast("btScalar") float scale, @Cast("btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array force);

	public native void addScaledDampingForce(@Cast("btScalar") float scale, @Cast("btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array force);

	public native void addScaledElasticForce(@Cast("btScalar") float scale, @Cast("btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array force);

	public native void addScaledDampingForceDifferential(@Cast("btScalar") float scale, @Cast("const btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array dv, @Cast("btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array df);

	public native void buildDampingForceDifferentialDiagonal(@Cast("btScalar") float scale, @Cast("btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array diagA);

	public native double totalElasticEnergy(@Cast("btScalar") float dt);

	public native double totalDampingEnergy(@Cast("btScalar") float dt);

	public native void addScaledElasticForceDifferential(@Cast("btScalar") float scale, @Cast("const btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array dx, @Cast("btDeformableMousePickingForce::TVStack*") @ByRef btVector3Array df);

	public native void setMousePos(@Const @ByRef btVector3 p);

	public native @Cast("btDeformableLagrangianForceType") int getForceType();
}
