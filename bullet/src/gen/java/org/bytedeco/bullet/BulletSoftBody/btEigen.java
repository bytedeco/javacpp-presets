// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


//
// btEigen : Extract eigen system,
// straitforward implementation of http://math.fullerton.edu/mathews/n2003/JacobiMethodMod.html
// outputs are NOT sorted.
//
@Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class btEigen extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btEigen() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btEigen(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btEigen(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btEigen position(long position) {
        return (btEigen)super.position(position);
    }
    @Override public btEigen getPointer(long i) {
        return new btEigen((Pointer)this).offsetAddress(i);
    }

	public static native int system(@ByRef btMatrix3x3 a, btMatrix3x3 vectors, btVector3 values/*=0*/);
	public static native int system(@ByRef btMatrix3x3 a, btMatrix3x3 vectors);
}
