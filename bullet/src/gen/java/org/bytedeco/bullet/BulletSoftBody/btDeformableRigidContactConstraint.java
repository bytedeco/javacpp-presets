// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.BulletSoftBody;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.bullet.LinearMath.*;
import static org.bytedeco.bullet.global.LinearMath.*;
import org.bytedeco.bullet.BulletCollision.*;
import static org.bytedeco.bullet.global.BulletCollision.*;
import org.bytedeco.bullet.BulletDynamics.*;
import static org.bytedeco.bullet.global.BulletDynamics.*;

import static org.bytedeco.bullet.global.BulletSoftBody.*;


//
// Constraint between rigid/multi body and deformable objects
@NoOffset @Properties(inherit = org.bytedeco.bullet.presets.BulletSoftBody.class)
public class btDeformableRigidContactConstraint extends btDeformableContactConstraint {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btDeformableRigidContactConstraint(Pointer p) { super(p); }

	public native @ByRef btVector3 m_total_normal_dv(); public native btDeformableRigidContactConstraint m_total_normal_dv(btVector3 setter);
	public native @ByRef btVector3 m_total_tangent_dv(); public native btDeformableRigidContactConstraint m_total_tangent_dv(btVector3 setter);
	public native @Cast("btScalar") double m_penetration(); public native btDeformableRigidContactConstraint m_penetration(double setter);
	public native @Cast("btScalar") double m_total_split_impulse(); public native btDeformableRigidContactConstraint m_total_split_impulse(double setter);
	public native @Cast("bool") boolean m_binding(); public native btDeformableRigidContactConstraint m_binding(boolean setter);
	public native @Const btSoftBody.DeformableRigidContact m_contact(); public native btDeformableRigidContactConstraint m_contact(btSoftBody.DeformableRigidContact setter);

	// object A is the rigid/multi body, and object B is the deformable node/face
	public native @ByVal btVector3 getVa();

	// get the split impulse velocity of the deformable face at the contact point
	public native @ByVal btVector3 getSplitVb();

	// get the split impulse velocity of the rigid/multibdoy at the contaft
	public native @ByVal btVector3 getSplitVa();

	public native @Cast("btScalar") double solveConstraint(@Const @ByRef btContactSolverInfo infoGlobal);

	public native void setPenetrationScale(@Cast("btScalar") double scale);

	public native @Cast("btScalar") double solveSplitImpulse(@Const @ByRef btContactSolverInfo infoGlobal);

	public native void applySplitImpulse(@Const @ByRef btVector3 impulse);
}
