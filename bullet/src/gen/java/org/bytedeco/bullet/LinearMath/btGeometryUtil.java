// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.bullet.LinearMath;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.bullet.global.LinearMath.*;


/**The btGeometryUtil helper class provides a few methods to convert between plane equations and vertices. */
@Properties(inherit = org.bytedeco.bullet.presets.LinearMath.class)
public class btGeometryUtil extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public btGeometryUtil() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public btGeometryUtil(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public btGeometryUtil(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public btGeometryUtil position(long position) {
        return (btGeometryUtil)super.position(position);
    }
    @Override public btGeometryUtil getPointer(long i) {
        return new btGeometryUtil((Pointer)this).offsetAddress(i);
    }

	public static native void getPlaneEquationsFromVertices(@ByRef btVector3Array vertices, @ByRef btVector3Array planeEquationsOut);

	public static native void getVerticesFromPlaneEquations(@Const @ByRef btVector3Array planeEquations, @ByRef btVector3Array verticesOut);

	

	public static native @Cast("bool") boolean isPointInsidePlanes(@Const @ByRef btVector3Array planeEquations, @Const @ByRef btVector3 point, @Cast("btScalar") double margin);

	public static native @Cast("bool") boolean areVerticesBehindPlane(@Const @ByRef btVector3 planeNormal, @Const @ByRef btVector3Array vertices, @Cast("btScalar") double margin);
}
