// Targeted by JavaCPP version 1.4.2-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.javacpp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.openblas.*;

public class arpack extends org.bytedeco.javacpp.presets.arpack {
    static { Loader.load(); }

// Parsed from arpack.hpp

// #ifndef __ARPACK_HPP__
// #define __ARPACK_HPP__

public static native void ssaupd_c(@ByRef IntPointer ido, @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         float tol, FloatPointer resid, int ncv, FloatPointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, FloatPointer workd,
                         FloatPointer workl, int lworkl, @ByRef IntPointer info);
public static native void ssaupd_c(@ByRef IntBuffer ido, @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         float tol, FloatBuffer resid, int ncv, FloatBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, FloatBuffer workd,
                         FloatBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void ssaupd_c(@ByRef int[] ido, @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         float tol, float[] resid, int ncv, float[] v,
                         int ldv, int[] iparam, int[] ipntr, float[] workd,
                         float[] workl, int lworkl, @ByRef int[] info);

public static native void sseupd_c(@Cast("bool") boolean rvec, @Cast("char*") BytePointer howmny, IntPointer select, FloatPointer d, FloatPointer z, int ldz, float sigma,
                         @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         float tol, FloatPointer resid, int ncv, FloatPointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, FloatPointer workd,
                         FloatPointer workl, int lworkl, @ByRef IntPointer info);
public static native void sseupd_c(@Cast("bool") boolean rvec, @Cast("char*") ByteBuffer howmny, IntBuffer select, FloatBuffer d, FloatBuffer z, int ldz, float sigma,
                         @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         float tol, FloatBuffer resid, int ncv, FloatBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, FloatBuffer workd,
                         FloatBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void sseupd_c(@Cast("bool") boolean rvec, @Cast("char*") byte[] howmny, int[] select, float[] d, float[] z, int ldz, float sigma,
                         @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         float tol, float[] resid, int ncv, float[] v,
                         int ldv, int[] iparam, int[] ipntr, float[] workd,
                         float[] workl, int lworkl, @ByRef int[] info);

public static native void dsaupd_c(@ByRef IntPointer ido, @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         double tol, DoublePointer resid, int ncv, DoublePointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, DoublePointer workd,
                         DoublePointer workl, int lworkl, @ByRef IntPointer info);
public static native void dsaupd_c(@ByRef IntBuffer ido, @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         double tol, DoubleBuffer resid, int ncv, DoubleBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, DoubleBuffer workd,
                         DoubleBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void dsaupd_c(@ByRef int[] ido, @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         double tol, double[] resid, int ncv, double[] v,
                         int ldv, int[] iparam, int[] ipntr, double[] workd,
                         double[] workl, int lworkl, @ByRef int[] info);

public static native void dseupd_c(@Cast("bool") boolean rvec, @Cast("char*") BytePointer howmny, IntPointer select, DoublePointer d, DoublePointer z, int ldz, double sigma,
                         @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         double tol, DoublePointer resid, int ncv, DoublePointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, DoublePointer workd,
                         DoublePointer workl, int lworkl, @ByRef IntPointer info);
public static native void dseupd_c(@Cast("bool") boolean rvec, @Cast("char*") ByteBuffer howmny, IntBuffer select, DoubleBuffer d, DoubleBuffer z, int ldz, double sigma,
                         @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         double tol, DoubleBuffer resid, int ncv, DoubleBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, DoubleBuffer workd,
                         DoubleBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void dseupd_c(@Cast("bool") boolean rvec, @Cast("char*") byte[] howmny, int[] select, double[] d, double[] z, int ldz, double sigma,
                         @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         double tol, double[] resid, int ncv, double[] v,
                         int ldv, int[] iparam, int[] ipntr, double[] workd,
                         double[] workl, int lworkl, @ByRef int[] info);

public static native void snaupd_c(@ByRef IntPointer ido, @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         float tol, FloatPointer resid, int ncv, FloatPointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, FloatPointer workd,
                         FloatPointer workl, int lworkl, @ByRef IntPointer info);
public static native void snaupd_c(@ByRef IntBuffer ido, @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         float tol, FloatBuffer resid, int ncv, FloatBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, FloatBuffer workd,
                         FloatBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void snaupd_c(@ByRef int[] ido, @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         float tol, float[] resid, int ncv, float[] v,
                         int ldv, int[] iparam, int[] ipntr, float[] workd,
                         float[] workl, int lworkl, @ByRef int[] info);

public static native void sneupd_c(@Cast("bool") boolean rvec, @Cast("char*") BytePointer howmny, IntPointer select, FloatPointer dr, FloatPointer di, FloatPointer z, int ldz, float sigmar, float sigmai,
                         @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         float tol, FloatPointer resid, int ncv, FloatPointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, FloatPointer workd,
                         FloatPointer workl, int lworkl, @ByRef IntPointer info);
public static native void sneupd_c(@Cast("bool") boolean rvec, @Cast("char*") ByteBuffer howmny, IntBuffer select, FloatBuffer dr, FloatBuffer di, FloatBuffer z, int ldz, float sigmar, float sigmai,
                         @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         float tol, FloatBuffer resid, int ncv, FloatBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, FloatBuffer workd,
                         FloatBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void sneupd_c(@Cast("bool") boolean rvec, @Cast("char*") byte[] howmny, int[] select, float[] dr, float[] di, float[] z, int ldz, float sigmar, float sigmai,
                         @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         float tol, float[] resid, int ncv, float[] v,
                         int ldv, int[] iparam, int[] ipntr, float[] workd,
                         float[] workl, int lworkl, @ByRef int[] info);

public static native void dnaupd_c(@ByRef IntPointer ido, @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         double tol, DoublePointer resid, int ncv, DoublePointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, DoublePointer workd,
                         DoublePointer workl, int lworkl, @ByRef IntPointer info);
public static native void dnaupd_c(@ByRef IntBuffer ido, @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         double tol, DoubleBuffer resid, int ncv, DoubleBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, DoubleBuffer workd,
                         DoubleBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void dnaupd_c(@ByRef int[] ido, @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         double tol, double[] resid, int ncv, double[] v,
                         int ldv, int[] iparam, int[] ipntr, double[] workd,
                         double[] workl, int lworkl, @ByRef int[] info);

public static native void dneupd_c(@Cast("bool") boolean rvec, @Cast("char*") BytePointer howmny, IntPointer select, DoublePointer dr, DoublePointer di, DoublePointer z, int ldz, double sigmar, double sigmai,
                         @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         double tol, DoublePointer resid, int ncv, DoublePointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, DoublePointer workd,
                         DoublePointer workl, int lworkl, @ByRef IntPointer info);
public static native void dneupd_c(@Cast("bool") boolean rvec, @Cast("char*") ByteBuffer howmny, IntBuffer select, DoubleBuffer dr, DoubleBuffer di, DoubleBuffer z, int ldz, double sigmar, double sigmai,
                         @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         double tol, DoubleBuffer resid, int ncv, DoubleBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, DoubleBuffer workd,
                         DoubleBuffer workl, int lworkl, @ByRef IntBuffer info);
public static native void dneupd_c(@Cast("bool") boolean rvec, @Cast("char*") byte[] howmny, int[] select, double[] dr, double[] di, double[] z, int ldz, double sigmar, double sigmai,
                         @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         double tol, double[] resid, int ncv, double[] v,
                         int ldv, int[] iparam, int[] ipntr, double[] workd,
                         double[] workl, int lworkl, @ByRef int[] info);

public static native void cnaupd_c(@ByRef IntPointer ido, @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         float tol, @Cast("float _Complex*") FloatPointer resid, int ncv, @Cast("float _Complex*") FloatPointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, @Cast("float _Complex*") FloatPointer workd,
                         @Cast("float _Complex*") FloatPointer workl, int lworkl, @Cast("float _Complex*") FloatPointer rwork, @ByRef IntPointer info);
public static native void cnaupd_c(@ByRef IntBuffer ido, @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         float tol, @Cast("float _Complex*") FloatBuffer resid, int ncv, @Cast("float _Complex*") FloatBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, @Cast("float _Complex*") FloatBuffer workd,
                         @Cast("float _Complex*") FloatBuffer workl, int lworkl, @Cast("float _Complex*") FloatBuffer rwork, @ByRef IntBuffer info);
public static native void cnaupd_c(@ByRef int[] ido, @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         float tol, @Cast("float _Complex*") float[] resid, int ncv, @Cast("float _Complex*") float[] v,
                         int ldv, int[] iparam, int[] ipntr, @Cast("float _Complex*") float[] workd,
                         @Cast("float _Complex*") float[] workl, int lworkl, @Cast("float _Complex*") float[] rwork, @ByRef int[] info);

public static native void cneupd_c(@Cast("bool") boolean rvec, @Cast("char*") BytePointer howmny, IntPointer select,
                         @Cast("float _Complex*") FloatPointer d, @Cast("float _Complex*") FloatPointer z, int ldz, @ByVal @Cast("float _Complex*") FloatPointer sigma, @Cast("float _Complex*") FloatPointer workev,
                         @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         float tol, @Cast("float _Complex*") FloatPointer resid, int ncv, @Cast("float _Complex*") FloatPointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, @Cast("float _Complex*") FloatPointer workd,
                         @Cast("float _Complex*") FloatPointer workl, int lworkl, @Cast("float _Complex*") FloatPointer rwork, @ByRef IntPointer info);
public static native void cneupd_c(@Cast("bool") boolean rvec, @Cast("char*") ByteBuffer howmny, IntBuffer select,
                         @Cast("float _Complex*") FloatBuffer d, @Cast("float _Complex*") FloatBuffer z, int ldz, @ByVal @Cast("float _Complex*") FloatBuffer sigma, @Cast("float _Complex*") FloatBuffer workev,
                         @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         float tol, @Cast("float _Complex*") FloatBuffer resid, int ncv, @Cast("float _Complex*") FloatBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, @Cast("float _Complex*") FloatBuffer workd,
                         @Cast("float _Complex*") FloatBuffer workl, int lworkl, @Cast("float _Complex*") FloatBuffer rwork, @ByRef IntBuffer info);
public static native void cneupd_c(@Cast("bool") boolean rvec, @Cast("char*") byte[] howmny, int[] select,
                         @Cast("float _Complex*") float[] d, @Cast("float _Complex*") float[] z, int ldz, @ByVal @Cast("float _Complex*") float[] sigma, @Cast("float _Complex*") float[] workev,
                         @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         float tol, @Cast("float _Complex*") float[] resid, int ncv, @Cast("float _Complex*") float[] v,
                         int ldv, int[] iparam, int[] ipntr, @Cast("float _Complex*") float[] workd,
                         @Cast("float _Complex*") float[] workl, int lworkl, @Cast("float _Complex*") float[] rwork, @ByRef int[] info);

public static native void znaupd_c(@ByRef IntPointer ido, @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         double tol, @Cast("double _Complex*") DoublePointer resid, int ncv, @Cast("double _Complex*") DoublePointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, @Cast("double _Complex*") DoublePointer workd,
                         @Cast("double _Complex*") DoublePointer workl, int lworkl, @Cast("double _Complex*") DoublePointer rwork, @ByRef IntPointer info);
public static native void znaupd_c(@ByRef IntBuffer ido, @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         double tol, @Cast("double _Complex*") DoubleBuffer resid, int ncv, @Cast("double _Complex*") DoubleBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, @Cast("double _Complex*") DoubleBuffer workd,
                         @Cast("double _Complex*") DoubleBuffer workl, int lworkl, @Cast("double _Complex*") DoubleBuffer rwork, @ByRef IntBuffer info);
public static native void znaupd_c(@ByRef int[] ido, @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         double tol, @Cast("double _Complex*") double[] resid, int ncv, @Cast("double _Complex*") double[] v,
                         int ldv, int[] iparam, int[] ipntr, @Cast("double _Complex*") double[] workd,
                         @Cast("double _Complex*") double[] workl, int lworkl, @Cast("double _Complex*") double[] rwork, @ByRef int[] info);

public static native void zneupd_c(@Cast("bool") boolean rvec, @Cast("char*") BytePointer howmny, IntPointer select,
                         @Cast("double _Complex*") DoublePointer d, @Cast("double _Complex*") DoublePointer z, int ldz, @ByVal @Cast("double _Complex*") DoublePointer sigma, @Cast("double _Complex*") DoublePointer workev,
                         @Cast("char*") BytePointer bmat, int n, @Cast("char*") BytePointer which, int nev,
                         double tol, @Cast("double _Complex*") DoublePointer resid, int ncv, @Cast("double _Complex*") DoublePointer v,
                         int ldv, IntPointer iparam, IntPointer ipntr, @Cast("double _Complex*") DoublePointer workd,
                         @Cast("double _Complex*") DoublePointer workl, int lworkl, @Cast("double _Complex*") DoublePointer rwork, @ByRef IntPointer info);
public static native void zneupd_c(@Cast("bool") boolean rvec, @Cast("char*") ByteBuffer howmny, IntBuffer select,
                         @Cast("double _Complex*") DoubleBuffer d, @Cast("double _Complex*") DoubleBuffer z, int ldz, @ByVal @Cast("double _Complex*") DoubleBuffer sigma, @Cast("double _Complex*") DoubleBuffer workev,
                         @Cast("char*") ByteBuffer bmat, int n, @Cast("char*") ByteBuffer which, int nev,
                         double tol, @Cast("double _Complex*") DoubleBuffer resid, int ncv, @Cast("double _Complex*") DoubleBuffer v,
                         int ldv, IntBuffer iparam, IntBuffer ipntr, @Cast("double _Complex*") DoubleBuffer workd,
                         @Cast("double _Complex*") DoubleBuffer workl, int lworkl, @Cast("double _Complex*") DoubleBuffer rwork, @ByRef IntBuffer info);
public static native void zneupd_c(@Cast("bool") boolean rvec, @Cast("char*") byte[] howmny, int[] select,
                         @Cast("double _Complex*") double[] d, @Cast("double _Complex*") double[] z, int ldz, @ByVal @Cast("double _Complex*") double[] sigma, @Cast("double _Complex*") double[] workev,
                         @Cast("char*") byte[] bmat, int n, @Cast("char*") byte[] which, int nev,
                         double tol, @Cast("double _Complex*") double[] resid, int ncv, @Cast("double _Complex*") double[] v,
                         int ldv, int[] iparam, int[] ipntr, @Cast("double _Complex*") double[] workd,
                         @Cast("double _Complex*") double[] workl, int lworkl, @Cast("double _Complex*") double[] rwork, @ByRef int[] info);

// #endif


}
