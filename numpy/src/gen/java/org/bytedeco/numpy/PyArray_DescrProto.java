// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.numpy;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;
import org.bytedeco.cpython.*;
import static org.bytedeco.cpython.global.python.*;

import static org.bytedeco.numpy.global.numpy.*;



/*
 * Umodified PyArray_Descr struct identical to NumPy 1.x.  This struct is
 * used as a prototype for registering a new legacy DType.
 * It is also used to access the fields in user code running on 1.x.
 */
@Properties(inherit = org.bytedeco.numpy.presets.numpy.class)
public class PyArray_DescrProto extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public PyArray_DescrProto() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public PyArray_DescrProto(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public PyArray_DescrProto(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public PyArray_DescrProto position(long position) {
        return (PyArray_DescrProto)super.position(position);
    }
    @Override public PyArray_DescrProto getPointer(long i) {
        return new PyArray_DescrProto((Pointer)this).offsetAddress(i);
    }

        public native @ByRef PyObject ob_base(); public native PyArray_DescrProto ob_base(PyObject setter);
        public native PyTypeObject typeobj(); public native PyArray_DescrProto typeobj(PyTypeObject setter);
        public native @Cast("char") byte kind(); public native PyArray_DescrProto kind(byte setter);
        public native @Cast("char") byte type(); public native PyArray_DescrProto type(byte setter);
        public native @Cast("char") byte byteorder(); public native PyArray_DescrProto byteorder(byte setter);
        public native @Cast("char") byte flags(); public native PyArray_DescrProto flags(byte setter);
        public native int type_num(); public native PyArray_DescrProto type_num(int setter);
        public native int elsize(); public native PyArray_DescrProto elsize(int setter);
        public native int alignment(); public native PyArray_DescrProto alignment(int setter);
        public native PyArray_ArrayDescr subarray(); public native PyArray_DescrProto subarray(PyArray_ArrayDescr setter);
        public native PyObject fields(); public native PyArray_DescrProto fields(PyObject setter);
        public native PyObject names(); public native PyArray_DescrProto names(PyObject setter);
        public native PyArray_ArrFuncs f(); public native PyArray_DescrProto f(PyArray_ArrFuncs setter);
        public native PyObject metadata(); public native PyArray_DescrProto metadata(PyObject setter);
        public native NpyAuxData c_metadata(); public native PyArray_DescrProto c_metadata(NpyAuxData setter);
        public native @Cast("npy_hash_t") long hash(); public native PyArray_DescrProto hash(long setter);
}
