// Targeted by JavaCPP version 1.5.7: DO NOT EDIT THIS FILE

package org.bytedeco.numpy;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;
import org.bytedeco.cpython.*;
import static org.bytedeco.cpython.global.python.*;

import static org.bytedeco.numpy.global.numpy.*;


/*
 * Legacy loop selector. (This should NOT normally be used and we can expect
 * that only the `PyUFunc_DefaultLegacyInnerLoopSelector` is ever set).
 * However, unlike the masked version, it probably still works.
 *
 * ufunc:             The ufunc object.
 * dtypes:            An array which has been populated with dtypes,
 *                    in most cases by the type resolution function
 *                    for the same ufunc.
 * out_innerloop:     Should be populated with the correct ufunc inner
 *                    loop for the given type.
 * out_innerloopdata: Should be populated with the void* data to
 *                    be passed into the out_innerloop function.
 * out_needs_api:     If the inner loop needs to use the Python API,
 *                    should set the to 1, otherwise should leave
 *                    this untouched.
 */
@Properties(inherit = org.bytedeco.numpy.presets.numpy.class)
public class PyUFunc_LegacyInnerLoopSelectionFunc extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    PyUFunc_LegacyInnerLoopSelectionFunc(Pointer p) { super(p); }
    protected PyUFunc_LegacyInnerLoopSelectionFunc() { allocate(); }
    private native void allocate();
    public native int call(
                            PyUFuncObject ufunc,
                            @Cast("PyArray_Descr**") PointerPointer dtypes,
                            @ByPtrPtr PyUFuncGenericFunction out_innerloop,
                            @Cast("void**") PointerPointer out_innerloopdata,
                            IntPointer out_needs_api);
}
