// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nvml;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nvml.*;



/** 
 * LED states for an S-class unit.
 */
@Properties(inherit = org.bytedeco.cuda.presets.nvml.class)
public class nvmlLedState_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public nvmlLedState_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public nvmlLedState_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public nvmlLedState_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public nvmlLedState_t position(long position) {
        return (nvmlLedState_t)super.position(position);
    }

    /** If amber, a text description of the cause */
    public native @Cast("char") byte cause(int i); public native nvmlLedState_t cause(int i, byte cause);
    @MemberGetter public native @Cast("char*") BytePointer cause();
    /** GREEN or AMBER */
    public native @Cast("nvmlLedColor_t") int color(); public native nvmlLedState_t color(int color);
}
