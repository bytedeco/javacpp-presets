// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nvml;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nvml.*;


/**
 * GPM buffer information.
 */
@Properties(inherit = org.bytedeco.cuda.presets.nvml.class)
public class nvmlGpmMetricsGet_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public nvmlGpmMetricsGet_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public nvmlGpmMetricsGet_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public nvmlGpmMetricsGet_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public nvmlGpmMetricsGet_t position(long position) {
        return (nvmlGpmMetricsGet_t)super.position(position);
    }
    @Override public nvmlGpmMetricsGet_t getPointer(long i) {
        return new nvmlGpmMetricsGet_t((Pointer)this).offsetAddress(i);
    }

    /** IN: Set to NVML_GPM_METRICS_GET_VERSION */
    public native @Cast("unsigned int") int version(); public native nvmlGpmMetricsGet_t version(int setter);
    /** IN: How many metrics to retrieve in metrics[] */
    public native @Cast("unsigned int") int numMetrics(); public native nvmlGpmMetricsGet_t numMetrics(int setter);
    /** IN: Sample buffer */
    public native nvmlGpmSample_st sample1(); public native nvmlGpmMetricsGet_t sample1(nvmlGpmSample_st setter);
    /** IN: Sample buffer */
    public native nvmlGpmSample_st sample2(); public native nvmlGpmMetricsGet_t sample2(nvmlGpmSample_st setter);
    /** IN/OUT: Array of metrics. Set metricId on call. See nvmlReturn and value on return */
    public native @ByRef nvmlGpmMetric_t metrics(int i); public native nvmlGpmMetricsGet_t metrics(int i, nvmlGpmMetric_t setter);
    @MemberGetter public native nvmlGpmMetric_t metrics();
}
