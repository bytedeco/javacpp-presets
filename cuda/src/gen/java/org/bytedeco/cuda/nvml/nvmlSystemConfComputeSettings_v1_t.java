// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nvml;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nvml.*;


/**
 * Confidential Compute System settings
 */
@Properties(inherit = org.bytedeco.cuda.presets.nvml.class)
public class nvmlSystemConfComputeSettings_v1_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public nvmlSystemConfComputeSettings_v1_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public nvmlSystemConfComputeSettings_v1_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public nvmlSystemConfComputeSettings_v1_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public nvmlSystemConfComputeSettings_v1_t position(long position) {
        return (nvmlSystemConfComputeSettings_v1_t)super.position(position);
    }
    @Override public nvmlSystemConfComputeSettings_v1_t getPointer(long i) {
        return new nvmlSystemConfComputeSettings_v1_t((Pointer)this).offsetAddress(i);
    }

    public native @Cast("unsigned int") int version(); public native nvmlSystemConfComputeSettings_v1_t version(int setter);
    public native @Cast("unsigned int") int environment(); public native nvmlSystemConfComputeSettings_v1_t environment(int setter);
    public native @Cast("unsigned int") int ccFeature(); public native nvmlSystemConfComputeSettings_v1_t ccFeature(int setter);
    public native @Cast("unsigned int") int devToolsMode(); public native nvmlSystemConfComputeSettings_v1_t devToolsMode(int setter);
    public native @Cast("unsigned int") int multiGpuMode(); public native nvmlSystemConfComputeSettings_v1_t multiGpuMode(int setter);
}
