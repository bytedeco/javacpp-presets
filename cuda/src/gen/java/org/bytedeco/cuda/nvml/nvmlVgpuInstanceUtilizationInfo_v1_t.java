// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nvml;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nvml.*;


/**
 * Structure to store Utilization Value and vgpuInstance Info -- Version 1
 */
@Properties(inherit = org.bytedeco.cuda.presets.nvml.class)
public class nvmlVgpuInstanceUtilizationInfo_v1_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public nvmlVgpuInstanceUtilizationInfo_v1_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public nvmlVgpuInstanceUtilizationInfo_v1_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public nvmlVgpuInstanceUtilizationInfo_v1_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public nvmlVgpuInstanceUtilizationInfo_v1_t position(long position) {
        return (nvmlVgpuInstanceUtilizationInfo_v1_t)super.position(position);
    }
    @Override public nvmlVgpuInstanceUtilizationInfo_v1_t getPointer(long i) {
        return new nvmlVgpuInstanceUtilizationInfo_v1_t((Pointer)this).offsetAddress(i);
    }

    /** CPU Timestamp in microseconds */
    public native @Cast("unsigned long long") long timeStamp(); public native nvmlVgpuInstanceUtilizationInfo_v1_t timeStamp(long setter);
    /** vGPU Instance */
    public native @Cast("nvmlVgpuInstance_t") int vgpuInstance(); public native nvmlVgpuInstanceUtilizationInfo_v1_t vgpuInstance(int setter);
    /** SM (3D/Compute) Util Value */
    public native @ByRef nvmlValue_t smUtil(); public native nvmlVgpuInstanceUtilizationInfo_v1_t smUtil(nvmlValue_t setter);
    /** Frame Buffer Memory Util Value */
    public native @ByRef nvmlValue_t memUtil(); public native nvmlVgpuInstanceUtilizationInfo_v1_t memUtil(nvmlValue_t setter);
    /** Encoder Util Value */
    public native @ByRef nvmlValue_t encUtil(); public native nvmlVgpuInstanceUtilizationInfo_v1_t encUtil(nvmlValue_t setter);
    /** Decoder Util Value */
    public native @ByRef nvmlValue_t decUtil(); public native nvmlVgpuInstanceUtilizationInfo_v1_t decUtil(nvmlValue_t setter);
    /** Jpeg Util Value */
    public native @ByRef nvmlValue_t jpgUtil(); public native nvmlVgpuInstanceUtilizationInfo_v1_t jpgUtil(nvmlValue_t setter);
    /** Ofa Util Value */
    public native @ByRef nvmlValue_t ofaUtil(); public native nvmlVgpuInstanceUtilizationInfo_v1_t ofaUtil(nvmlValue_t setter);
}
