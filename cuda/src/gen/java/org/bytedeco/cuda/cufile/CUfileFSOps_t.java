// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cufile;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.cufile.*;




@Properties(inherit = org.bytedeco.cuda.presets.cufile.class)
public class CUfileFSOps_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUfileFSOps_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUfileFSOps_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUfileFSOps_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUfileFSOps_t position(long position) {
        return (CUfileFSOps_t)super.position(position);
    }
    @Override public CUfileFSOps_t getPointer(long i) {
        return new CUfileFSOps_t((Pointer)this).offsetAddress(i);
    }

      /* NULL means discover using fstat */
      public static class Fs_type_Pointer extends FunctionPointer {
          static { Loader.load(); }
          /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
          public    Fs_type_Pointer(Pointer p) { super(p); }
          protected Fs_type_Pointer() { allocate(); }
          private native void allocate();
          public native @Cast("const char*") BytePointer call(Pointer handle);
      }
      public native Fs_type_Pointer fs_type(); public native CUfileFSOps_t fs_type(Fs_type_Pointer setter);

      /* list of host addresses to use,  NULL means no restriction */
      public static class GetRDMADeviceList_Pointer_PointerPointer extends FunctionPointer {
          static { Loader.load(); }
          /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
          public    GetRDMADeviceList_Pointer_PointerPointer(Pointer p) { super(p); }
          protected GetRDMADeviceList_Pointer_PointerPointer() { allocate(); }
          private native void allocate();
          public native int call(Pointer handle, @Cast("sockaddr_t**") PointerPointer hostaddrs);
      }
      public native GetRDMADeviceList_Pointer_PointerPointer getRDMADeviceList(); public native CUfileFSOps_t getRDMADeviceList(GetRDMADeviceList_Pointer_PointerPointer setter);

      /* -1 no pref */
      public static class GetRDMADevicePriority_Pointer_BytePointer_long_Pointer_sockaddr_t extends FunctionPointer {
          static { Loader.load(); }
          /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
          public    GetRDMADevicePriority_Pointer_BytePointer_long_Pointer_sockaddr_t(Pointer p) { super(p); }
          protected GetRDMADevicePriority_Pointer_BytePointer_long_Pointer_sockaddr_t() { allocate(); }
          private native void allocate();
          public native int call(Pointer handle, @Cast("char*") BytePointer arg1, @Cast("size_t") long arg2,
                                      @ByVal @Cast("loff_t*") Pointer arg3, sockaddr_t hostaddr);
      }
      public native GetRDMADevicePriority_Pointer_BytePointer_long_Pointer_sockaddr_t getRDMADevicePriority(); public native CUfileFSOps_t getRDMADevicePriority(GetRDMADevicePriority_Pointer_BytePointer_long_Pointer_sockaddr_t setter);

      /* NULL means try VFS */
      public static class Read_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t extends FunctionPointer {
          static { Loader.load(); }
          /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
          public    Read_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t(Pointer p) { super(p); }
          protected Read_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t() { allocate(); }
          private native void allocate();
          public native @Cast("ssize_t") long call(Pointer handle, @Cast("char*") BytePointer arg1, @Cast("size_t") long arg2, @ByVal @Cast("loff_t*") Pointer arg3, cufileRDMAInfo_t arg4);
      }
      public native Read_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t read(); public native CUfileFSOps_t read(Read_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t setter);
      public static class Write_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t extends FunctionPointer {
          static { Loader.load(); }
          /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
          public    Write_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t(Pointer p) { super(p); }
          protected Write_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t() { allocate(); }
          private native void allocate();
          public native @Cast("ssize_t") long call(Pointer handle, @Cast("const char*") BytePointer arg1, @Cast("size_t") long arg2, @ByVal @Cast("loff_t*") Pointer arg3, cufileRDMAInfo_t arg4);
      }
      public native Write_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t write(); public native CUfileFSOps_t write(Write_Pointer_BytePointer_long_Pointer_cufileRDMAInfo_t setter);
}
