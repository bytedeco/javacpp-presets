// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cufile;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.cufile.*;


@Properties(inherit = org.bytedeco.cuda.presets.cufile.class)
public class CUfileDrvProps_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUfileDrvProps_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUfileDrvProps_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUfileDrvProps_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUfileDrvProps_t position(long position) {
        return (CUfileDrvProps_t)super.position(position);
    }
    @Override public CUfileDrvProps_t getPointer(long i) {
        return new CUfileDrvProps_t((Pointer)this).offsetAddress(i);
    }

                @Name("nvfs.major_version") public native @Cast("unsigned int") int nvfs_major_version(); public native CUfileDrvProps_t nvfs_major_version(int setter);

                @Name("nvfs.minor_version") public native @Cast("unsigned int") int nvfs_minor_version(); public native CUfileDrvProps_t nvfs_minor_version(int setter);

                @Name("nvfs.poll_thresh_size") public native @Cast("size_t") long nvfs_poll_thresh_size(); public native CUfileDrvProps_t nvfs_poll_thresh_size(long setter);

                @Name("nvfs.max_direct_io_size") public native @Cast("size_t") long nvfs_max_direct_io_size(); public native CUfileDrvProps_t nvfs_max_direct_io_size(long setter);

                @Name("nvfs.dstatusflags") public native @Cast("unsigned int") int nvfs_dstatusflags(); public native CUfileDrvProps_t nvfs_dstatusflags(int setter);

                @Name("nvfs.dcontrolflags") public native @Cast("unsigned int") int nvfs_dcontrolflags(); public native CUfileDrvProps_t nvfs_dcontrolflags(int setter);

        public native @Cast("unsigned int") int fflags(); public native CUfileDrvProps_t fflags(int setter);

        public native @Cast("unsigned int") int max_device_cache_size(); public native CUfileDrvProps_t max_device_cache_size(int setter);

	public native @Cast("unsigned int") int per_buffer_cache_size(); public native CUfileDrvProps_t per_buffer_cache_size(int setter);

        public native @Cast("unsigned int") int max_device_pinned_mem_size(); public native CUfileDrvProps_t max_device_pinned_mem_size(int setter);

        public native @Cast("unsigned int") int max_batch_io_size(); public native CUfileDrvProps_t max_batch_io_size(int setter);
        public native @Cast("unsigned int") int max_batch_io_timeout_msecs(); public native CUfileDrvProps_t max_batch_io_timeout_msecs(int setter);
}
