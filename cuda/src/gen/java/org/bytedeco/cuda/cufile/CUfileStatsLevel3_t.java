// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cufile;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.cufile.*;


/**
 * \brief Level 3 Statistics: Includes Level 2 plus per-GPU and subsystem statistics
 */
@Properties(inherit = org.bytedeco.cuda.presets.cufile.class)
public class CUfileStatsLevel3_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUfileStatsLevel3_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUfileStatsLevel3_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUfileStatsLevel3_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUfileStatsLevel3_t position(long position) {
        return (CUfileStatsLevel3_t)super.position(position);
    }
    @Override public CUfileStatsLevel3_t getPointer(long i) {
        return new CUfileStatsLevel3_t((Pointer)this).offsetAddress(i);
    }

    // Detailed statistics (Level 2)
    public native @ByRef CUfileStatsLevel2_t detailed(); public native CUfileStatsLevel3_t detailed(CUfileStatsLevel2_t setter);
    
    // Number of GPUs detected
    public native @Cast("uint32_t") int num_gpus(); public native CUfileStatsLevel3_t num_gpus(int setter);
    
    // Per-GPU statistics (array for each GPU)
    public native @ByRef CUfilePerGpuStats_t per_gpu_stats(int i); public native CUfileStatsLevel3_t per_gpu_stats(int i, CUfilePerGpuStats_t setter);
    @MemberGetter public native CUfilePerGpuStats_t per_gpu_stats(); // Using the maxGpus constant value from cufile_stats.h
}
