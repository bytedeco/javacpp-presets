// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cufile;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.cufile.*;


/**
 * \brief Level 1 Statistics: Basic IO and operation counters
 */
@Properties(inherit = org.bytedeco.cuda.presets.cufile.class)
public class CUfileStatsLevel1_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUfileStatsLevel1_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUfileStatsLevel1_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUfileStatsLevel1_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUfileStatsLevel1_t position(long position) {
        return (CUfileStatsLevel1_t)super.position(position);
    }
    @Override public CUfileStatsLevel1_t getPointer(long i) {
        return new CUfileStatsLevel1_t((Pointer)this).offsetAddress(i);
    }

    // Operation counters
    public native @ByRef CUfileOpCounter_t read_ops(); public native CUfileStatsLevel1_t read_ops(CUfileOpCounter_t setter);              // Read operations
    public native @ByRef CUfileOpCounter_t write_ops(); public native CUfileStatsLevel1_t write_ops(CUfileOpCounter_t setter);             // Write operations
    public native @ByRef CUfileOpCounter_t hdl_register_ops(); public native CUfileStatsLevel1_t hdl_register_ops(CUfileOpCounter_t setter);      // Handle register operations
    public native @ByRef CUfileOpCounter_t hdl_deregister_ops(); public native CUfileStatsLevel1_t hdl_deregister_ops(CUfileOpCounter_t setter);    // Handle deregister operations
    public native @ByRef CUfileOpCounter_t buf_register_ops(); public native CUfileStatsLevel1_t buf_register_ops(CUfileOpCounter_t setter);      // Buffer register operations
    public native @ByRef CUfileOpCounter_t buf_deregister_ops(); public native CUfileStatsLevel1_t buf_deregister_ops(CUfileOpCounter_t setter);    // Buffer deregister operations
    
    // Basic IO statistics
    public native @Cast("uint64_t") long read_bytes(); public native CUfileStatsLevel1_t read_bytes(long setter);               // Total bytes read
    public native @Cast("uint64_t") long write_bytes(); public native CUfileStatsLevel1_t write_bytes(long setter);              // Total bytes written
    public native @Cast("uint64_t") long read_bw_bytes_per_sec(); public native CUfileStatsLevel1_t read_bw_bytes_per_sec(long setter);            // Read bandwidth (bytes/sec)
    public native @Cast("uint64_t") long write_bw_bytes_per_sec(); public native CUfileStatsLevel1_t write_bw_bytes_per_sec(long setter);           // Write bandwidth (bytes/sec)
    public native @Cast("uint64_t") long read_lat_avg_us(); public native CUfileStatsLevel1_t read_lat_avg_us(long setter);          // Average read latency (microseconds)
    public native @Cast("uint64_t") long write_lat_avg_us(); public native CUfileStatsLevel1_t write_lat_avg_us(long setter);         // Average write latency (microseconds)
    
    // Operations per second
    public native @Cast("uint64_t") long read_ops_per_sec(); public native CUfileStatsLevel1_t read_ops_per_sec(long setter);         // Read operations per second
    public native @Cast("uint64_t") long write_ops_per_sec(); public native CUfileStatsLevel1_t write_ops_per_sec(long setter);        // Write operations per second
    
    // Latency sums
    public native @Cast("uint64_t") long read_lat_sum_us(); public native CUfileStatsLevel1_t read_lat_sum_us(long setter);          // Sum of read latencies
    public native @Cast("uint64_t") long write_lat_sum_us(); public native CUfileStatsLevel1_t write_lat_sum_us(long setter);         // Sum of write latencies
    
    // Batch operations counters
    public native @ByRef CUfileOpCounter_t batch_submit_ops(); public native CUfileStatsLevel1_t batch_submit_ops(CUfileOpCounter_t setter);      // Batch submit operations
    public native @ByRef CUfileOpCounter_t batch_complete_ops(); public native CUfileStatsLevel1_t batch_complete_ops(CUfileOpCounter_t setter);    // Batch complete operations
    public native @ByRef CUfileOpCounter_t batch_setup_ops(); public native CUfileStatsLevel1_t batch_setup_ops(CUfileOpCounter_t setter);       // Batch setup operations
    public native @ByRef CUfileOpCounter_t batch_cancel_ops(); public native CUfileStatsLevel1_t batch_cancel_ops(CUfileOpCounter_t setter);      // Batch cancel operations
    public native @ByRef CUfileOpCounter_t batch_destroy_ops(); public native CUfileStatsLevel1_t batch_destroy_ops(CUfileOpCounter_t setter);     // Batch destroy operations
    
    // Batch queue counters
    public native @ByRef CUfileOpCounter_t batch_enqueued_ops(); public native CUfileStatsLevel1_t batch_enqueued_ops(CUfileOpCounter_t setter);    // Batch enqueue operations
    public native @ByRef CUfileOpCounter_t batch_posix_enqueued_ops(); public native CUfileStatsLevel1_t batch_posix_enqueued_ops(CUfileOpCounter_t setter);  // POSIX batch enqueue operations
    public native @ByRef CUfileOpCounter_t batch_processed_ops(); public native CUfileStatsLevel1_t batch_processed_ops(CUfileOpCounter_t setter);    // Batch process operations
    public native @ByRef CUfileOpCounter_t batch_posix_processed_ops(); public native CUfileStatsLevel1_t batch_posix_processed_ops(CUfileOpCounter_t setter);  // POSIX batch process operations
    
    // Batch submission type counters
    public native @ByRef CUfileOpCounter_t batch_nvfs_submit_ops(); public native CUfileStatsLevel1_t batch_nvfs_submit_ops(CUfileOpCounter_t setter);   // NVFS batch submit operations
    public native @ByRef CUfileOpCounter_t batch_p2p_submit_ops(); public native CUfileStatsLevel1_t batch_p2p_submit_ops(CUfileOpCounter_t setter);    // P2P batch submit operations
    public native @ByRef CUfileOpCounter_t batch_aio_submit_ops(); public native CUfileStatsLevel1_t batch_aio_submit_ops(CUfileOpCounter_t setter);    // AIO batch submit operations
    public native @ByRef CUfileOpCounter_t batch_iouring_submit_ops(); public native CUfileStatsLevel1_t batch_iouring_submit_ops(CUfileOpCounter_t setter); // IO_URING batch submit operations
    public native @ByRef CUfileOpCounter_t batch_mixed_io_submit_ops(); public native CUfileStatsLevel1_t batch_mixed_io_submit_ops(CUfileOpCounter_t setter); // Mixed IO batch submit operations
    public native @ByRef CUfileOpCounter_t batch_total_submit_ops(); public native CUfileStatsLevel1_t batch_total_submit_ops(CUfileOpCounter_t setter);   // Total batch submit operations
    
    // Batch operations statistics
    public native @Cast("uint64_t") long batch_read_bytes(); public native CUfileStatsLevel1_t batch_read_bytes(long setter);         // Total batch read bytes
    public native @Cast("uint64_t") long batch_write_bytes(); public native CUfileStatsLevel1_t batch_write_bytes(long setter);        // Total batch write bytes
    public native @Cast("uint64_t") long batch_read_bw_bytes(); public native CUfileStatsLevel1_t batch_read_bw_bytes(long setter);      // Batch read bandwidth
    public native @Cast("uint64_t") long batch_write_bw_bytes(); public native CUfileStatsLevel1_t batch_write_bw_bytes(long setter);     // Batch write bandwidth
    public native @Cast("uint64_t") long batch_submit_lat_avg_us(); public native CUfileStatsLevel1_t batch_submit_lat_avg_us(long setter);  // Avg batch submit latency
    public native @Cast("uint64_t") long batch_completion_lat_avg_us(); public native CUfileStatsLevel1_t batch_completion_lat_avg_us(long setter); // Avg batch completion latency
    public native @Cast("uint64_t") long batch_submit_ops_per_sec(); public native CUfileStatsLevel1_t batch_submit_ops_per_sec(long setter);  // Batch submit operations per second
    public native @Cast("uint64_t") long batch_complete_ops_per_sec(); public native CUfileStatsLevel1_t batch_complete_ops_per_sec(long setter); // Batch complete operations per second
    public native @Cast("uint64_t") long batch_submit_lat_sum_us(); public native CUfileStatsLevel1_t batch_submit_lat_sum_us(long setter);    // Sum of batch submit latencies
    public native @Cast("uint64_t") long batch_completion_lat_sum_us(); public native CUfileStatsLevel1_t batch_completion_lat_sum_us(long setter); // Sum of batch completion latencies
    public native @Cast("uint64_t") long last_batch_read_bytes(); public native CUfileStatsLevel1_t last_batch_read_bytes(long setter);      // Last batch read bytes
    public native @Cast("uint64_t") long last_batch_write_bytes(); public native CUfileStatsLevel1_t last_batch_write_bytes(long setter);     // Last batch write bytes
}
