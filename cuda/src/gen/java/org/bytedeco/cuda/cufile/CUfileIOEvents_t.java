// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cufile;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.cufile.*;

@Properties(inherit = org.bytedeco.cuda.presets.cufile.class)
public class CUfileIOEvents_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUfileIOEvents_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUfileIOEvents_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUfileIOEvents_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUfileIOEvents_t position(long position) {
        return (CUfileIOEvents_t)super.position(position);
    }
    @Override public CUfileIOEvents_t getPointer(long i) {
        return new CUfileIOEvents_t((Pointer)this).offsetAddress(i);
    }

	public native Pointer cookie(); public native CUfileIOEvents_t cookie(Pointer setter);
	public native @Cast("CUfileStatus_t") int status(); public native CUfileIOEvents_t status(int setter);      /* status of the operation */
	public native @Cast("size_t") long ret(); public native CUfileIOEvents_t ret(long setter); /* -ve error or amount of I/O done. */
}
