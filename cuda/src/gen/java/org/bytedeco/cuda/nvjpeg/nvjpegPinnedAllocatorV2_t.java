// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nvjpeg;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nvjpeg.*;


@Properties(inherit = org.bytedeco.cuda.presets.nvjpeg.class)
public class nvjpegPinnedAllocatorV2_t extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public nvjpegPinnedAllocatorV2_t() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public nvjpegPinnedAllocatorV2_t(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public nvjpegPinnedAllocatorV2_t(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public nvjpegPinnedAllocatorV2_t position(long position) {
        return (nvjpegPinnedAllocatorV2_t)super.position(position);
    }
    @Override public nvjpegPinnedAllocatorV2_t getPointer(long i) {
        return new nvjpegPinnedAllocatorV2_t((Pointer)this).offsetAddress(i);
    }

    public native tPinnedMallocV2 pinned_malloc(); public native nvjpegPinnedAllocatorV2_t pinned_malloc(tPinnedMallocV2 setter);
    public native tPinnedFreeV2 pinned_free(); public native nvjpegPinnedAllocatorV2_t pinned_free(tPinnedFreeV2 setter);
    public native Pointer pinned_ctx(); public native nvjpegPinnedAllocatorV2_t pinned_ctx(Pointer setter);
}
