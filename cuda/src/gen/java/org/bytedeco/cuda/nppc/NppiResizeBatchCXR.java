// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nppc;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nppc.*;


/** 
 * NPP Batch Geometry Structure Definitions. 
 */
@Properties(inherit = org.bytedeco.cuda.presets.nppc.class)
public class NppiResizeBatchCXR extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public NppiResizeBatchCXR() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public NppiResizeBatchCXR(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public NppiResizeBatchCXR(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public NppiResizeBatchCXR position(long position) {
        return (NppiResizeBatchCXR)super.position(position);
    }
    @Override public NppiResizeBatchCXR getPointer(long i) {
        return new NppiResizeBatchCXR((Pointer)this).offsetAddress(i);
    }

    /** source image device memory pointer. */
    public native @Const Pointer pSrc(); public native NppiResizeBatchCXR pSrc(Pointer setter);
    /** source image byte count per row. */
    public native int nSrcStep(); public native NppiResizeBatchCXR nSrcStep(int setter);
    /** destination image device memory pointer. */
    public native Pointer pDst(); public native NppiResizeBatchCXR pDst(Pointer setter);
    /** device image byte count per row. */
    public native int nDstStep(); public native NppiResizeBatchCXR nDstStep(int setter);
}
