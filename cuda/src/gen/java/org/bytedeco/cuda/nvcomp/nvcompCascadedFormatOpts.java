// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nvcomp;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nvcomp.*;

// #endif

/**
 * \brief Structure that stores the compression configuration
 */
@Properties(inherit = org.bytedeco.cuda.presets.nvcomp.class)
public class nvcompCascadedFormatOpts extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public nvcompCascadedFormatOpts() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public nvcompCascadedFormatOpts(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public nvcompCascadedFormatOpts(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public nvcompCascadedFormatOpts position(long position) {
        return (nvcompCascadedFormatOpts)super.position(position);
    }
    @Override public nvcompCascadedFormatOpts getPointer(long i) {
        return new nvcompCascadedFormatOpts((Pointer)this).offsetAddress(i);
    }

  /**
   * \brief The number of Run Length Encodings to perform.
   */
  public native int num_RLEs(); public native nvcompCascadedFormatOpts num_RLEs(int setter);

  /**
   * \brief The number of Delta Encodings to perform.
   */
  public native int num_deltas(); public native nvcompCascadedFormatOpts num_deltas(int setter);

  /**
   * \brief Whether or not to bitpack the final layers.
   */
  public native int use_bp(); public native nvcompCascadedFormatOpts use_bp(int setter);
}
