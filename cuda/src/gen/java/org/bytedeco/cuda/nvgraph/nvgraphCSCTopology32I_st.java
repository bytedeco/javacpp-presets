// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.nvgraph;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.nvgraph.*;


@Properties(inherit = org.bytedeco.cuda.presets.nvgraph.class)
public class nvgraphCSCTopology32I_st extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public nvgraphCSCTopology32I_st() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public nvgraphCSCTopology32I_st(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public nvgraphCSCTopology32I_st(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public nvgraphCSCTopology32I_st position(long position) {
        return (nvgraphCSCTopology32I_st)super.position(position);
    }

  public native int nvertices(); public native nvgraphCSCTopology32I_st nvertices(int nvertices); // n+1
  public native int nedges(); public native nvgraphCSCTopology32I_st nedges(int nedges); // nnz
  public native IntPointer destination_offsets(); public native nvgraphCSCTopology32I_st destination_offsets(IntPointer destination_offsets); // colPtr
  public native IntPointer source_indices(); public native nvgraphCSCTopology32I_st source_indices(IntPointer source_indices); // rowInd
}
