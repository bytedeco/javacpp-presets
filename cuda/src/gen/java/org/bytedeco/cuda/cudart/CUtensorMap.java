// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cudart;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cuda.global.cudart.*;


/**
 * Tensor map descriptor. Requires compiler support for aligning to 64 bytes.
 */
@Properties(inherit = org.bytedeco.cuda.presets.cudart.class)
public class CUtensorMap extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUtensorMap() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUtensorMap(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUtensorMap(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUtensorMap position(long position) {
        return (CUtensorMap)super.position(position);
    }
    @Override public CUtensorMap getPointer(long i) {
        return new CUtensorMap((Pointer)this).offsetAddress(i);
    }

// #if defined(__cplusplus) && (__cplusplus >= 201103L)
// #elif __STDC_VERSION__ >= 201112L
// #endif
    public native @Cast("cuuint64_t") long opaque(int i); public native CUtensorMap opaque(int i, long setter);
    @MemberGetter public native @Cast("cuuint64_t*") LongPointer opaque();
}
