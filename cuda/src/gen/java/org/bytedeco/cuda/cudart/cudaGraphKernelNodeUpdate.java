// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cudart;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cuda.global.cudart.*;


/**
 * Struct to specify a single node update to pass as part of a larger array to ::cudaGraphKernelNodeUpdatesApply
 */
@Properties(inherit = org.bytedeco.cuda.presets.cudart.class)
public class cudaGraphKernelNodeUpdate extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public cudaGraphKernelNodeUpdate(Pointer p) { super(p); }

    /** Node to update */
    public native CUgraphDeviceUpdatableNode_st node(); public native cudaGraphKernelNodeUpdate node(CUgraphDeviceUpdatableNode_st setter);
    /** Which type of update to apply. Determines how updateData is interpreted */
    public native @Cast("cudaGraphKernelNodeField") int field(); public native cudaGraphKernelNodeUpdate field(int setter);
// #if !defined(__cplusplus) || __cplusplus >= 201103L
        /** Grid dimensions */
        @Name("updateData.gridDim") public native @ByRef dim3 updateData_gridDim(); public native cudaGraphKernelNodeUpdate updateData_gridDim(dim3 setter);
// #else
        /* Union members cannot have nontrivial constructors until C++11. */
// #endif
            /** Kernel parameter data to write in */
            @Name("updateData.param.pValue") public native @Const Pointer updateData_param_pValue(); public native cudaGraphKernelNodeUpdate updateData_param_pValue(Pointer setter);
            /** Offset into the parameter buffer at which to apply the update */
            @Name("updateData.param.offset") public native @Cast("size_t") long updateData_param_offset(); public native cudaGraphKernelNodeUpdate updateData_param_offset(long setter);
            /** Number of bytes to update */
            @Name("updateData.param.size") public native @Cast("size_t") long updateData_param_size(); public native cudaGraphKernelNodeUpdate updateData_param_size(long setter);
        /** Node enable/disable data. Nonzero if the node should be enabled, 0 if it should be disabled */
        @Name("updateData.isEnabled") public native @Cast("unsigned int") int updateData_isEnabled(); public native cudaGraphKernelNodeUpdate updateData_isEnabled(int setter);
}
