// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cudart;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cuda.global.cudart.*;


/**
 * Struct representing an operand for copy with ::cuMemcpy3DBatchAsync
 */
@Properties(inherit = org.bytedeco.cuda.presets.cudart.class)
public class CUmemcpy3DOperand_v1 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUmemcpy3DOperand_v1() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUmemcpy3DOperand_v1(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUmemcpy3DOperand_v1(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUmemcpy3DOperand_v1 position(long position) {
        return (CUmemcpy3DOperand_v1)super.position(position);
    }
    @Override public CUmemcpy3DOperand_v1 getPointer(long i) {
        return new CUmemcpy3DOperand_v1((Pointer)this).offsetAddress(i);
    }

    public native @Cast("CUmemcpy3DOperandType") int type(); public native CUmemcpy3DOperand_v1 type(int setter);
        /**
         * Struct representing an operand when ::CUmemcpy3DOperand::type is ::CU_MEMCPY_OPERAND_TYPE_POINTER
         */
            @Name("op.ptr.ptr") public native @Cast("CUdeviceptr") long op_ptr_ptr(); public native CUmemcpy3DOperand_v1 op_ptr_ptr(long setter);
            /** Length of each row in elements. */
            @Name("op.ptr.rowLength") public native @Cast("size_t") long op_ptr_rowLength(); public native CUmemcpy3DOperand_v1 op_ptr_rowLength(long setter);
            /** Height of each layer in elements. */
            @Name("op.ptr.layerHeight") public native @Cast("size_t") long op_ptr_layerHeight(); public native CUmemcpy3DOperand_v1 op_ptr_layerHeight(long setter); 
            /** Hint location for the operand. Ignored when the pointers are not managed memory or memory allocated outside CUDA. */
            @Name("op.ptr.locHint") public native @ByRef @Cast("CUmemLocation*") CUmemLocation_v1 op_ptr_locHint(); public native CUmemcpy3DOperand_v1 op_ptr_locHint(CUmemLocation_v1 setter);

        /**
         * Struct representing an operand when ::CUmemcpy3DOperand::type is ::CU_MEMCPY_OPERAND_TYPE_ARRAY
         */
            @Name("op.array.array") public native CUarray_st op_array_array(); public native CUmemcpy3DOperand_v1 op_array_array(CUarray_st setter);
            @Name("op.array.offset") public native @ByRef @Cast("CUoffset3D*") CUoffset3D_v1 op_array_offset(); public native CUmemcpy3DOperand_v1 op_array_offset(CUoffset3D_v1 setter);
}
