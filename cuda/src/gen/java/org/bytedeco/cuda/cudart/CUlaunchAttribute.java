// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cudart;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cuda.global.cudart.*;


/**
 * Launch attribute
 */
@Properties(inherit = org.bytedeco.cuda.presets.cudart.class)
public class CUlaunchAttribute extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUlaunchAttribute() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUlaunchAttribute(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUlaunchAttribute(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUlaunchAttribute position(long position) {
        return (CUlaunchAttribute)super.position(position);
    }
    @Override public CUlaunchAttribute getPointer(long i) {
        return new CUlaunchAttribute((Pointer)this).offsetAddress(i);
    }

    /** Attribute to set */
    public native @Cast("CUlaunchAttributeID") int id(); public native CUlaunchAttribute id(int setter);
    public native @Cast("char") byte pad(int i); public native CUlaunchAttribute pad(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer pad();
    /** Value of the attribute */
    public native @ByRef CUlaunchAttributeValue value(); public native CUlaunchAttribute value(CUlaunchAttributeValue setter);
}
