// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cudart;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cuda.global.cudart.*;


/**
 * External semaphore wait node parameters
 */
@Properties(inherit = org.bytedeco.cuda.presets.cudart.class)
public class cudaExternalSemaphoreWaitNodeParamsV2 extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public cudaExternalSemaphoreWaitNodeParamsV2() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public cudaExternalSemaphoreWaitNodeParamsV2(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public cudaExternalSemaphoreWaitNodeParamsV2(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public cudaExternalSemaphoreWaitNodeParamsV2 position(long position) {
        return (cudaExternalSemaphoreWaitNodeParamsV2)super.position(position);
    }
    @Override public cudaExternalSemaphoreWaitNodeParamsV2 getPointer(long i) {
        return new cudaExternalSemaphoreWaitNodeParamsV2((Pointer)this).offsetAddress(i);
    }

    /** Array of external semaphore handles. */
    public native @ByPtrPtr CUexternalSemaphore_st extSemArray(); public native cudaExternalSemaphoreWaitNodeParamsV2 extSemArray(CUexternalSemaphore_st setter);
    /** Array of external semaphore wait parameters. */
    public native @Const cudaExternalSemaphoreWaitParams paramsArray(); public native cudaExternalSemaphoreWaitNodeParamsV2 paramsArray(cudaExternalSemaphoreWaitParams setter);
    /** Number of handles and parameters supplied in extSemArray and paramsArray. */
    public native @Cast("unsigned int") int numExtSems(); public native cudaExternalSemaphoreWaitNodeParamsV2 numExtSems(int setter);
}
