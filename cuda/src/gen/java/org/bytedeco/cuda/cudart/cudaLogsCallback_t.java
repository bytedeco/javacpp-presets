// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cudart;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cuda.global.cudart.*;


/** \} */ /* END CUDART__VERSION */

/**
 * \defgroup CUDART_LOGS Error Log Management Functions
 *
 * ___MANBRIEF___ error log management interface for the CUDA Runtime and Driver
 * (___CURRENT_FILE___) ___ENDMANBRIEF___
 *
 * This section describes the error log management functions of the CUDA runtime
 * application programming interface. The Error Log Management interface will operate
 * on both the CUDA Driver and CUDA Runtime.
 *
 * \{
 */

/**
 * Type of public error reporting callback functions.
 * @param data User parameter provided at registration
 * @param logLevel Severity level of the log message
 * @param message Error log message being reported
 * @param length Length of the message in bytes
 */
@Convention("CUDART_CB") @Properties(inherit = org.bytedeco.cuda.presets.cudart.class)
public class cudaLogsCallback_t extends FunctionPointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public    cudaLogsCallback_t(Pointer p) { super(p); }
    protected cudaLogsCallback_t() { allocate(); }
    private native void allocate();
    public native void call(Pointer data, @Cast("cudaLogLevel") int logLevel, @Cast("char*") BytePointer message, @Cast("size_t") long length);
}
