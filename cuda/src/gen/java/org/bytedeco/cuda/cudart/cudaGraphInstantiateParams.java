// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cudart;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.cuda.global.cudart.*;


/**
 * Graph instantiation parameters
 */
@Properties(inherit = org.bytedeco.cuda.presets.cudart.class)
public class cudaGraphInstantiateParams extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public cudaGraphInstantiateParams() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public cudaGraphInstantiateParams(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public cudaGraphInstantiateParams(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public cudaGraphInstantiateParams position(long position) {
        return (cudaGraphInstantiateParams)super.position(position);
    }
    @Override public cudaGraphInstantiateParams getPointer(long i) {
        return new cudaGraphInstantiateParams((Pointer)this).offsetAddress(i);
    }

    /** Instantiation flags */
    public native @Cast("unsigned long long") long flags(); public native cudaGraphInstantiateParams flags(long setter);
    /** Upload stream */
    public native CUstream_st uploadStream(); public native cudaGraphInstantiateParams uploadStream(CUstream_st setter);
    /** The node which caused instantiation to fail, if any */
    public native CUgraphNode_st errNode_out(); public native cudaGraphInstantiateParams errNode_out(CUgraphNode_st setter);
    /** Whether instantiation was successful.  If it failed, the reason why */
    public native @Cast("cudaGraphInstantiateResult") int result_out(); public native cudaGraphInstantiateParams result_out(int setter);
}
