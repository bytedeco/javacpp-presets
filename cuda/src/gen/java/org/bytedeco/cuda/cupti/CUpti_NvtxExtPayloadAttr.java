// Targeted by JavaCPP version 1.5.13-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.cuda.cupti;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import org.bytedeco.cuda.cudart.*;
import static org.bytedeco.cuda.global.cudart.*;

import static org.bytedeco.cuda.global.cupti.*;


@Properties(inherit = org.bytedeco.cuda.presets.cupti.class)
public class CUpti_NvtxExtPayloadAttr extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public CUpti_NvtxExtPayloadAttr() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CUpti_NvtxExtPayloadAttr(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CUpti_NvtxExtPayloadAttr(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CUpti_NvtxExtPayloadAttr position(long position) {
        return (CUpti_NvtxExtPayloadAttr)super.position(position);
    }
    @Override public CUpti_NvtxExtPayloadAttr getPointer(long i) {
        return new CUpti_NvtxExtPayloadAttr((Pointer)this).offsetAddress(i);
    }

  /**
   * Size of the struct in bytes.
   */
  public native @Cast("uint32_t") int structSize(); public native CUpti_NvtxExtPayloadAttr structSize(int setter);

  /**
   * The payload type. \ref CUpti_NvtxExtPayloadType
   */
  public native @Cast("uint32_t") int type(); public native CUpti_NvtxExtPayloadAttr type(int setter);

  /**
   * The attributes of the payload.
   * Depending on the type, typecast the pointer:
   * CUPTI_NVTX_EXT_PAYLOAD_TYPE_SCHEMA: nvtxPayloadSchemaAttr_t
   * CUPTI_NVTX_EXT_PAYLOAD_TYPE_ENUM: nvtxPayloadEnumAttr_t
   */
  public native Pointer attributes(); public native CUpti_NvtxExtPayloadAttr attributes(Pointer setter);
}
