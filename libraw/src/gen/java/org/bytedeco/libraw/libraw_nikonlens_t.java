// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_nikonlens_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_nikonlens_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_nikonlens_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_nikonlens_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_nikonlens_t position(long position) {
          return (libraw_nikonlens_t)super.position(position);
      }
      @Override public libraw_nikonlens_t getPointer(long i) {
          return new libraw_nikonlens_t((Pointer)this).offsetAddress(i);
      }
  
    public native float EffectiveMaxAp(); public native libraw_nikonlens_t EffectiveMaxAp(float setter);
    public native @Cast("uchar") byte LensIDNumber(); public native libraw_nikonlens_t LensIDNumber(byte setter);
    public native @Cast("uchar") byte LensFStops(); public native libraw_nikonlens_t LensFStops(byte setter);
    public native @Cast("uchar") byte MCUVersion(); public native libraw_nikonlens_t MCUVersion(byte setter);
    public native @Cast("uchar") byte LensType(); public native libraw_nikonlens_t LensType(byte setter);
  }
