// Targeted by JavaCPP version 1.5.9: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_lensinfo_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_lensinfo_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_lensinfo_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_lensinfo_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_lensinfo_t position(long position) {
          return (libraw_lensinfo_t)super.position(position);
      }
      @Override public libraw_lensinfo_t getPointer(long i) {
          return new libraw_lensinfo_t((Pointer)this).offsetAddress(i);
      }
  
    public native float MinFocal(); public native libraw_lensinfo_t MinFocal(float setter);
    public native float MaxFocal(); public native libraw_lensinfo_t MaxFocal(float setter);
    public native float MaxAp4MinFocal(); public native libraw_lensinfo_t MaxAp4MinFocal(float setter);
    public native float MaxAp4MaxFocal(); public native libraw_lensinfo_t MaxAp4MaxFocal(float setter);
    public native float EXIF_MaxAp(); public native libraw_lensinfo_t EXIF_MaxAp(float setter);
    public native @Cast("char") byte LensMake(int i); public native libraw_lensinfo_t LensMake(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer LensMake();
    public native @Cast("char") byte Lens(int i); public native libraw_lensinfo_t Lens(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer Lens();
    public native @Cast("char") byte LensSerial(int i); public native libraw_lensinfo_t LensSerial(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer LensSerial();
    public native @Cast("char") byte InternalLensSerial(int i); public native libraw_lensinfo_t InternalLensSerial(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer InternalLensSerial();
    public native @Cast("ushort") short FocalLengthIn35mmFormat(); public native libraw_lensinfo_t FocalLengthIn35mmFormat(short setter);
    public native @ByRef libraw_nikonlens_t nikon(); public native libraw_lensinfo_t nikon(libraw_nikonlens_t setter);
    public native @ByRef libraw_dnglens_t dng(); public native libraw_lensinfo_t dng(libraw_dnglens_t setter);
    public native @ByRef libraw_makernotes_lens_t makernotes(); public native libraw_lensinfo_t makernotes(libraw_makernotes_lens_t setter);
  }
