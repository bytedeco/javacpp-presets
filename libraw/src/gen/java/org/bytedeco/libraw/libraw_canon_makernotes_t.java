// Targeted by JavaCPP version 1.5.9-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_canon_makernotes_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_canon_makernotes_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_canon_makernotes_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_canon_makernotes_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_canon_makernotes_t position(long position) {
          return (libraw_canon_makernotes_t)super.position(position);
      }
      @Override public libraw_canon_makernotes_t getPointer(long i) {
          return new libraw_canon_makernotes_t((Pointer)this).offsetAddress(i);
      }
  
    public native int ColorDataVer(); public native libraw_canon_makernotes_t ColorDataVer(int setter);
    public native int ColorDataSubVer(); public native libraw_canon_makernotes_t ColorDataSubVer(int setter);
    public native int SpecularWhiteLevel(); public native libraw_canon_makernotes_t SpecularWhiteLevel(int setter);
    public native int NormalWhiteLevel(); public native libraw_canon_makernotes_t NormalWhiteLevel(int setter);
    public native int ChannelBlackLevel(int i); public native libraw_canon_makernotes_t ChannelBlackLevel(int i, int setter);
    @MemberGetter public native IntPointer ChannelBlackLevel();
    public native int AverageBlackLevel(); public native libraw_canon_makernotes_t AverageBlackLevel(int setter);
    /* multishot */
    public native @Cast("unsigned int") int multishot(int i); public native libraw_canon_makernotes_t multishot(int i, int setter);
    @MemberGetter public native @Cast("unsigned int*") IntPointer multishot();
    /* metering */
    public native short MeteringMode(); public native libraw_canon_makernotes_t MeteringMode(short setter);
    public native short SpotMeteringMode(); public native libraw_canon_makernotes_t SpotMeteringMode(short setter);
    public native @Cast("uchar") byte FlashMeteringMode(); public native libraw_canon_makernotes_t FlashMeteringMode(byte setter);
    public native short FlashExposureLock(); public native libraw_canon_makernotes_t FlashExposureLock(short setter);
    public native short ExposureMode(); public native libraw_canon_makernotes_t ExposureMode(short setter);
    public native short AESetting(); public native libraw_canon_makernotes_t AESetting(short setter);
    public native @Cast("uchar") byte HighlightTonePriority(); public native libraw_canon_makernotes_t HighlightTonePriority(byte setter);
    /* stabilization */
    public native short ImageStabilization(); public native libraw_canon_makernotes_t ImageStabilization(short setter);
    /* focus */
    public native short FocusMode(); public native libraw_canon_makernotes_t FocusMode(short setter);
    public native short AFPoint(); public native libraw_canon_makernotes_t AFPoint(short setter);
    public native short FocusContinuous(); public native libraw_canon_makernotes_t FocusContinuous(short setter);
    public native short AFPointsInFocus30D(); public native libraw_canon_makernotes_t AFPointsInFocus30D(short setter);
    public native @Cast("uchar") byte AFPointsInFocus1D(int i); public native libraw_canon_makernotes_t AFPointsInFocus1D(int i, byte setter);
    @MemberGetter public native @Cast("uchar*") BytePointer AFPointsInFocus1D();
    public native @Cast("ushort") short AFPointsInFocus5D(); public native libraw_canon_makernotes_t AFPointsInFocus5D(short setter); /* bytes in reverse*/
                              /* AFInfo */
    public native @Cast("ushort") short AFAreaMode(); public native libraw_canon_makernotes_t AFAreaMode(short setter);
    public native @Cast("ushort") short NumAFPoints(); public native libraw_canon_makernotes_t NumAFPoints(short setter);
    public native @Cast("ushort") short ValidAFPoints(); public native libraw_canon_makernotes_t ValidAFPoints(short setter);
    public native @Cast("ushort") short AFImageWidth(); public native libraw_canon_makernotes_t AFImageWidth(short setter);
    public native @Cast("ushort") short AFImageHeight(); public native libraw_canon_makernotes_t AFImageHeight(short setter);
    public native short AFAreaWidths(int i); public native libraw_canon_makernotes_t AFAreaWidths(int i, short setter);
    @MemberGetter public native ShortPointer AFAreaWidths();     /* cycle to NumAFPoints */
    public native short AFAreaHeights(int i); public native libraw_canon_makernotes_t AFAreaHeights(int i, short setter);
    @MemberGetter public native ShortPointer AFAreaHeights();    /* --''--               */
    public native short AFAreaXPositions(int i); public native libraw_canon_makernotes_t AFAreaXPositions(int i, short setter);
    @MemberGetter public native ShortPointer AFAreaXPositions(); /* --''--               */
    public native short AFAreaYPositions(int i); public native libraw_canon_makernotes_t AFAreaYPositions(int i, short setter);
    @MemberGetter public native ShortPointer AFAreaYPositions(); /* --''--               */
    public native short AFPointsInFocus(int i); public native libraw_canon_makernotes_t AFPointsInFocus(int i, short setter);
    @MemberGetter public native ShortPointer AFPointsInFocus();   /* cycle to floor((NumAFPoints+15)/16) */
    public native short AFPointsSelected(int i); public native libraw_canon_makernotes_t AFPointsSelected(int i, short setter);
    @MemberGetter public native ShortPointer AFPointsSelected();  /* --''--               */
    public native @Cast("ushort") short PrimaryAFPoint(); public native libraw_canon_makernotes_t PrimaryAFPoint(short setter);
    /* flash */
    public native short FlashMode(); public native libraw_canon_makernotes_t FlashMode(short setter);
    public native short FlashActivity(); public native libraw_canon_makernotes_t FlashActivity(short setter);
    public native short FlashBits(); public native libraw_canon_makernotes_t FlashBits(short setter);
    public native short ManualFlashOutput(); public native libraw_canon_makernotes_t ManualFlashOutput(short setter);
    public native short FlashOutput(); public native libraw_canon_makernotes_t FlashOutput(short setter);
    public native short FlashGuideNumber(); public native libraw_canon_makernotes_t FlashGuideNumber(short setter);
    /* drive */
    public native short ContinuousDrive(); public native libraw_canon_makernotes_t ContinuousDrive(short setter);
    /* sensor */
    public native short SensorWidth(); public native libraw_canon_makernotes_t SensorWidth(short setter);
    public native short SensorHeight(); public native libraw_canon_makernotes_t SensorHeight(short setter);
    public native short SensorLeftBorder(); public native libraw_canon_makernotes_t SensorLeftBorder(short setter);
    public native short SensorTopBorder(); public native libraw_canon_makernotes_t SensorTopBorder(short setter);
    public native short SensorRightBorder(); public native libraw_canon_makernotes_t SensorRightBorder(short setter);
    public native short SensorBottomBorder(); public native libraw_canon_makernotes_t SensorBottomBorder(short setter);
    public native short BlackMaskLeftBorder(); public native libraw_canon_makernotes_t BlackMaskLeftBorder(short setter);
    public native short BlackMaskTopBorder(); public native libraw_canon_makernotes_t BlackMaskTopBorder(short setter);
    public native short BlackMaskRightBorder(); public native libraw_canon_makernotes_t BlackMaskRightBorder(short setter);
    public native short BlackMaskBottomBorder(); public native libraw_canon_makernotes_t BlackMaskBottomBorder(short setter);
    public native int AFMicroAdjMode(); public native libraw_canon_makernotes_t AFMicroAdjMode(int setter);
    public native float AFMicroAdjValue(); public native libraw_canon_makernotes_t AFMicroAdjValue(float setter);
    public native short MakernotesFlip(); public native libraw_canon_makernotes_t MakernotesFlip(short setter);
    public native short RecordMode(); public native libraw_canon_makernotes_t RecordMode(short setter);
    public native short SRAWQuality(); public native libraw_canon_makernotes_t SRAWQuality(short setter);
    public native @Cast("unsigned") int wbi(); public native libraw_canon_makernotes_t wbi(int setter);
    public native float firmware(); public native libraw_canon_makernotes_t firmware(float setter);
    public native short RF_lensID(); public native libraw_canon_makernotes_t RF_lensID(short setter);
  }
