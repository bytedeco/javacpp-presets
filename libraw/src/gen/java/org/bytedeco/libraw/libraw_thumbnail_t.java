// Targeted by JavaCPP version 1.5.9: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_thumbnail_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_thumbnail_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_thumbnail_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_thumbnail_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_thumbnail_t position(long position) {
          return (libraw_thumbnail_t)super.position(position);
      }
      @Override public libraw_thumbnail_t getPointer(long i) {
          return new libraw_thumbnail_t((Pointer)this).offsetAddress(i);
      }
  
    public native LibRaw_thumbnail_formats tformat(); public native libraw_thumbnail_t tformat(LibRaw_thumbnail_formats setter);
    public native @Cast("ushort") short twidth(); public native libraw_thumbnail_t twidth(short setter);
    public native @Cast("ushort") short theight(); public native libraw_thumbnail_t theight(short setter);
    public native @Cast("unsigned") int tlength(); public native libraw_thumbnail_t tlength(int setter);
    public native int tcolors(); public native libraw_thumbnail_t tcolors(int setter);
    public native @Cast("char*") BytePointer thumb(); public native libraw_thumbnail_t thumb(BytePointer setter);
  }
