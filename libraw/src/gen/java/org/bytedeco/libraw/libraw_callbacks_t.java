// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_callbacks_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_callbacks_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_callbacks_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_callbacks_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_callbacks_t position(long position) {
          return (libraw_callbacks_t)super.position(position);
      }
      @Override public libraw_callbacks_t getPointer(long i) {
          return new libraw_callbacks_t((Pointer)this).offsetAddress(i);
      }
  
    public native data_callback data_cb(); public native libraw_callbacks_t data_cb(data_callback setter);
    public native Pointer datacb_data(); public native libraw_callbacks_t datacb_data(Pointer setter);

    public native progress_callback progress_cb(); public native libraw_callbacks_t progress_cb(progress_callback setter);
    public native Pointer progresscb_data(); public native libraw_callbacks_t progresscb_data(Pointer setter);

    public native exif_parser_callback exif_cb(); public native libraw_callbacks_t exif_cb(exif_parser_callback setter);
    public native Pointer exifparser_data(); public native libraw_callbacks_t exifparser_data(Pointer setter);
    public native pre_identify_callback pre_identify_cb(); public native libraw_callbacks_t pre_identify_cb(pre_identify_callback setter);
    public native post_identify_callback post_identify_cb(); public native libraw_callbacks_t post_identify_cb(post_identify_callback setter);
    public native process_step_callback pre_subtractblack_cb(); public native libraw_callbacks_t pre_subtractblack_cb(process_step_callback setter);
    public native process_step_callback pre_scalecolors_cb(); public native libraw_callbacks_t pre_scalecolors_cb(process_step_callback setter);
    public native process_step_callback pre_preinterpolate_cb(); public native libraw_callbacks_t pre_preinterpolate_cb(process_step_callback setter);
    public native process_step_callback pre_interpolate_cb(); public native libraw_callbacks_t pre_interpolate_cb(process_step_callback setter);
    public native process_step_callback interpolate_bayer_cb(); public native libraw_callbacks_t interpolate_bayer_cb(process_step_callback setter);
    public native process_step_callback interpolate_xtrans_cb(); public native libraw_callbacks_t interpolate_xtrans_cb(process_step_callback setter);
    public native process_step_callback post_interpolate_cb(); public native libraw_callbacks_t post_interpolate_cb(process_step_callback setter);
    public native process_step_callback pre_converttorgb_cb(); public native libraw_callbacks_t pre_converttorgb_cb(process_step_callback setter);
    public native process_step_callback post_converttorgb_cb(); public native libraw_callbacks_t post_converttorgb_cb(process_step_callback setter);
  }
