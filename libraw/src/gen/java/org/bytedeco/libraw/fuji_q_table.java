// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class fuji_q_table extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public fuji_q_table() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public fuji_q_table(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public fuji_q_table(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public fuji_q_table position(long position) {
          return (fuji_q_table)super.position(position);
      }
      @Override public fuji_q_table getPointer(long i) {
          return new fuji_q_table((Pointer)this).offsetAddress(i);
      }
  
    public native @Cast("int8_t*") BytePointer q_table(); public native fuji_q_table q_table(BytePointer setter); /* quantization table */
    public native int raw_bits(); public native fuji_q_table raw_bits(int setter);
    public native int total_values(); public native fuji_q_table total_values(int setter);
    public native int max_grad(); public native fuji_q_table max_grad(int setter);    // sdp val
    public native int q_grad_mult(); public native fuji_q_table q_grad_mult(int setter); // quant_gradient multiplier
    public native int q_base(); public native fuji_q_table q_base(int setter);
  }
