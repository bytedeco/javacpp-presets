// Targeted by JavaCPP version 1.5.9: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_data_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_data_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_data_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_data_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_data_t position(long position) {
          return (libraw_data_t)super.position(position);
      }
      @Override public libraw_data_t getPointer(long i) {
          return new libraw_data_t((Pointer)this).offsetAddress(i);
      }
  
    public native @Cast("ushort") short image(int i, int j); public native libraw_data_t image(int i, int j, short setter);
    @MemberGetter public native @Cast("ushort*") ShortPointer image();
    public native @ByRef libraw_image_sizes_t sizes(); public native libraw_data_t sizes(libraw_image_sizes_t setter);
    public native @ByRef libraw_iparams_t idata(); public native libraw_data_t idata(libraw_iparams_t setter);
    public native @ByRef libraw_lensinfo_t lens(); public native libraw_data_t lens(libraw_lensinfo_t setter);
    public native @ByRef libraw_makernotes_t makernotes(); public native libraw_data_t makernotes(libraw_makernotes_t setter);
    public native @ByRef libraw_shootinginfo_t shootinginfo(); public native libraw_data_t shootinginfo(libraw_shootinginfo_t setter);
    public native @ByRef libraw_output_params_t params(); public native libraw_data_t params(libraw_output_params_t setter);
    public native @ByRef libraw_raw_unpack_params_t rawparams(); public native libraw_data_t rawparams(libraw_raw_unpack_params_t setter);
    public native @Cast("unsigned int") int progress_flags(); public native libraw_data_t progress_flags(int setter);
    public native @Cast("unsigned int") int process_warnings(); public native libraw_data_t process_warnings(int setter);
    public native @ByRef libraw_colordata_t color(); public native libraw_data_t color(libraw_colordata_t setter);
    public native @ByRef libraw_imgother_t other(); public native libraw_data_t other(libraw_imgother_t setter);
    public native @ByRef libraw_thumbnail_t thumbnail(); public native libraw_data_t thumbnail(libraw_thumbnail_t setter);
	public native @ByRef libraw_thumbnail_list_t thumbs_list(); public native libraw_data_t thumbs_list(libraw_thumbnail_list_t setter);
    public native @ByRef libraw_rawdata_t rawdata(); public native libraw_data_t rawdata(libraw_rawdata_t setter);
    public native Pointer parent_class(); public native libraw_data_t parent_class(Pointer setter);
  }
