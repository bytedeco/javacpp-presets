// Targeted by JavaCPP version 1.5.9: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_hasselblad_makernotes_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_hasselblad_makernotes_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_hasselblad_makernotes_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_hasselblad_makernotes_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_hasselblad_makernotes_t position(long position) {
          return (libraw_hasselblad_makernotes_t)super.position(position);
      }
      @Override public libraw_hasselblad_makernotes_t getPointer(long i) {
          return new libraw_hasselblad_makernotes_t((Pointer)this).offsetAddress(i);
      }
  
    public native int BaseISO(); public native libraw_hasselblad_makernotes_t BaseISO(int setter);
    public native double Gain(); public native libraw_hasselblad_makernotes_t Gain(double setter);
    public native @Cast("char") byte Sensor(int i); public native libraw_hasselblad_makernotes_t Sensor(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer Sensor();
    public native @Cast("char") byte SensorUnit(int i); public native libraw_hasselblad_makernotes_t SensorUnit(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer SensorUnit(); // SU
    public native @Cast("char") byte HostBody(int i); public native libraw_hasselblad_makernotes_t HostBody(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer HostBody();   // HB
    public native int SensorCode(); public native libraw_hasselblad_makernotes_t SensorCode(int setter);
    public native int SensorSubCode(); public native libraw_hasselblad_makernotes_t SensorSubCode(int setter);
    public native int CoatingCode(); public native libraw_hasselblad_makernotes_t CoatingCode(int setter);
    public native int uncropped(); public native libraw_hasselblad_makernotes_t uncropped(int setter);

/* CaptureSequenceInitiator is based on the content of the 'model' tag
  - values like 'Pinhole', 'Flash Sync', '500 Mech.' etc in .3FR 'model' tag
    come from MAIN MENU > SETTINGS > Camera;
  - otherwise 'model' contains:
    1. if CF/CFV/CFH, SU enclosure, can be with SU type if '-' is present
    2. else if '-' is present, HB + SU type;
    3. HB;
*/
    public native @Cast("char") byte CaptureSequenceInitiator(int i); public native libraw_hasselblad_makernotes_t CaptureSequenceInitiator(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer CaptureSequenceInitiator();

/* SensorUnitConnector, makernotes 0x0015 tag:
 - in .3FR - SU side
 - in .FFF - HB side
*/
    public native @Cast("char") byte SensorUnitConnector(int i); public native libraw_hasselblad_makernotes_t SensorUnitConnector(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer SensorUnitConnector();

    public native int format(); public native libraw_hasselblad_makernotes_t format(int setter); // 3FR, FFF, Imacon (H3D-39 and maybe others), Hasselblad/Phocus DNG, Adobe DNG
    public native int nIFD_CM(int i); public native libraw_hasselblad_makernotes_t nIFD_CM(int i, int setter);
    @MemberGetter public native IntPointer nIFD_CM(); // number of IFD containing CM
    public native int RecommendedCrop(int i); public native libraw_hasselblad_makernotes_t RecommendedCrop(int i, int setter);
    @MemberGetter public native IntPointer RecommendedCrop();

/* mnColorMatrix is in makernotes tag 0x002a;
  not present in .3FR files and Imacon/H3D-39 .FFF files;
  when present in .FFF and Phocus .DNG files, it is a copy of CM1 from .3FR;
  available samples contain all '1's in the first 3 elements
*/
    public native double mnColorMatrix(int i, int j); public native libraw_hasselblad_makernotes_t mnColorMatrix(int i, int j, double setter);
    @MemberGetter public native @Cast("double(* /*[4]*/ )[3]") DoublePointer mnColorMatrix();

  }
