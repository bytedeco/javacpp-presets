// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_iparams_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_iparams_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_iparams_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_iparams_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_iparams_t position(long position) {
          return (libraw_iparams_t)super.position(position);
      }
      @Override public libraw_iparams_t getPointer(long i) {
          return new libraw_iparams_t((Pointer)this).offsetAddress(i);
      }
  
    public native @Cast("char") byte guard(int i); public native libraw_iparams_t guard(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer guard();
    public native @Cast("char") byte make(int i); public native libraw_iparams_t make(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer make();
    public native @Cast("char") byte model(int i); public native libraw_iparams_t model(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer model();
    public native @Cast("char") byte software(int i); public native libraw_iparams_t software(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer software();
    public native @Cast("char") byte normalized_make(int i); public native libraw_iparams_t normalized_make(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer normalized_make();
    public native @Cast("char") byte normalized_model(int i); public native libraw_iparams_t normalized_model(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer normalized_model();
    public native @Cast("unsigned") int maker_index(); public native libraw_iparams_t maker_index(int setter);
    public native @Cast("unsigned") int raw_count(); public native libraw_iparams_t raw_count(int setter);
    public native @Cast("unsigned") int dng_version(); public native libraw_iparams_t dng_version(int setter);
    public native @Cast("unsigned") int is_foveon(); public native libraw_iparams_t is_foveon(int setter);
    public native int colors(); public native libraw_iparams_t colors(int setter);
    public native @Cast("unsigned") int filters(); public native libraw_iparams_t filters(int setter);
    public native @Cast("char") byte xtrans(int i, int j); public native libraw_iparams_t xtrans(int i, int j, byte setter);
    @MemberGetter public native @Cast("char(* /*[6]*/ )[6]") BytePointer xtrans();
    public native @Cast("char") byte xtrans_abs(int i, int j); public native libraw_iparams_t xtrans_abs(int i, int j, byte setter);
    @MemberGetter public native @Cast("char(* /*[6]*/ )[6]") BytePointer xtrans_abs();
    public native @Cast("char") byte cdesc(int i); public native libraw_iparams_t cdesc(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer cdesc();
    public native @Cast("unsigned") int xmplen(); public native libraw_iparams_t xmplen(int setter);
    public native @Cast("char*") BytePointer xmpdata(); public native libraw_iparams_t xmpdata(BytePointer setter);

  }
