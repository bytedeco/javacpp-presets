// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_internal_output_params_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_internal_output_params_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_internal_output_params_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_internal_output_params_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_internal_output_params_t position(long position) {
          return (libraw_internal_output_params_t)super.position(position);
      }
      @Override public libraw_internal_output_params_t getPointer(long i) {
          return new libraw_internal_output_params_t((Pointer)this).offsetAddress(i);
      }
  
    public native @Cast("unsigned") int mix_green(); public native libraw_internal_output_params_t mix_green(int setter);
    public native @Cast("unsigned") int raw_color(); public native libraw_internal_output_params_t raw_color(int setter);
    public native @Cast("unsigned") int zero_is_bad(); public native libraw_internal_output_params_t zero_is_bad(int setter);
    public native @Cast("ushort") short shrink(); public native libraw_internal_output_params_t shrink(short setter);
    public native @Cast("ushort") short fuji_width(); public native libraw_internal_output_params_t fuji_width(short setter);
  }
