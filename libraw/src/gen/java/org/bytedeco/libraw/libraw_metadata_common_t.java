// Targeted by JavaCPP version 1.5.11-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.libraw;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;

import static org.bytedeco.libraw.global.LibRaw.*;


  @Properties(inherit = org.bytedeco.libraw.presets.LibRaw.class)
public class libraw_metadata_common_t extends Pointer {
      static { Loader.load(); }
      /** Default native constructor. */
      public libraw_metadata_common_t() { super((Pointer)null); allocate(); }
      /** Native array allocator. Access with {@link Pointer#position(long)}. */
      public libraw_metadata_common_t(long size) { super((Pointer)null); allocateArray(size); }
      /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
      public libraw_metadata_common_t(Pointer p) { super(p); }
      private native void allocate();
      private native void allocateArray(long size);
      @Override public libraw_metadata_common_t position(long position) {
          return (libraw_metadata_common_t)super.position(position);
      }
      @Override public libraw_metadata_common_t getPointer(long i) {
          return new libraw_metadata_common_t((Pointer)this).offsetAddress(i);
      }
  
    public native float FlashEC(); public native libraw_metadata_common_t FlashEC(float setter);
    public native float FlashGN(); public native libraw_metadata_common_t FlashGN(float setter);
    public native float CameraTemperature(); public native libraw_metadata_common_t CameraTemperature(float setter);
    public native float SensorTemperature(); public native libraw_metadata_common_t SensorTemperature(float setter);
    public native float SensorTemperature2(); public native libraw_metadata_common_t SensorTemperature2(float setter);
    public native float LensTemperature(); public native libraw_metadata_common_t LensTemperature(float setter);
    public native float AmbientTemperature(); public native libraw_metadata_common_t AmbientTemperature(float setter);
    public native float BatteryTemperature(); public native libraw_metadata_common_t BatteryTemperature(float setter);
    public native float exifAmbientTemperature(); public native libraw_metadata_common_t exifAmbientTemperature(float setter);
    public native float exifHumidity(); public native libraw_metadata_common_t exifHumidity(float setter);
    public native float exifPressure(); public native libraw_metadata_common_t exifPressure(float setter);
    public native float exifWaterDepth(); public native libraw_metadata_common_t exifWaterDepth(float setter);
    public native float exifAcceleration(); public native libraw_metadata_common_t exifAcceleration(float setter);
    public native float exifCameraElevationAngle(); public native libraw_metadata_common_t exifCameraElevationAngle(float setter);
    public native float real_ISO(); public native libraw_metadata_common_t real_ISO(float setter);
    public native float exifExposureIndex(); public native libraw_metadata_common_t exifExposureIndex(float setter);
    public native @Cast("ushort") short ColorSpace(); public native libraw_metadata_common_t ColorSpace(short setter);
    public native @Cast("char") byte firmware(int i); public native libraw_metadata_common_t firmware(int i, byte setter);
    @MemberGetter public native @Cast("char*") BytePointer firmware();
    public native float ExposureCalibrationShift(); public native libraw_metadata_common_t ExposureCalibrationShift(float setter);
    public native @ByRef libraw_afinfo_item_t afdata(int i); public native libraw_metadata_common_t afdata(int i, libraw_afinfo_item_t setter);
    @MemberGetter public native libraw_afinfo_item_t afdata();
    public native int afcount(); public native libraw_metadata_common_t afcount(int setter);
  }
