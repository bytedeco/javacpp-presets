// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.caffe;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.opencv.opencv_core.*;
import static org.bytedeco.opencv.global.opencv_core.*;
import org.bytedeco.opencv.opencv_imgproc.*;
import static org.bytedeco.opencv.global.opencv_imgproc.*;
import static org.bytedeco.opencv.global.opencv_imgcodecs.*;
import org.bytedeco.opencv.opencv_videoio.*;
import static org.bytedeco.opencv.global.opencv_videoio.*;
import org.bytedeco.opencv.opencv_highgui.*;
import static org.bytedeco.opencv.global.opencv_highgui.*;
import org.bytedeco.hdf5.*;
import static org.bytedeco.hdf5.global.hdf5.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;

import static org.bytedeco.caffe.global.caffe.*;

// -------------------------------------------------------------------

@Namespace("caffe") @NoOffset @Properties(inherit = org.bytedeco.caffe.presets.caffe.class)
public class V1LayerParameter extends Message {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public V1LayerParameter(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public V1LayerParameter(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public V1LayerParameter position(long position) {
        return (V1LayerParameter)super.position(position);
    }

  public V1LayerParameter() { super((Pointer)null); allocate(); }
  private native void allocate();

  public V1LayerParameter(@Const @ByRef V1LayerParameter from) { super((Pointer)null); allocate(from); }
  private native void allocate(@Const @ByRef V1LayerParameter from);

  public native @ByRef @Name("operator =") V1LayerParameter put(@Const @ByRef V1LayerParameter from);
//   #if LANG_CXX11
//   #endif
  public native @Const @ByRef UnknownFieldSet unknown_fields();
  public native UnknownFieldSet mutable_unknown_fields();

  public static native @Const Descriptor descriptor();
  public static native @Const @ByRef V1LayerParameter default_instance();

  public static native void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  public static native @Const V1LayerParameter internal_default_instance();
  @MemberGetter public static native int kIndexInFileMessages();
  public static final int kIndexInFileMessages = kIndexInFileMessages();

  public native void Swap(V1LayerParameter other);
  

  // implements Message ----------------------------------------------

  public native final V1LayerParameter New();

  public native final V1LayerParameter New(Arena arena);
  public native final void CopyFrom(@Const @ByRef Message from);
  public native final void MergeFrom(@Const @ByRef Message from);
  public native void CopyFrom(@Const @ByRef V1LayerParameter from);
  public native void MergeFrom(@Const @ByRef V1LayerParameter from);
  public native final void Clear();
  public native @Cast("bool") final boolean IsInitialized();

  public native @Cast("size_t") final long ByteSizeLong();
  public native @Cast("bool") final boolean MergePartialFromCodedStream(
        CodedInputStream input);
  public native final void SerializeWithCachedSizes(
        CodedOutputStream output);
  public native @Cast("google::protobuf::uint8*") final BytePointer InternalSerializeWithCachedSizesToArray(
        @Cast("bool") boolean deterministic, @Cast("google::protobuf::uint8*") BytePointer target);
  public native @Cast("google::protobuf::uint8*") final ByteBuffer InternalSerializeWithCachedSizesToArray(
        @Cast("bool") boolean deterministic, @Cast("google::protobuf::uint8*") ByteBuffer target);
  public native @Cast("google::protobuf::uint8*") final byte[] InternalSerializeWithCachedSizesToArray(
        @Cast("bool") boolean deterministic, @Cast("google::protobuf::uint8*") byte[] target);
  public native final int GetCachedSize();

  public native @ByVal final Metadata GetMetadata();

  // nested types ----------------------------------------------------
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int NONE();
  public static final int NONE = NONE();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int ABSVAL();
  public static final int ABSVAL = ABSVAL();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int ACCURACY();
  public static final int ACCURACY = ACCURACY();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int ARGMAX();
  public static final int ARGMAX = ARGMAX();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int BNLL();
  public static final int BNLL = BNLL();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int CONCAT();
  public static final int CONCAT = CONCAT();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int CONTRASTIVE_LOSS();
  public static final int CONTRASTIVE_LOSS = CONTRASTIVE_LOSS();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int CONVOLUTION();
  public static final int CONVOLUTION = CONVOLUTION();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int DATA();
  public static final int DATA = DATA();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int DECONVOLUTION();
  public static final int DECONVOLUTION = DECONVOLUTION();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int DROPOUT();
  public static final int DROPOUT = DROPOUT();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int DUMMY_DATA();
  public static final int DUMMY_DATA = DUMMY_DATA();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int EUCLIDEAN_LOSS();
  public static final int EUCLIDEAN_LOSS = EUCLIDEAN_LOSS();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int ELTWISE();
  public static final int ELTWISE = ELTWISE();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int EXP();
  public static final int EXP = EXP();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int FLATTEN();
  public static final int FLATTEN = FLATTEN();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int HDF5_DATA();
  public static final int HDF5_DATA = HDF5_DATA();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int HDF5_OUTPUT();
  public static final int HDF5_OUTPUT = HDF5_OUTPUT();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int HINGE_LOSS();
  public static final int HINGE_LOSS = HINGE_LOSS();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int IM2COL();
  public static final int IM2COL = IM2COL();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int IMAGE_DATA();
  public static final int IMAGE_DATA = IMAGE_DATA();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int INFOGAIN_LOSS();
  public static final int INFOGAIN_LOSS = INFOGAIN_LOSS();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int INNER_PRODUCT();
  public static final int INNER_PRODUCT = INNER_PRODUCT();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int LRN();
  public static final int LRN = LRN();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int MEMORY_DATA();
  public static final int MEMORY_DATA = MEMORY_DATA();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int MULTINOMIAL_LOGISTIC_LOSS();
  public static final int MULTINOMIAL_LOGISTIC_LOSS = MULTINOMIAL_LOGISTIC_LOSS();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int MVN();
  public static final int MVN = MVN();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int POOLING();
  public static final int POOLING = POOLING();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int POWER();
  public static final int POWER = POWER();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int RELU();
  public static final int RELU = RELU();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int SIGMOID();
  public static final int SIGMOID = SIGMOID();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int SIGMOID_CROSS_ENTROPY_LOSS();
  public static final int SIGMOID_CROSS_ENTROPY_LOSS = SIGMOID_CROSS_ENTROPY_LOSS();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int SILENCE();
  public static final int SILENCE = SILENCE();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int SOFTMAX();
  public static final int SOFTMAX = SOFTMAX();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int SOFTMAX_LOSS();
  public static final int SOFTMAX_LOSS = SOFTMAX_LOSS();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int SPLIT();
  public static final int SPLIT = SPLIT();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int SLICE();
  public static final int SLICE = SLICE();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int TANH();
  public static final int TANH = TANH();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int WINDOW_DATA();
  public static final int WINDOW_DATA = WINDOW_DATA();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int THRESHOLD();
  public static final int THRESHOLD = THRESHOLD();
  public static native @Cast("bool") boolean LayerType_IsValid(int value);
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int LayerType_MIN();
  public static final int LayerType_MIN = LayerType_MIN();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::LayerType") int LayerType_MAX();
  public static final int LayerType_MAX = LayerType_MAX();
  @MemberGetter public static native int LayerType_ARRAYSIZE();
  public static final int LayerType_ARRAYSIZE = LayerType_ARRAYSIZE();
  public static native @Const EnumDescriptor LayerType_descriptor();
  public static native @StdString BytePointer LayerType_Name(@Cast("caffe::V1LayerParameter::LayerType") int value);
  public static native @Cast("bool") boolean LayerType_Parse(@StdString BytePointer name,
        @Cast("caffe::V1LayerParameter::LayerType*") IntPointer value);
  public static native @Cast("bool") boolean LayerType_Parse(@StdString String name,
        @Cast("caffe::V1LayerParameter::LayerType*") IntBuffer value);
  public static native @Cast("bool") boolean LayerType_Parse(@StdString BytePointer name,
        @Cast("caffe::V1LayerParameter::LayerType*") int[] value);
  public static native @Cast("bool") boolean LayerType_Parse(@StdString String name,
        @Cast("caffe::V1LayerParameter::LayerType*") IntPointer value);
  public static native @Cast("bool") boolean LayerType_Parse(@StdString BytePointer name,
        @Cast("caffe::V1LayerParameter::LayerType*") IntBuffer value);
  public static native @Cast("bool") boolean LayerType_Parse(@StdString String name,
        @Cast("caffe::V1LayerParameter::LayerType*") int[] value);
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::DimCheckMode") int STRICT();
  public static final int STRICT = STRICT();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::DimCheckMode") int PERMISSIVE();
  public static final int PERMISSIVE = PERMISSIVE();
  public static native @Cast("bool") boolean DimCheckMode_IsValid(int value);
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::DimCheckMode") int DimCheckMode_MIN();
  public static final int DimCheckMode_MIN = DimCheckMode_MIN();
  @MemberGetter public static native @Cast("const caffe::V1LayerParameter::DimCheckMode") int DimCheckMode_MAX();
  public static final int DimCheckMode_MAX = DimCheckMode_MAX();
  @MemberGetter public static native int DimCheckMode_ARRAYSIZE();
  public static final int DimCheckMode_ARRAYSIZE = DimCheckMode_ARRAYSIZE();
  public static native @Const EnumDescriptor DimCheckMode_descriptor();
  public static native @StdString BytePointer DimCheckMode_Name(@Cast("caffe::V1LayerParameter::DimCheckMode") int value);
  public static native @Cast("bool") boolean DimCheckMode_Parse(@StdString BytePointer name,
        @Cast("caffe::V1LayerParameter::DimCheckMode*") IntPointer value);
  public static native @Cast("bool") boolean DimCheckMode_Parse(@StdString String name,
        @Cast("caffe::V1LayerParameter::DimCheckMode*") IntBuffer value);
  public static native @Cast("bool") boolean DimCheckMode_Parse(@StdString BytePointer name,
        @Cast("caffe::V1LayerParameter::DimCheckMode*") int[] value);
  public static native @Cast("bool") boolean DimCheckMode_Parse(@StdString String name,
        @Cast("caffe::V1LayerParameter::DimCheckMode*") IntPointer value);
  public static native @Cast("bool") boolean DimCheckMode_Parse(@StdString BytePointer name,
        @Cast("caffe::V1LayerParameter::DimCheckMode*") IntBuffer value);
  public static native @Cast("bool") boolean DimCheckMode_Parse(@StdString String name,
        @Cast("caffe::V1LayerParameter::DimCheckMode*") int[] value);

  // accessors -------------------------------------------------------

  // repeated string bottom = 2;
  public native int bottom_size();
  public native void clear_bottom();
  @MemberGetter public static native int kBottomFieldNumber();
  public static final int kBottomFieldNumber = kBottomFieldNumber();
  public native @StdString BytePointer bottom(int index);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer mutable_bottom(int index);
  public native void set_bottom(int index, @StdString BytePointer value);
  public native void set_bottom(int index, @StdString String value);
//   #if LANG_CXX11
//   #endif
  public native void set_bottom(int index, @Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void set_bottom(int index, String value, @Cast("size_t") long size);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer add_bottom();
  public native void add_bottom(@StdString BytePointer value);
  public native void add_bottom(@StdString String value);
//   #if LANG_CXX11
//   #endif
  public native void add_bottom(@Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void add_bottom(String value, @Cast("size_t") long size);

  // repeated string top = 3;
  public native int top_size();
  public native void clear_top();
  @MemberGetter public static native int kTopFieldNumber();
  public static final int kTopFieldNumber = kTopFieldNumber();
  public native @StdString BytePointer top(int index);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer mutable_top(int index);
  public native void set_top(int index, @StdString BytePointer value);
  public native void set_top(int index, @StdString String value);
//   #if LANG_CXX11
//   #endif
  public native void set_top(int index, @Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void set_top(int index, String value, @Cast("size_t") long size);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer add_top();
  public native void add_top(@StdString BytePointer value);
  public native void add_top(@StdString String value);
//   #if LANG_CXX11
//   #endif
  public native void add_top(@Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void add_top(String value, @Cast("size_t") long size);

  // repeated .caffe.BlobProto blobs = 6;
  public native int blobs_size();
  public native void clear_blobs();
  @MemberGetter public static native int kBlobsFieldNumber();
  public static final int kBlobsFieldNumber = kBlobsFieldNumber();
  public native BlobProto mutable_blobs(int index);
  public native @Const @ByRef BlobProto blobs(int index);
  public native BlobProto add_blobs();

  // repeated float blobs_lr = 7;
  public native int blobs_lr_size();
  public native void clear_blobs_lr();
  @MemberGetter public static native int kBlobsLrFieldNumber();
  public static final int kBlobsLrFieldNumber = kBlobsLrFieldNumber();
  public native float blobs_lr(int index);
  public native void set_blobs_lr(int index, float value);
  public native void add_blobs_lr(float value);

  // repeated float weight_decay = 8;
  public native int weight_decay_size();
  public native void clear_weight_decay();
  @MemberGetter public static native int kWeightDecayFieldNumber();
  public static final int kWeightDecayFieldNumber = kWeightDecayFieldNumber();
  public native float weight_decay(int index);
  public native void set_weight_decay(int index, float value);
  public native void add_weight_decay(float value);

  // repeated .caffe.NetStateRule include = 32;
  public native int include_size();
  public native void clear_include();
  @MemberGetter public static native int kIncludeFieldNumber();
  public static final int kIncludeFieldNumber = kIncludeFieldNumber();
  public native NetStateRule mutable_include(int index);
  public native @Const @ByRef NetStateRule include(int index);
  public native NetStateRule add_include();

  // repeated .caffe.NetStateRule exclude = 33;
  public native int exclude_size();
  public native void clear_exclude();
  @MemberGetter public static native int kExcludeFieldNumber();
  public static final int kExcludeFieldNumber = kExcludeFieldNumber();
  public native NetStateRule mutable_exclude(int index);
  public native @Const @ByRef NetStateRule exclude(int index);
  public native NetStateRule add_exclude();

  // repeated float loss_weight = 35;
  public native int loss_weight_size();
  public native void clear_loss_weight();
  @MemberGetter public static native int kLossWeightFieldNumber();
  public static final int kLossWeightFieldNumber = kLossWeightFieldNumber();
  public native float loss_weight(int index);
  public native void set_loss_weight(int index, float value);
  public native void add_loss_weight(float value);

  // repeated string param = 1001;
  public native int param_size();
  public native void clear_param();
  @MemberGetter public static native int kParamFieldNumber();
  public static final int kParamFieldNumber = kParamFieldNumber();
  public native @StdString BytePointer param(int index);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer mutable_param(int index);
  public native void set_param(int index, @StdString BytePointer value);
  public native void set_param(int index, @StdString String value);
//   #if LANG_CXX11
//   #endif
  public native void set_param(int index, @Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void set_param(int index, String value, @Cast("size_t") long size);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer add_param();
  public native void add_param(@StdString BytePointer value);
  public native void add_param(@StdString String value);
//   #if LANG_CXX11
//   #endif
  public native void add_param(@Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void add_param(String value, @Cast("size_t") long size);

  // repeated .caffe.V1LayerParameter.DimCheckMode blob_share_mode = 1002;
  public native int blob_share_mode_size();
  public native void clear_blob_share_mode();
  @MemberGetter public static native int kBlobShareModeFieldNumber();
  public static final int kBlobShareModeFieldNumber = kBlobShareModeFieldNumber();
  public native @Cast("caffe::V1LayerParameter_DimCheckMode") int blob_share_mode(int index);
  public native void set_blob_share_mode(int index, @Cast("caffe::V1LayerParameter_DimCheckMode") int value);
  public native void add_blob_share_mode(@Cast("caffe::V1LayerParameter_DimCheckMode") int value);

  // optional string name = 4;
  public native @Cast("bool") boolean has_name();
  public native void clear_name();
  @MemberGetter public static native int kNameFieldNumber();
  public static final int kNameFieldNumber = kNameFieldNumber();
  public native @StdString BytePointer name();
  public native void set_name(@StdString BytePointer value);
  public native void set_name(@StdString String value);
//   #if LANG_CXX11
//   #endif
  public native void set_name(@Cast("const char*") BytePointer value, @Cast("size_t") long size);
  public native void set_name(String value, @Cast("size_t") long size);
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer mutable_name();
  public native @StdString @Cast({"char*", "std::string*"}) BytePointer release_name();
  public native void set_allocated_name(@StdString @Cast({"char*", "std::string*"}) BytePointer name);

  // optional .caffe.V0LayerParameter layer = 1;
  public native @Cast("bool") boolean has_layer();
  public native void clear_layer();
  @MemberGetter public static native int kLayerFieldNumber();
  public static final int kLayerFieldNumber = kLayerFieldNumber();
  public native @Const @ByRef V0LayerParameter layer();
  public native V0LayerParameter release_layer();
  public native V0LayerParameter mutable_layer();
  public native void set_allocated_layer(V0LayerParameter layer);

  // optional .caffe.ConcatParameter concat_param = 9;
  public native @Cast("bool") boolean has_concat_param();
  public native void clear_concat_param();
  @MemberGetter public static native int kConcatParamFieldNumber();
  public static final int kConcatParamFieldNumber = kConcatParamFieldNumber();
  public native @Const @ByRef ConcatParameter concat_param();
  public native ConcatParameter release_concat_param();
  public native ConcatParameter mutable_concat_param();
  public native void set_allocated_concat_param(ConcatParameter concat_param);

  // optional .caffe.ConvolutionParameter convolution_param = 10;
  public native @Cast("bool") boolean has_convolution_param();
  public native void clear_convolution_param();
  @MemberGetter public static native int kConvolutionParamFieldNumber();
  public static final int kConvolutionParamFieldNumber = kConvolutionParamFieldNumber();
  public native @Const @ByRef ConvolutionParameter convolution_param();
  public native ConvolutionParameter release_convolution_param();
  public native ConvolutionParameter mutable_convolution_param();
  public native void set_allocated_convolution_param(ConvolutionParameter convolution_param);

  // optional .caffe.DataParameter data_param = 11;
  public native @Cast("bool") boolean has_data_param();
  public native void clear_data_param();
  @MemberGetter public static native int kDataParamFieldNumber();
  public static final int kDataParamFieldNumber = kDataParamFieldNumber();
  public native @Const @ByRef DataParameter data_param();
  public native DataParameter release_data_param();
  public native DataParameter mutable_data_param();
  public native void set_allocated_data_param(DataParameter data_param);

  // optional .caffe.DropoutParameter dropout_param = 12;
  public native @Cast("bool") boolean has_dropout_param();
  public native void clear_dropout_param();
  @MemberGetter public static native int kDropoutParamFieldNumber();
  public static final int kDropoutParamFieldNumber = kDropoutParamFieldNumber();
  public native @Const @ByRef DropoutParameter dropout_param();
  public native DropoutParameter release_dropout_param();
  public native DropoutParameter mutable_dropout_param();
  public native void set_allocated_dropout_param(DropoutParameter dropout_param);

  // optional .caffe.HDF5DataParameter hdf5_data_param = 13;
  public native @Cast("bool") boolean has_hdf5_data_param();
  public native void clear_hdf5_data_param();
  @MemberGetter public static native int kHdf5DataParamFieldNumber();
  public static final int kHdf5DataParamFieldNumber = kHdf5DataParamFieldNumber();
  public native @Const @ByRef HDF5DataParameter hdf5_data_param();
  public native HDF5DataParameter release_hdf5_data_param();
  public native HDF5DataParameter mutable_hdf5_data_param();
  public native void set_allocated_hdf5_data_param(HDF5DataParameter hdf5_data_param);

  // optional .caffe.HDF5OutputParameter hdf5_output_param = 14;
  public native @Cast("bool") boolean has_hdf5_output_param();
  public native void clear_hdf5_output_param();
  @MemberGetter public static native int kHdf5OutputParamFieldNumber();
  public static final int kHdf5OutputParamFieldNumber = kHdf5OutputParamFieldNumber();
  public native @Const @ByRef HDF5OutputParameter hdf5_output_param();
  public native HDF5OutputParameter release_hdf5_output_param();
  public native HDF5OutputParameter mutable_hdf5_output_param();
  public native void set_allocated_hdf5_output_param(HDF5OutputParameter hdf5_output_param);

  // optional .caffe.ImageDataParameter image_data_param = 15;
  public native @Cast("bool") boolean has_image_data_param();
  public native void clear_image_data_param();
  @MemberGetter public static native int kImageDataParamFieldNumber();
  public static final int kImageDataParamFieldNumber = kImageDataParamFieldNumber();
  public native @Const @ByRef ImageDataParameter image_data_param();
  public native ImageDataParameter release_image_data_param();
  public native ImageDataParameter mutable_image_data_param();
  public native void set_allocated_image_data_param(ImageDataParameter image_data_param);

  // optional .caffe.InfogainLossParameter infogain_loss_param = 16;
  public native @Cast("bool") boolean has_infogain_loss_param();
  public native void clear_infogain_loss_param();
  @MemberGetter public static native int kInfogainLossParamFieldNumber();
  public static final int kInfogainLossParamFieldNumber = kInfogainLossParamFieldNumber();
  public native @Const @ByRef InfogainLossParameter infogain_loss_param();
  public native InfogainLossParameter release_infogain_loss_param();
  public native InfogainLossParameter mutable_infogain_loss_param();
  public native void set_allocated_infogain_loss_param(InfogainLossParameter infogain_loss_param);

  // optional .caffe.InnerProductParameter inner_product_param = 17;
  public native @Cast("bool") boolean has_inner_product_param();
  public native void clear_inner_product_param();
  @MemberGetter public static native int kInnerProductParamFieldNumber();
  public static final int kInnerProductParamFieldNumber = kInnerProductParamFieldNumber();
  public native @Const @ByRef InnerProductParameter inner_product_param();
  public native InnerProductParameter release_inner_product_param();
  public native InnerProductParameter mutable_inner_product_param();
  public native void set_allocated_inner_product_param(InnerProductParameter inner_product_param);

  // optional .caffe.LRNParameter lrn_param = 18;
  public native @Cast("bool") boolean has_lrn_param();
  public native void clear_lrn_param();
  @MemberGetter public static native int kLrnParamFieldNumber();
  public static final int kLrnParamFieldNumber = kLrnParamFieldNumber();
  public native @Const @ByRef LRNParameter lrn_param();
  public native LRNParameter release_lrn_param();
  public native LRNParameter mutable_lrn_param();
  public native void set_allocated_lrn_param(LRNParameter lrn_param);

  // optional .caffe.PoolingParameter pooling_param = 19;
  public native @Cast("bool") boolean has_pooling_param();
  public native void clear_pooling_param();
  @MemberGetter public static native int kPoolingParamFieldNumber();
  public static final int kPoolingParamFieldNumber = kPoolingParamFieldNumber();
  public native @Const @ByRef PoolingParameter pooling_param();
  public native PoolingParameter release_pooling_param();
  public native PoolingParameter mutable_pooling_param();
  public native void set_allocated_pooling_param(PoolingParameter pooling_param);

  // optional .caffe.WindowDataParameter window_data_param = 20;
  public native @Cast("bool") boolean has_window_data_param();
  public native void clear_window_data_param();
  @MemberGetter public static native int kWindowDataParamFieldNumber();
  public static final int kWindowDataParamFieldNumber = kWindowDataParamFieldNumber();
  public native @Const @ByRef WindowDataParameter window_data_param();
  public native WindowDataParameter release_window_data_param();
  public native WindowDataParameter mutable_window_data_param();
  public native void set_allocated_window_data_param(WindowDataParameter window_data_param);

  // optional .caffe.PowerParameter power_param = 21;
  public native @Cast("bool") boolean has_power_param();
  public native void clear_power_param();
  @MemberGetter public static native int kPowerParamFieldNumber();
  public static final int kPowerParamFieldNumber = kPowerParamFieldNumber();
  public native @Const @ByRef PowerParameter power_param();
  public native PowerParameter release_power_param();
  public native PowerParameter mutable_power_param();
  public native void set_allocated_power_param(PowerParameter power_param);

  // optional .caffe.MemoryDataParameter memory_data_param = 22;
  public native @Cast("bool") boolean has_memory_data_param();
  public native void clear_memory_data_param();
  @MemberGetter public static native int kMemoryDataParamFieldNumber();
  public static final int kMemoryDataParamFieldNumber = kMemoryDataParamFieldNumber();
  public native @Const @ByRef MemoryDataParameter memory_data_param();
  public native MemoryDataParameter release_memory_data_param();
  public native MemoryDataParameter mutable_memory_data_param();
  public native void set_allocated_memory_data_param(MemoryDataParameter memory_data_param);

  // optional .caffe.ArgMaxParameter argmax_param = 23;
  public native @Cast("bool") boolean has_argmax_param();
  public native void clear_argmax_param();
  @MemberGetter public static native int kArgmaxParamFieldNumber();
  public static final int kArgmaxParamFieldNumber = kArgmaxParamFieldNumber();
  public native @Const @ByRef ArgMaxParameter argmax_param();
  public native ArgMaxParameter release_argmax_param();
  public native ArgMaxParameter mutable_argmax_param();
  public native void set_allocated_argmax_param(ArgMaxParameter argmax_param);

  // optional .caffe.EltwiseParameter eltwise_param = 24;
  public native @Cast("bool") boolean has_eltwise_param();
  public native void clear_eltwise_param();
  @MemberGetter public static native int kEltwiseParamFieldNumber();
  public static final int kEltwiseParamFieldNumber = kEltwiseParamFieldNumber();
  public native @Const @ByRef EltwiseParameter eltwise_param();
  public native EltwiseParameter release_eltwise_param();
  public native EltwiseParameter mutable_eltwise_param();
  public native void set_allocated_eltwise_param(EltwiseParameter eltwise_param);

  // optional .caffe.ThresholdParameter threshold_param = 25;
  public native @Cast("bool") boolean has_threshold_param();
  public native void clear_threshold_param();
  @MemberGetter public static native int kThresholdParamFieldNumber();
  public static final int kThresholdParamFieldNumber = kThresholdParamFieldNumber();
  public native @Const @ByRef ThresholdParameter threshold_param();
  public native ThresholdParameter release_threshold_param();
  public native ThresholdParameter mutable_threshold_param();
  public native void set_allocated_threshold_param(ThresholdParameter threshold_param);

  // optional .caffe.DummyDataParameter dummy_data_param = 26;
  public native @Cast("bool") boolean has_dummy_data_param();
  public native void clear_dummy_data_param();
  @MemberGetter public static native int kDummyDataParamFieldNumber();
  public static final int kDummyDataParamFieldNumber = kDummyDataParamFieldNumber();
  public native @Const @ByRef DummyDataParameter dummy_data_param();
  public native DummyDataParameter release_dummy_data_param();
  public native DummyDataParameter mutable_dummy_data_param();
  public native void set_allocated_dummy_data_param(DummyDataParameter dummy_data_param);

  // optional .caffe.AccuracyParameter accuracy_param = 27;
  public native @Cast("bool") boolean has_accuracy_param();
  public native void clear_accuracy_param();
  @MemberGetter public static native int kAccuracyParamFieldNumber();
  public static final int kAccuracyParamFieldNumber = kAccuracyParamFieldNumber();
  public native @Const @ByRef AccuracyParameter accuracy_param();
  public native AccuracyParameter release_accuracy_param();
  public native AccuracyParameter mutable_accuracy_param();
  public native void set_allocated_accuracy_param(AccuracyParameter accuracy_param);

  // optional .caffe.HingeLossParameter hinge_loss_param = 29;
  public native @Cast("bool") boolean has_hinge_loss_param();
  public native void clear_hinge_loss_param();
  @MemberGetter public static native int kHingeLossParamFieldNumber();
  public static final int kHingeLossParamFieldNumber = kHingeLossParamFieldNumber();
  public native @Const @ByRef HingeLossParameter hinge_loss_param();
  public native HingeLossParameter release_hinge_loss_param();
  public native HingeLossParameter mutable_hinge_loss_param();
  public native void set_allocated_hinge_loss_param(HingeLossParameter hinge_loss_param);

  // optional .caffe.ReLUParameter relu_param = 30;
  public native @Cast("bool") boolean has_relu_param();
  public native void clear_relu_param();
  @MemberGetter public static native int kReluParamFieldNumber();
  public static final int kReluParamFieldNumber = kReluParamFieldNumber();
  public native @Const @ByRef ReLUParameter relu_param();
  public native ReLUParameter release_relu_param();
  public native ReLUParameter mutable_relu_param();
  public native void set_allocated_relu_param(ReLUParameter relu_param);

  // optional .caffe.SliceParameter slice_param = 31;
  public native @Cast("bool") boolean has_slice_param();
  public native void clear_slice_param();
  @MemberGetter public static native int kSliceParamFieldNumber();
  public static final int kSliceParamFieldNumber = kSliceParamFieldNumber();
  public native @Const @ByRef SliceParameter slice_param();
  public native SliceParameter release_slice_param();
  public native SliceParameter mutable_slice_param();
  public native void set_allocated_slice_param(SliceParameter slice_param);

  // optional .caffe.MVNParameter mvn_param = 34;
  public native @Cast("bool") boolean has_mvn_param();
  public native void clear_mvn_param();
  @MemberGetter public static native int kMvnParamFieldNumber();
  public static final int kMvnParamFieldNumber = kMvnParamFieldNumber();
  public native @Const @ByRef MVNParameter mvn_param();
  public native MVNParameter release_mvn_param();
  public native MVNParameter mutable_mvn_param();
  public native void set_allocated_mvn_param(MVNParameter mvn_param);

  // optional .caffe.TransformationParameter transform_param = 36;
  public native @Cast("bool") boolean has_transform_param();
  public native void clear_transform_param();
  @MemberGetter public static native int kTransformParamFieldNumber();
  public static final int kTransformParamFieldNumber = kTransformParamFieldNumber();
  public native @Const @ByRef TransformationParameter transform_param();
  public native TransformationParameter release_transform_param();
  public native TransformationParameter mutable_transform_param();
  public native void set_allocated_transform_param(TransformationParameter transform_param);

  // optional .caffe.TanHParameter tanh_param = 37;
  public native @Cast("bool") boolean has_tanh_param();
  public native void clear_tanh_param();
  @MemberGetter public static native int kTanhParamFieldNumber();
  public static final int kTanhParamFieldNumber = kTanhParamFieldNumber();
  public native @Const @ByRef TanHParameter tanh_param();
  public native TanHParameter release_tanh_param();
  public native TanHParameter mutable_tanh_param();
  public native void set_allocated_tanh_param(TanHParameter tanh_param);

  // optional .caffe.SigmoidParameter sigmoid_param = 38;
  public native @Cast("bool") boolean has_sigmoid_param();
  public native void clear_sigmoid_param();
  @MemberGetter public static native int kSigmoidParamFieldNumber();
  public static final int kSigmoidParamFieldNumber = kSigmoidParamFieldNumber();
  public native @Const @ByRef SigmoidParameter sigmoid_param();
  public native SigmoidParameter release_sigmoid_param();
  public native SigmoidParameter mutable_sigmoid_param();
  public native void set_allocated_sigmoid_param(SigmoidParameter sigmoid_param);

  // optional .caffe.SoftmaxParameter softmax_param = 39;
  public native @Cast("bool") boolean has_softmax_param();
  public native void clear_softmax_param();
  @MemberGetter public static native int kSoftmaxParamFieldNumber();
  public static final int kSoftmaxParamFieldNumber = kSoftmaxParamFieldNumber();
  public native @Const @ByRef SoftmaxParameter softmax_param();
  public native SoftmaxParameter release_softmax_param();
  public native SoftmaxParameter mutable_softmax_param();
  public native void set_allocated_softmax_param(SoftmaxParameter softmax_param);

  // optional .caffe.ContrastiveLossParameter contrastive_loss_param = 40;
  public native @Cast("bool") boolean has_contrastive_loss_param();
  public native void clear_contrastive_loss_param();
  @MemberGetter public static native int kContrastiveLossParamFieldNumber();
  public static final int kContrastiveLossParamFieldNumber = kContrastiveLossParamFieldNumber();
  public native @Const @ByRef ContrastiveLossParameter contrastive_loss_param();
  public native ContrastiveLossParameter release_contrastive_loss_param();
  public native ContrastiveLossParameter mutable_contrastive_loss_param();
  public native void set_allocated_contrastive_loss_param(ContrastiveLossParameter contrastive_loss_param);

  // optional .caffe.ExpParameter exp_param = 41;
  public native @Cast("bool") boolean has_exp_param();
  public native void clear_exp_param();
  @MemberGetter public static native int kExpParamFieldNumber();
  public static final int kExpParamFieldNumber = kExpParamFieldNumber();
  public native @Const @ByRef ExpParameter exp_param();
  public native ExpParameter release_exp_param();
  public native ExpParameter mutable_exp_param();
  public native void set_allocated_exp_param(ExpParameter exp_param);

  // optional .caffe.LossParameter loss_param = 42;
  public native @Cast("bool") boolean has_loss_param();
  public native void clear_loss_param();
  @MemberGetter public static native int kLossParamFieldNumber();
  public static final int kLossParamFieldNumber = kLossParamFieldNumber();
  public native @Const @ByRef LossParameter loss_param();
  public native LossParameter release_loss_param();
  public native LossParameter mutable_loss_param();
  public native void set_allocated_loss_param(LossParameter loss_param);

  // optional .caffe.V1LayerParameter.LayerType type = 5;
  public native @Cast("bool") boolean has_type();
  public native void clear_type();
  @MemberGetter public static native int kTypeFieldNumber();
  public static final int kTypeFieldNumber = kTypeFieldNumber();
  public native @Cast("caffe::V1LayerParameter_LayerType") int type();
  public native void set_type(@Cast("caffe::V1LayerParameter_LayerType") int value);
}
