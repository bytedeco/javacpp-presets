// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.javacpp.opencv_core;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.opencv_core.opencv_core.*;

// #endif

// #ifdef __cplusplus

@Namespace("cv") @NoOffset @Properties(inherit = org.bytedeco.javacpp.opencv_core.opencv_core_presets.class)
public class float16_t extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public float16_t(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public float16_t(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public float16_t position(long position) {
        return (float16_t)super.position(position);
    }

// #if CV_FP16_TYPE

// #else
    public float16_t() { super((Pointer)null); allocate(); }
    private native void allocate();
    public float16_t(float x) { super((Pointer)null); allocate(x); }
    private native void allocate(float x);

    public native @Name("operator float") float asFloat();

    public static native @ByVal float16_t fromBits(@Cast("ushort") short b);
    public static native @ByVal @Name("zero") float16_t _zero();
    public native @Cast("ushort") short bits();
}