// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.javacpp.opencv_text;

import org.bytedeco.javacpp.annotation.Index;
import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.javacpp.opencv_core.*;
import static org.bytedeco.javacpp.opencv_core.opencv_core.*;
import org.bytedeco.javacpp.opencv_imgproc.*;
import static org.bytedeco.javacpp.opencv_imgproc.opencv_imgproc.*;
import org.bytedeco.javacpp.opencv_dnn.*;
import static org.bytedeco.javacpp.opencv_dnn.opencv_dnn.*;
import org.bytedeco.javacpp.opencv_imgcodecs.*;
import static org.bytedeco.javacpp.opencv_imgcodecs.opencv_imgcodecs.*;
import org.bytedeco.javacpp.opencv_videoio.*;
import static org.bytedeco.javacpp.opencv_videoio.opencv_videoio.*;
import org.bytedeco.javacpp.opencv_highgui.*;
import static org.bytedeco.javacpp.opencv_highgui.opencv_highgui.*;
import org.bytedeco.javacpp.opencv_flann.*;
import static org.bytedeco.javacpp.opencv_flann.opencv_flann.*;
import org.bytedeco.javacpp.opencv_features2d.*;
import static org.bytedeco.javacpp.opencv_features2d.opencv_features2d.*;
import org.bytedeco.javacpp.opencv_ml.*;
import static org.bytedeco.javacpp.opencv_ml.opencv_ml.*;

import static org.bytedeco.javacpp.opencv_text.opencv_text.*;


/** \addtogroup text_detect
 *  \{
<p>
/** \brief An abstract class providing interface for text detection algorithms
 */
@Namespace("cv::text") @Properties(inherit = org.bytedeco.javacpp.opencv_text.opencv_text_presets.class)
public class TextDetector extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public TextDetector(Pointer p) { super(p); }

    /**
    \brief Method that provides a quick and simple interface to detect text inside an image
    <p>
    @param inputImage an image to process
    @param Bbox a vector of Rect that will store the detected word bounding box
    @param confidence a vector of float that will be updated with the confidence the classifier has for the selected bounding box
    */
    public native void detect(@ByVal Mat inputImage, @ByRef RectVector Bbox, @StdVector FloatPointer confidence);
    public native void detect(@ByVal Mat inputImage, @ByRef RectVector Bbox, @StdVector FloatBuffer confidence);
    public native void detect(@ByVal Mat inputImage, @ByRef RectVector Bbox, @StdVector float[] confidence);
    public native void detect(@ByVal UMat inputImage, @ByRef RectVector Bbox, @StdVector FloatPointer confidence);
    public native void detect(@ByVal UMat inputImage, @ByRef RectVector Bbox, @StdVector FloatBuffer confidence);
    public native void detect(@ByVal UMat inputImage, @ByRef RectVector Bbox, @StdVector float[] confidence);
    public native void detect(@ByVal GpuMat inputImage, @ByRef RectVector Bbox, @StdVector FloatPointer confidence);
    public native void detect(@ByVal GpuMat inputImage, @ByRef RectVector Bbox, @StdVector FloatBuffer confidence);
    public native void detect(@ByVal GpuMat inputImage, @ByRef RectVector Bbox, @StdVector float[] confidence);
}