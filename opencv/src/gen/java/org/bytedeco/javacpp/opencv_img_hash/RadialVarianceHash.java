// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.javacpp.opencv_img_hash;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import org.bytedeco.javacpp.opencv_core.*;
import static org.bytedeco.javacpp.opencv_core.opencv_core.*;
import org.bytedeco.javacpp.opencv_imgproc.*;
import static org.bytedeco.javacpp.opencv_imgproc.opencv_imgproc.*;

import static org.bytedeco.javacpp.opencv_img_hash.opencv_img_hash.*;


/** \addtogroup img_hash
 *  \{
<p>
<p>
/** \brief Image hash based on Radon transform.
<p>
See \cite tang2012perceptual for details.
*/
@Namespace("cv::img_hash") @Properties(inherit = org.bytedeco.javacpp.opencv_img_hash.opencv_img_hash_presets.class)
public class RadialVarianceHash extends ImgHashBase {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public RadialVarianceHash(Pointer p) { super(p); }

    public static native @Ptr RadialVarianceHash create(double sigma/*=1*/, int numOfAngleLine/*=180*/);
    public static native @Ptr RadialVarianceHash create();

    public native int getNumOfAngleLine();
    public native double getSigma();

    public native void setNumOfAngleLine(int value);
    public native void setSigma(double value);

    // internals
    public native @StdVector DoublePointer getFeatures();
    public native @ByVal Mat getHash();
    public native @ByVal Mat getPixPerLine(@Const @ByRef Mat input);
    public native @ByVal Mat getProjection();
}