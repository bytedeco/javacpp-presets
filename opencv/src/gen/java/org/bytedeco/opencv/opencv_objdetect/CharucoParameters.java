// Targeted by JavaCPP version 1.5.10: DO NOT EDIT THIS FILE

package org.bytedeco.opencv.opencv_objdetect;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;
import org.bytedeco.opencv.opencv_core.*;
import static org.bytedeco.opencv.global.opencv_core.*;
import org.bytedeco.opencv.opencv_imgproc.*;
import static org.bytedeco.opencv.global.opencv_imgproc.*;
import static org.bytedeco.opencv.global.opencv_imgcodecs.*;
import org.bytedeco.opencv.opencv_videoio.*;
import static org.bytedeco.opencv.global.opencv_videoio.*;
import org.bytedeco.opencv.opencv_highgui.*;
import static org.bytedeco.opencv.global.opencv_highgui.*;
import org.bytedeco.opencv.opencv_flann.*;
import static org.bytedeco.opencv.global.opencv_flann.*;
import org.bytedeco.opencv.opencv_features2d.*;
import static org.bytedeco.opencv.global.opencv_features2d.*;
import org.bytedeco.opencv.opencv_calib3d.*;
import static org.bytedeco.opencv.global.opencv_calib3d.*;
import org.bytedeco.opencv.opencv_dnn.*;
import static org.bytedeco.opencv.global.opencv_dnn.*;

import static org.bytedeco.opencv.global.opencv_objdetect.*;


/** \addtogroup objdetect_aruco
 *  \{ */

@Namespace("cv::aruco") @NoOffset @Properties(inherit = org.bytedeco.opencv.presets.opencv_objdetect.class)
public class CharucoParameters extends Pointer {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CharucoParameters(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CharucoParameters(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public CharucoParameters position(long position) {
        return (CharucoParameters)super.position(position);
    }
    @Override public CharucoParameters getPointer(long i) {
        return new CharucoParameters((Pointer)this).offsetAddress(i);
    }

    public CharucoParameters() { super((Pointer)null); allocate(); }
    private native void allocate();
    /** cameraMatrix optional 3x3 floating-point camera matrix */
    public native @ByRef Mat cameraMatrix(); public native CharucoParameters cameraMatrix(Mat setter);

    /** distCoeffs optional vector of distortion coefficients */
    public native @ByRef Mat distCoeffs(); public native CharucoParameters distCoeffs(Mat setter);

    /** minMarkers number of adjacent markers that must be detected to return a charuco corner, default = 2 */
    public native int minMarkers(); public native CharucoParameters minMarkers(int setter);

    /** try to use refine board, default false */
    public native @Cast("bool") boolean tryRefineMarkers(); public native CharucoParameters tryRefineMarkers(boolean setter);
}
