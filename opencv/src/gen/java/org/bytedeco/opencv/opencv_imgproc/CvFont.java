// Targeted by JavaCPP version 1.5.6-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.opencv.opencv_imgproc;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.javacpp.presets.javacpp.*;
import static org.bytedeco.openblas.global.openblas_nolapack.*;
import static org.bytedeco.openblas.global.openblas.*;
import org.bytedeco.opencv.opencv_core.*;
import static org.bytedeco.opencv.global.opencv_core.*;

import static org.bytedeco.opencv.global.opencv_imgproc.*;



/** Font structure */
@Properties(inherit = org.bytedeco.opencv.presets.opencv_imgproc.class)
public class CvFont extends AbstractCvFont {
    static { Loader.load(); }
    /** Default native constructor. */
    public CvFont() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public CvFont(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public CvFont(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public CvFont position(long position) {
        return (CvFont)super.position(position);
    }
    @Override public CvFont getPointer(long i) {
        return new CvFont((Pointer)this).position(position + i);
    }

  public native @Cast("const char*") BytePointer nameFont(); public native CvFont nameFont(BytePointer setter);   //Qt:nameFont
  public native @ByRef CvScalar color(); public native CvFont color(CvScalar setter);       //Qt:ColorFont -> cvScalar(blue_component, green_component, red_component[, alpha_component])
    public native int font_face(); public native CvFont font_face(int setter);    //Qt: bool italic         /** =CV_FONT_* */
    /** font data and metrics */
    public native @Const IntPointer ascii(); public native CvFont ascii(IntPointer setter);
    public native @Const IntPointer greek(); public native CvFont greek(IntPointer setter);
    public native @Const IntPointer cyrillic(); public native CvFont cyrillic(IntPointer setter);
    public native float hscale(); public native CvFont hscale(float setter);
    public native float vscale(); public native CvFont vscale(float setter);
    /** slope coefficient: 0 - normal, >0 - italic */
    public native float shear(); public native CvFont shear(float setter);
    /** Qt: weight               /** letters thickness */
    public native int thickness(); public native CvFont thickness(int setter);
    /** horizontal interval between letters */
    public native float dx(); public native CvFont dx(float setter);
    /** Qt: PointSize */
    public native int line_type(); public native CvFont line_type(int setter);
}
