diff -ruN opencv-3.4.1/modules/java/CMakeLists.txt opencv-3.4.1-java/modules/java/CMakeLists.txt
--- opencv-3.4.1/modules/java/CMakeLists.txt	2018-02-23 17:38:33.000000000 +0900
+++ opencv-3.4.1-java/modules/java/CMakeLists.txt	2018-03-16 23:52:42.142247178 +0900
@@ -3,13 +3,6 @@
   add_subdirectory(generator)
 endif()
 
-if(APPLE_FRAMEWORK OR WINRT OR NOT PYTHON_DEFAULT_AVAILABLE OR NOT ANT_EXECUTABLE
-    OR NOT (JNI_FOUND OR (ANDROID AND ANDROID_NATIVE_API_LEVEL GREATER 7))
-    OR BUILD_opencv_world
-    )
-  ocv_module_disable(java)
-endif()
-
 set(the_description "The java bindings")
 ocv_add_module(java BINDINGS opencv_core opencv_imgproc PRIVATE_REQUIRED opencv_java_bindings_generator)
 
@@ -56,11 +49,6 @@
 
 
 add_subdirectory(jni)  # generates ${the_module} target (${the_module}_jni doesn't work properly with Android samples)
-if(ANDROID)
-  add_subdirectory(android_sdk)  # generates ${the_module}_android target
-else()
-  add_subdirectory(jar)  # generates ${the_module}_jar target
-endif()
 
 if(BUILD_TESTS)
   if(ANDROID)
diff -ruN opencv-3.4.1/modules/java/common.cmake opencv-3.4.1-java/modules/java/common.cmake
--- opencv-3.4.1/modules/java/common.cmake	2018-02-23 17:38:33.000000000 +0900
+++ opencv-3.4.1-java/modules/java/common.cmake	2018-03-16 23:52:42.142247178 +0900
@@ -1,10 +1,3 @@
-if(ANDROID)
-  ocv_update(OPENCV_JAVA_LIB_NAME_SUFFIX "${OPENCV_VERSION_MAJOR}")
-  ocv_update(JAVA_INSTALL_ROOT "sdk/java")
-else()
-  ocv_update(OPENCV_JAVA_LIB_NAME_SUFFIX "${OPENCV_VERSION_MAJOR}${OPENCV_VERSION_MINOR}${OPENCV_VERSION_PATCH}")
-endif()
-
 # get list of modules to wrap
 # message(STATUS "Wrapped in java:")
 set(OPENCV_JAVA_MODULES)
diff -ruN opencv-3.4.1/modules/java/generator/CMakeLists.txt opencv-3.4.1-java/modules/java/generator/CMakeLists.txt
--- opencv-3.4.1/modules/java/generator/CMakeLists.txt	2018-02-23 17:38:33.000000000 +0900
+++ opencv-3.4.1-java/modules/java/generator/CMakeLists.txt	2018-03-17 18:16:40.950630600 +0900
@@ -5,9 +5,6 @@
 set(OPENCV_JAVA_SIGNATURES_FILE "${CMAKE_CURRENT_BINARY_DIR}/opencv_java_signatures.json" CACHE INTERNAL "")
 set(OPENCV_JAVA_BINDINGS_DIR "${CMAKE_CURRENT_BINARY_DIR}" CACHE INTERNAL "")
 
-file(REMOVE_RECURSE "${OPENCV_JAVA_BINDINGS_DIR}/gen")
-file(REMOVE "${OPENCV_DEPHELPER}/gen_opencv_java_source")  # force re-run after CMake
-
 # This file is included from a subdirectory
 set(JAVA_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}/..")
 include(${JAVA_SOURCE_DIR}/common.cmake)
@@ -75,7 +72,6 @@
 endif()
 if(NOT "${__content}" STREQUAL "${__config_str}")
   file(WRITE "${CONFIG_FILE}" "${__config_str}")
-  file(REMOVE "${OPENCV_DEPHELPER}/gen_opencv_java_source")
 endif()
 unset(__config_str)
 
diff -ruN opencv-3.4.1/modules/java/jni/CMakeLists.txt opencv-3.4.1-java/modules/java/jni/CMakeLists.txt
--- opencv-3.4.1/modules/java/jni/CMakeLists.txt	2018-02-23 17:38:33.000000000 +0900
+++ opencv-3.4.1-java/modules/java/jni/CMakeLists.txt	2018-03-17 00:21:57.392355926 +0900
@@ -19,6 +19,9 @@
 elseif(APPLE)
   set(CMAKE_SHARED_MODULE_SUFFIX ".dylib")  # Java is not able to load .so files
 endif()
+if(NOT BUILD_SHARED_LIBS)
+  set(__type STATIC)
+endif()
 ocv_add_library(${the_module} ${__type}
     ${handwritten_h_sources} ${handwritten_cpp_sources} ${generated_cpp_sources}
     ${copied_files}
@@ -56,6 +59,8 @@
   ocv_target_link_libraries(${the_module} LINK_PRIVATE ${__deps} ${OPENCV_LINKER_LIBS})
 endif()
 
+string(REPLACE "<CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG><TARGET_SONAME>" "" CMAKE_CXX_CREATE_SHARED_MODULE "${CMAKE_CXX_CREATE_SHARED_MODULE}")
+
 # Additional target properties
 set_target_properties(${the_module} PROPERTIES
     OUTPUT_NAME "${the_module}${OPENCV_JAVA_LIB_NAME_SUFFIX}"
