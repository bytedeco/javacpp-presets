language: java
sudo: required
dist: trusty
matrix:
   include:

## Linux x86

      - jdk: oraclejdk7
        os: linux
        env: PROJ=artoolkitplus OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=opencv:chilitags:flandmark:mxnet:caffe OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=cuda OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=ffmpeg OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=fftw OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=gsl OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=leptonica:tesseract OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=libdc1394 OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=libfreenect OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=llvm OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=tensorflow OS=linux-x86
      - jdk: oraclejdk7
        os: linux
        env: PROJ=videoinput OS=linux-x86

## Linux x86-64

      - jdk: oraclejdk7
        os: linux
        env: PROJ=artoolkitplus OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=opencv:chilitags:flandmark:mxnet:caffe OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=cuda OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=ffmpeg OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=fftw OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=gsl OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=leptonica:tesseract OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=libdc1394 OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=libfreenect OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=llvm OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=tensorflow OS=linux-x86_64
      - jdk: oraclejdk7
        os: linux
        env: PROJ=videoinput OS=linux-x86_64

### OSX

      - os: osx
        env: PROJ=artoolkitplus OS=macosx-x86_64
      - os: osx
        env: PROJ=opencv:chilitags:flandmark:mxnet:caffe OS=macosx-x86_64
      - os: osx
        env: PROJ=cuda OS=macosx-x86_64
      - os: osx
        env: PROJ=ffmpeg OS=macosx-x86_64
      - os: osx
        env: PROJ=fftw OS=macosx-x86_64
      - os: osx
        env: PROJ=gsl OS=macosx-x86_64
      - os: osx
        env: PROJ=leptonica:tesseract OS=macosx-x86_64
      - os: osx
        env: PROJ=libdc1394 OS=macosx-x86_64
      - os: osx
        env: PROJ=libfreenect OS=macosx-x86_64
      - os: osx
        env: PROJ=llvm OS=macosx-x86_64
      - os: osx
        env: PROJ=tensorflow OS=macosx-x86_64
      - os: osx
        env: PROJ=videoinput OS=macosx-x86_64

before_install:
   - git clone https://github.com/bytedeco/javacpp.git
   - cd javacpp
   - mvn install
   - cd ..
   - export PYTHON_BIN_PATH=$(which python) # For tensorflow
   - IFS=':' read -ra PROJ <<< "$PROJ"
   - if [ "$TRAVIS_OS_NAME" == "osx" ]; then export JAVA_HOME=$(/usr/libexec/java_home); fi
   - |
      if [ "$TRAVIS_OS_NAME" == "linux" ]; then
        if [ "$OS" == "linux-x86" ]; then
          sudo dpkg --add-architecture i386
          sudo apt-get update
          sudo apt-get install -q -y yasm:i386 nasm:i386 libc6:i386 libncurses5:i386 libstdc++6:i386 gcc-multilib g++-multilib
        else
          sudo apt-get update
          sudo apt-get install -q -y yasm nasm
        fi
      else
        brew install yasm nasm
      fi
   - |
      if [ "$PROJ" == "libfreenect" ] || [ "$PROJ" == "libdc1394" ]; then
        if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          if [ "$OS" == "linux-x86" ]; then
            sudo apt-get install -q -y libusb-1.0-0-dev:i386
          else
            sudo apt-get update
            sudo apt-get install -q -y libusb-1.0-0-dev
          fi
        else
          brew install libusb
        fi
      fi
   - |
      if [ "$PROJ" == "tensorflow" ]; then
        if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          sudo apt-get install -q -y swig python-numpy
        else
          brew tap homebrew/python
          brew install swig numpy
        fi
      fi
   - |
      if [ "${PROJ[0]}" == "opencv" ]; then
        if [ "$TRAVIS_OS_NAME" == "linux" ]; then
          if [ "$OS" == "linux-x86" ]; then
            sudo apt-get install -q -y libglib2.0-0:i386 libglib2.0-dev:i386
          fi
          sudo apt-get install -q -y libblas-dev
        fi
      fi
install:
###   - ./cppbuild.sh -platform $OS install ${PROJ[@]}
   - echo "install"
script:
   - |
    for proj in "${PROJ[@]}"; do
      mvn install -Djavacpp.platform=$OS -pl $proj
    done
cache:
   directories:
      - $HOME/.m2

