// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.liquidfun;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.liquidfun.global.liquidfun.*;


/** The features that intersect to form the contact point
 *  This must be 4 bytes or less. */
@Properties(inherit = org.bytedeco.liquidfun.presets.liquidfun.class)
public class b2ContactFeature extends Pointer {
    static { Loader.load(); }
    /** Default native constructor. */
    public b2ContactFeature() { super((Pointer)null); allocate(); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public b2ContactFeature(long size) { super((Pointer)null); allocateArray(size); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public b2ContactFeature(Pointer p) { super(p); }
    private native void allocate();
    private native void allocateArray(long size);
    @Override public b2ContactFeature position(long position) {
        return (b2ContactFeature)super.position(position);
    }

	/** enum b2ContactFeature::Type */
	public static final int
		e_vertex = 0,
		e_face = 1;

	/** Feature index on shapeA */
	public native @Cast("uint8") short indexA(); public native b2ContactFeature indexA(short indexA);
	/** Feature index on shapeB */
	public native @Cast("uint8") short indexB(); public native b2ContactFeature indexB(short indexB);
	/** The feature type on shapeA */
	public native @Cast("uint8") short typeA(); public native b2ContactFeature typeA(short typeA);
	/** The feature type on shapeB */
	public native @Cast("uint8") short typeB(); public native b2ContactFeature typeB(short typeB);
}
