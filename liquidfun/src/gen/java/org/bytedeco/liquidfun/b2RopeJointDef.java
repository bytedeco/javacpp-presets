// Targeted by JavaCPP version 1.5-SNAPSHOT: DO NOT EDIT THIS FILE

package org.bytedeco.liquidfun;

import java.nio.*;
import org.bytedeco.javacpp.*;
import org.bytedeco.javacpp.annotation.*;

import static org.bytedeco.liquidfun.global.liquidfun.*;


/** Rope joint definition. This requires two body anchor points and
 *  a maximum lengths.
 *  Note: by default the connected objects will not collide.
 *  see collideConnected in b2JointDef. */
@NoOffset @Properties(inherit = org.bytedeco.liquidfun.presets.liquidfun.class)
public class b2RopeJointDef extends b2JointDef {
    static { Loader.load(); }
    /** Pointer cast constructor. Invokes {@link Pointer#Pointer(Pointer)}. */
    public b2RopeJointDef(Pointer p) { super(p); }
    /** Native array allocator. Access with {@link Pointer#position(long)}. */
    public b2RopeJointDef(long size) { super((Pointer)null); allocateArray(size); }
    private native void allocateArray(long size);
    @Override public b2RopeJointDef position(long position) {
        return (b2RopeJointDef)super.position(position);
    }

	public b2RopeJointDef() { super((Pointer)null); allocate(); }
	private native void allocate();

	/** The local anchor point relative to bodyA's origin. */
	public native @ByRef b2Vec2 localAnchorA(); public native b2RopeJointDef localAnchorA(b2Vec2 localAnchorA);

	/** The local anchor point relative to bodyB's origin. */
	public native @ByRef b2Vec2 localAnchorB(); public native b2RopeJointDef localAnchorB(b2Vec2 localAnchorB);

	/** The maximum length of the rope.
	 *  Warning: this must be larger than b2_linearSlop or
	 *  the joint will have no effect. */
	public native @Cast("float32") float maxLength(); public native b2RopeJointDef maxLength(float maxLength);
}
